generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//-----------------------------------------------------------------//
// Author: Krish
// status: Open
model employees {
  id                       Int                          @id @default(autoincrement())
  emp_id                   String
  emp_office_details       employee_office_details      @relation(fields: [emp_office_details_id], references: [id])
  emp_office_details_id    Int
  emp_basic_details        employee_basic_details       @relation(fields: [emp_basic_details_id], references: [id])
  emp_basic_details_id     Int
  emp_personal_details     employee_personal_details    @relation(fields: [emp_personal_details_id], references: [id])
  emp_personal_details_id  Int
  emp_family_details       employee_family_details[]
  emp_nominee_details      employee_nominee_details[]
  emp_address_details      employee_address_details     @relation(fields: [emp_address_details_id], references: [id])
  emp_address_details_id   Int
  emp_increment_details    employee_increment_details[]
  emp_promotion_details    employee_promotion_details[]
  emp_transfer_details     employee_transfer_details[]
  emp_time_bound           employee_time_bound          @relation(fields: [emp_time_bound_id], references: [id])
  emp_time_bound_id        Int
  emp_salary_allow         employee_salary_allow[]
  emp_salary_deduction     employee_salary_deduction[]
  emp_join_details         employee_join_details        @relation(fields: [emp_join_details_id], references: [id])
  emp_join_details_id Int
}

model employee_office_details {
  id              Int         @id @default(autoincrement())
  office_name     String
  office_code     String
  ddo_designation String
  ddo_code        String
  district        String
  employee        employees[]
}

model employee_basic_details {
  id                  Int         @id @default(autoincrement())
  emp_id              String
  emp_image           String
  emp_name            String
  mode_of_recruitment String // Assuming you want to store it as a string, adjust as needed
  contact_no          String
  emg_contact_no      String
  aadhar_no           BigInt
  epic_no             String
  gender              Int // Assuming you want to store it as a string, adjust as needed
  pran                String
  emp_type            Int // Assuming you want to store it as a string, adjust as needed
  weight              Float
  height              Float
  cps                 BigInt
  gps                 BigInt
  dob                 DateTime
  employee            employees[]
}

model employee_personal_details {
  id                          Int         @id @default(autoincrement())
  married_status              Int
  identification_marks        String
  religion                    Int
  emp_categories              Int
  emp_home_state              String
  emp_district                String
  emp_blood_group             Int
  emp_health_status           Int
  emp_ltc_home_town           String
  emp_nearest_railway_station String
  emp_phy_health_type         Int
  emp_family                  Int
  emp_lang                    Int
  emp_lang_do                 String[]
  employee                    employees[]
}

model employee_family_details {
  id           Int       @id @default(autoincrement())
  name         String
  relation     String
  dob          String
  dependent    String
  employees    employees @relation(fields: [employees_id], references: [id])
  employees_id Int
}

model employee_nominee_details {
  id           Int       @id @default(autoincrement())
  nominee_name String
  relation     String
  percentage   Float
  address      String
  minor        String
  employees    employees @relation(fields: [employees_id], references: [id])
  employees_id Int
}

model employee_address_details {
  id                Int         @id @default(autoincrement())
  address_primary   String
  address_secondary String
  village           String
  post_office       String
  state             String
  district          String
  block_ulb         String
  pin_code          String
  police_station    String
  emp_address_same  String
  employee          employees[]
}

// -------------Employee Service History-----------------//
model employee_increment_details {
  id                  Int       @id @default(autoincrement())
  scale               String
  inc_date            String
  inc_amount          Float
  basic_pay_after_inc Float
  vide_order_no       String
  vide_order_date     String
  employees           employees @relation(fields: [employees_id], references: [id])
  employees_id        Int
}

model employee_promotion_details {
  id              Int       @id @default(autoincrement())
  designation     Json
  scale           Json
  vide_order_no   String
  vide_order_date String
  transfer        String
  employees       employees @relation(fields: [employees_id], references: [id])
  employees_id    Int
}

model employee_transfer_details {
  id                  Int       @id @default(autoincrement())
  designation         Json
  office              Json
  joining_date        String
  vide_order_no       String
  vide_order_date     String
  transfer_after_prom String
  employees           employees @relation(fields: [employees_id], references: [id])
  employees_id        Int
}

//-------------- Employee Service History---------------------//

//-------------- Employee SALARY DETAILS ---------------------//
model employee_salary_allow {
  id           Int       @id @default(autoincrement())
  name         String
  wfe_date     String
  amount_in    String
  employees    employees @relation(fields: [employees_id], references: [id])
  employees_id Int
}

model employee_salary_deduction {
  id           Int       @id @default(autoincrement())
  name         String
  wfe_date     String
  acnt_no      String
  amount_in    String
  employees    employees @relation(fields: [employees_id], references: [id])
  employees_id Int
}

//-------------- Employee SALARY DETAILS ---------------------//

//-------------- Employee Join Details ---------------------//
model employee_join_details {
  id                      Int         @id @default(autoincrement())
  department              Int
  designation             String
  task                    String
  class                   Int?
  doj                     String
  effective_pay_commision Int
  confirmation_order      String?
  pay_scale               String
  pay_band                String
  grade_pay               String
  doc                     String?
  basic_pay               String
  conf_order_number       String?
  deduction_type          Int
  conf_order_date         String?
  member_gis              String?
  appoint_authority       Int?
  gis_account             String?
  ulb                     Int?
  last_inc_order          String?
  name_of_service         String?
  last_inc_order_date     String?
  bank_name               String?
  wef_date                String?
  branch_name             String?
  pf_category             Int?
  acc_number              String?
  ifsc                    String?
  sen_grade_list          String?
  employee                employees[]
}

//-------------- Employee Join Details ---------------------//

model employee_time_bound {
  id           Int         @id @default(autoincrement())
  pay_scale    Json
  inc_amount   String
  bpay_aft_inc String
  vide_ord_no  String
  remarks      String
  employee     employees[]
}

//-----------------------------------------------------------------//
