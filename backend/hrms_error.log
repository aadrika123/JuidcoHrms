{"level":"error","message":"POST 0.5199629999988247 /api/v1/hrms/employee/create status = false, err = Cannot read properties of undefined (reading 'married_status') "}
{"level":"error","message":"POST 0.9226820000039879 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:42:34\n\n  39 if (isMany) {\n  40   return await tx[tableName].createMany({ data });\n  41 } else {\n→ 42   return await tx[tableName].create({\n         data: {\n           married_status: \"cw\",\n           identification_marks: \"Mole on left arm\",\n           emp_categories: \"we\",\n           emp_home_state: \"New York\",\n           emp_district: \"wce\",\n           emp_blood_group: \"cw\",\n           emp_health_status: \"cwe\",\n           emp_ltc_home_town: \"New York City\",\n           emp_nearest_railway_station: \"Grand Central Terminal\",\n           emp_phy_health_type: \"cwe\",\n           emp_family: \"cwe\",\n           emp_family_name: \"Smith\",\n           emp_office_name: \"XYZ Corporation\",\n           emp_org_name: \"ABC Corp\",\n           emp_lang: [\n             {\n               language: \"Hindi\",\n               emp_lang_do: [\n                 \"read\",\n                 \"write\",\n                 \"speak\"\n               ]\n             }\n           ],\n       +   religion: String\n         }\n       })\n\nArgument `religion` is missing. "}
{"level":"error","message":"GET 3.44422300000042 /api/v1/hrms/employee/get status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:268:24\n\n  265 }\n  266 \n  267 const [data, count] = await prisma.$transaction([\n→ 268   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            }\n          },\n          where: {\n            OR: [\n              {\n                emp_id: {\n                  equals: undefined,\n                  mode: \"insensitive\"\n                }\n              }\n            ]\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.6200150000004214 /api/v1/hrms/employee/get?page=1 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:268:24\n\n  265 }\n  266 \n  267 const [data, count] = await prisma.$transaction([\n→ 268   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            }\n          },\n          where: {\n            OR: [\n              {\n                emp_id: {\n                  equals: undefined,\n                  mode: \"insensitive\"\n                }\n              }\n            ]\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 3.657976000000417 /api/v1/hrms/employee/get?page=1 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_id: {\n                  equals: undefined,\n                  mode: \"insensitive\"\n                }\n              }\n            ]\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.6273360000050161 /api/v1/hrms/employee/get?page=1 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_id: {\n                  equals: undefined,\n                  mode: \"insensitive\"\n                }\n              }\n            ]\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.5864789999905042 /api/v1/hrms/employee/get?page=1&search=ad status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_id: {\n                  equals: undefined,\n                  mode: \"insensitive\"\n                }\n              }\n            ]\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.55528799998865 /api/v1/hrms/employee/get?page=1&search=ad&limit=10 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_id: {\n                  equals: undefined,\n                  mode: \"insensitive\"\n                }\n              }\n            ]\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 1.0686829999995098 /api/v1/hrms/employee/get?limit=10 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_id: {\n                  equals: undefined,\n                  mode: \"insensitive\"\n                }\n              }\n            ]\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"GET 0.6871499999979278 /api/v1/hrms/employee/get?limit=10&page=0 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -10\") "}
{"level":"error","message":"GET 3.9424279999993814 /api/v1/hrms/employee/get status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_id: {\n                  equals: undefined,\n                  mode: \"insensitive\"\n                }\n              }\n            ]\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 3.5851820000000316 /api/v1/hrms/employee/get status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.7983090000002449 /api/v1/hrms/employee/get status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"POST 0.6066739999987476 /api/v1/hrms/employee/create status = false, err = Cannot destructure property 'emp_education' of 'emp_education_details' as it is undefined. "}
{"level":"error","message":"GET 3.462735000000066 /api/v1/hrms/employee/count status = false, err = All elements of the array need to be Prisma Client promises. Hint: Please make sure you are not awaiting the Prisma client calls you intended to pass in the $transaction function. "}
{"level":"error","message":"POST 4.081206000000748 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:43:34\n\n  40 if (isMany) {\n  41   return await tx[tableName].createMany({ data });\n  42 } else {\n→ 43   return await tx[tableName].create({\n         data: {\n           office_name: \"XYZ123\",\n           office_code: \"XYZ123\",\n           ddo_code: \"DDO456\",\n           ddo_designation: \"Chief Officer\",\n           district: \"adc\",\n       +   emp_type: Int\n         }\n       })\n\nArgument `emp_type` is missing. "}
{"level":"error","message":"POST 0.6930579999971087 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:43:34\n\n  40 if (isMany) {\n  41   return await tx[tableName].createMany({ data });\n  42 } else {\n→ 43   return await tx[tableName].create({\n         data: {\n           office_name: \"XYZ123\",\n           office_code: \"XYZ123\",\n           ddo_code: \"DDO456\",\n           ddo_designation: \"Chief Officer\",\n           district: \"adc\",\n       +   emp_type: Int\n         }\n       })\n\nArgument `emp_type` is missing. "}
{"level":"error","message":"POST 0.587256000002526 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:43:34\n\n  40 if (isMany) {\n  41   return await tx[tableName].createMany({ data });\n  42 } else {\n→ 43   return await tx[tableName].create({\n         data: {\n           office_name: \"XYZ123\",\n           office_code: \"XYZ123\",\n           ddo_code: \"DDO456\",\n           ddo_designation: \"Chief Officer\",\n           district: \"adc\",\n       +   emp_type: Int\n         }\n       })\n\nArgument `emp_type` is missing. "}
{"level":"error","message":"POST 0.5084759999881499 /api/v1/hrms/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"POST 0.8433439999935217 /api/v1/hrms/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"POST 0.6224830000137445 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:43:34\n\n  40 if (isMany) {\n  41   return await tx[tableName].createMany({ data });\n  42 } else {\n→ 43   return await tx[tableName].create({\n         data: {\n           emp_image: \"path/to/image.jpg\",\n           emp_name: \"John Doe\",\n           mode_of_recruitment: \"casd\",\n           contact_no: \"123456789065\",\n           emg_contact_no: \"9876543210\",\n           aadhar_no: \"123456789012\",\n           epic_no: \"24233\",\n           gender: \"casd\",\n           pran: \"123456789012\",\n           emp_type: \"csdc\",\n           weight: \"70\",\n           height: \"175\",\n           cps: \"525\",\n           gps: \"5325\",\n           dob: \"1990-01-01T00:00:00.000Z\",\n       +   emp_id: String\n         }\n       })\n\nArgument `emp_id` is missing. "}
{"level":"error","message":"POST 0.40372199995908886 /api/v1/hrms/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"POST 0.37175299995578825 /api/v1/hrms/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
