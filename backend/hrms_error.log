{"level":"error","message":"Date & Time:- 2024-04-16T09:48:36.498Z POST 1.6218000000226311 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (31, null, 2024-04-16, 2024-04-16 15:18:36.152, null, 0, 1, 2024-04-16 15:18:36.234, 2024-04-16 15:18:36.234).` "}
{"level":"error","message":"Date & Time:- 2024-04-16T10:41:06.105Z POST 2.2398999999277294 /api/hrms/v1/employee/leave status = false, err = \nInvalid `prisma.employee_leave_details.create()` invocation in\nE:\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\employee\\empLeave.dao.ts:51:62\n\n  48   },\n  49 };\n  50 \n→ 51 const leaveRequest = await prisma.employee_leave_details.create({\n       data: {\n         employee_id: undefined,\n         emp_leave_type_id: 2,\n         leave_from: \"2024-04-17\",\n         leave_to: \"2024-04-19\",\n         total_days: 3,\n         leave_reason: \"\",\n         file_upload: \"\",\n         half_day: false,\n         leave_status: undefined,\n     +   emp_leave_type: {\n     +     create: employee_leave_typeCreateWithoutEmployee_leave_detailsInput | employee_leave_typeUncheckedCreateWithoutEmployee_leave_detailsInput,\n     +     connectOrCreate: employee_leave_typeCreateOrConnectWithoutEmployee_leave_detailsInput,\n     +     connect: employee_leave_typeWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `emp_leave_type` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-17T18:29:55.195Z POST 2.6178999999538064 /api/hrms/v1/employee/leave status = false, err = \nInvalid `prisma.employee_leave_details.create()` invocation in\nE:\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\employee\\empLeave.dao.ts:51:62\n\n  48   },\n  49 };\n  50 \n→ 51 const leaveRequest = await prisma.employee_leave_details.create({\n       data: {\n         employee_id: undefined,\n         emp_leave_type_id: 2,\n         leave_from: \"2024-04-10\",\n         leave_to: \"2024-04-19\",\n         total_days: 10,\n         leave_reason: \"\",\n         file_upload: \"\",\n         half_day: false,\n         leave_status: undefined,\n     +   emp_leave_type: {\n     +     create: employee_leave_typeCreateWithoutEmployee_leave_detailsInput | employee_leave_typeUncheckedCreateWithoutEmployee_leave_detailsInput,\n     +     connectOrCreate: employee_leave_typeCreateOrConnectWithoutEmployee_leave_detailsInput,\n     +     connect: employee_leave_typeWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `emp_leave_type` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-17T20:01:47.562Z GET 5.895300000000134 /api/hrms/v1/pension/leave_encashment status = false, err = \nInvalid `prisma.employee_leave_details.groupBy()` invocation in\nE:\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\pension\\leave_encashment.dao.ts:17:55\n\n  14  \n  15 getAll = async () => {\n  16   // const leave = await prisma.employee_leave_details.findMany();\n→ 17   const leave = await prisma.employee_leave_details.groupBy(\nUnknown nested field 'totalDays' for operation groupByemployee_leave_details does not match any query. "}
{"level":"error","message":"Date & Time:- 2024-04-17T20:02:50.946Z GET 6.0776999999980035 /api/hrms/v1/pension/leave_encashment status = false, err = \nInvalid `prisma.employee_leave_details.groupBy()` invocation in\nE:\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\pension\\leave_encashment.dao.ts:17:55\n\n  14  \n  15 getAll = async () => {\n  16   // const leave = await prisma.employee_leave_details.findMany();\n→ 17   const leave = await prisma.employee_leave_details.groupBy(\nUnknown nested field 'totalDays' for operation groupByemployee_leave_details does not match any query. "}
{"level":"error","message":"Date & Time:- 2024-04-17T20:31:57.880Z GET 0.7908000000170432 /api/hrms/v1/pension/leave_encashment status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `0A000`. Message: `ERROR: cached plan must not change result type` "}
{"level":"error","message":"Date & Time:- 2024-04-19T06:22:19.758Z GET 5.569700000000012 /api/hrms/v1/pension/leave_encashment status = false, err = data.map is not a function "}
{"level":"error","message":"Date & Time:- 2024-04-19T06:52:57.714Z GET 14.569000000003143 /api/hrms/v1/pension/leave_encashment status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42601`. Message: `ERROR: syntax error at or near \"::\"` "}
{"level":"error","message":"Date & Time:- 2024-04-19T06:53:38.399Z GET 13.700099999998201 /api/hrms/v1/pension/leave_encashment status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42601`. Message: `ERROR: syntax error at or near \"::\"` "}
{"level":"error","message":"Date & Time:- 2024-04-19T07:16:07.495Z GET 5.616900000000896 /api/hrms/v1/pension/leave_encashment status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42704`. Message: `ERROR: type \"number\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-04-19T07:20:57.233Z GET 3.9594000000006417 /api/hrms/v1/pension/leave_encashment status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42704`. Message: `ERROR: type \"number\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-04-19T07:22:25.403Z GET 3.888700000003155 /api/hrms/v1/pension/leave_encashment status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42704`. Message: `ERROR: type \"number\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-04-20T10:36:11.696Z GET 2.0491999983787537 /api/hrms/v1/pension/leave_encashment status = false, err = \nInvalid `prisma.leave_encashment.findMany()` invocation in\nE:\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\pension\\leave_encashment.dao.ts:12:49\n\n   9 \n  10 class Leave_encashment {\n  11     getAll = async () => {\n→ 12     const leave = await prisma.leave_encashment.findMany(\nError converting field \"status\" of expected non-nullable type \"Int\", found incompatible value of \"null\". "}
{"level":"error","message":"Date & Time:- 2024-04-20T10:36:11.752Z GET 0.8825000002980232 /api/hrms/v1/pension/leave_encashment status = false, err = \nInvalid `prisma.leave_encashment.findMany()` invocation in\nE:\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\pension\\leave_encashment.dao.ts:12:49\n\n   9 \n  10 class Leave_encashment {\n  11     getAll = async () => {\n→ 12     const leave = await prisma.leave_encashment.findMany(\nError converting field \"status\" of expected non-nullable type \"Int\", found incompatible value of \"null\". "}
{"level":"error","message":"Date & Time:- 2024-04-20T10:36:20.299Z GET 1.1616999991238117 /api/hrms/v1/pension/leave_encashment status = false, err = \nInvalid `prisma.leave_encashment.findMany()` invocation in\nE:\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\pension\\leave_encashment.dao.ts:12:49\n\n   9 \n  10 class Leave_encashment {\n  11     getAll = async () => {\n→ 12     const leave = await prisma.leave_encashment.findMany(\nError converting field \"status\" of expected non-nullable type \"Int\", found incompatible value of \"null\". "}
{"level":"error","message":"Date & Time:- 2024-04-20T10:36:20.314Z GET 1.5423000007867813 /api/hrms/v1/pension/leave_encashment status = false, err = \nInvalid `prisma.leave_encashment.findMany()` invocation in\nE:\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\pension\\leave_encashment.dao.ts:12:49\n\n   9 \n  10 class Leave_encashment {\n  11     getAll = async () => {\n→ 12     const leave = await prisma.leave_encashment.findMany(\nError converting field \"status\" of expected non-nullable type \"Int\", found incompatible value of \"null\". "}
{"level":"error","message":"Date & Time:- 2024-04-20T10:36:42.468Z GET 1.597800001502037 /api/hrms/v1/pension/leave_encashment status = false, err = \nInvalid `prisma.leave_encashment.findMany()` invocation in\nE:\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\pension\\leave_encashment.dao.ts:12:49\n\n   9 \n  10 class Leave_encashment {\n  11     getAll = async () => {\n→ 12     const leave = await prisma.leave_encashment.findMany(\nError converting field \"status\" of expected non-nullable type \"Int\", found incompatible value of \"null\". "}
{"level":"error","message":"Date & Time:- 2024-04-20T10:36:42.486Z GET 2.0924999974668026 /api/hrms/v1/pension/leave_encashment status = false, err = \nInvalid `prisma.leave_encashment.findMany()` invocation in\nE:\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\pension\\leave_encashment.dao.ts:12:49\n\n   9 \n  10 class Leave_encashment {\n  11     getAll = async () => {\n→ 12     const leave = await prisma.leave_encashment.findMany(\nError converting field \"status\" of expected non-nullable type \"Int\", found incompatible value of \"null\". "}
{"level":"error","message":"Date & Time:- 2024-04-20T10:39:09.254Z GET 8.346899999996822 /api/hrms/v1/pension/leave_encashment status = false, err = \nInvalid `prisma.leave_encashment.findMany()` invocation in\nE:\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\pension\\leave_encashment.dao.ts:12:49\n\n   9 \n  10 class Leave_encashment {\n  11     getAll = async () => {\n→ 12     const leave = await prisma.leave_encashment.findMany(\nError converting field \"status\" of expected non-nullable type \"Int\", found incompatible value of \"null\". "}
{"level":"error","message":"Date & Time:- 2024-04-20T10:39:09.285Z GET 2.1656000000002678 /api/hrms/v1/pension/leave_encashment status = false, err = \nInvalid `prisma.leave_encashment.findMany()` invocation in\nE:\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\pension\\leave_encashment.dao.ts:12:49\n\n   9 \n  10 class Leave_encashment {\n  11     getAll = async () => {\n→ 12     const leave = await prisma.leave_encashment.findMany(\nError converting field \"status\" of expected non-nullable type \"Int\", found incompatible value of \"null\". "}
{"level":"error","message":"Date & Time:- 2024-04-20T12:50:37.952Z PUT 4.668900000000576 /api/hrms/v1/pension/leave_encashment/updateLeaveEncashByEmployeeId/EMP912e43 status = false, err = \nInvalid `prisma.leave_encashment.updateMany()` invocation in\nE:\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\pension\\leave_encashment.dao.ts:33:74\n\n  30 \n  31 updateStatus = async (req: Request) => {\n  32     const { employee_id, status }:{ employee_id:any, status:any } = req.body;    \n→ 33         const updatedLeaveEncashment = await prisma.leave_encashment.updateMany({\n               where: {\n                 employee_id: \"EMP912e43\"\n               },\n               data: {\n                 status: \"1\"\n                         ~~~\n               }\n             })\n\nArgument `status`: Invalid value provided. Expected Int, NullableIntFieldUpdateOperationsInput or Null, provided String. "}
{"level":"error","message":"Date & Time:- 2024-04-20T12:51:27.502Z PUT 3.8299999999999272 /api/hrms/v1/pension/leave_encashment/updateLeaveEncashByEmployeeId/EMP912e43 status = false, err = \nInvalid `prisma.leave_encashment.updateMany()` invocation in\nE:\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\pension\\leave_encashment.dao.ts:33:74\n\n  30 \n  31 updateStatus = async (req: Request) => {\n  32     const { employee_id, status }:{ employee_id:any, status:number } = req.body;    \n→ 33         const updatedLeaveEncashment = await prisma.leave_encashment.updateMany({\n               where: {\n                 employee_id: \"EMP912e43\"\n               },\n               data: {\n                 status: \"1\"\n                         ~~~\n               }\n             })\n\nArgument `status`: Invalid value provided. Expected Int, NullableIntFieldUpdateOperationsInput or Null, provided String. "}
