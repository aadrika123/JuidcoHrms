{"level":"error","message":"Date & Time:- 2024-04-24T12:54:24.480Z POST 0.47402800001145806 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_type: 1,\n           office_name: \"4adsc\",\n           office_code: \"4adsc\",\n           ddo_code: \"23424\",\n           ddo_designation: \"asdcsd\",\n           district: 3\n                     ~\n         }\n       })\n\nArgument `district`: Invalid value provided. Expected String, provided Int. "}
{"level":"error","message":"Date & Time:- 2024-04-24T12:58:44.985Z POST 0.46143799999845214 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           married_status: \"Single\",\n           identification_marks: \"casd\",\n           religion: \"Muslim\",\n           emp_categories: \"ST\",\n           emp_home_state: \"Jharkhand\",\n           emp_district: \"Dumka\",\n                         ~~~~~~~\n           emp_blood_group: \"A-\",\n           emp_health_status: \"Fit\",\n           emp_ltc_home_town: \"Dhanbād\",\n           emp_nearest_railway_station: \"casdcsda\",\n           emp_phy_health_type: \"Physically Disabled\",\n           emp_family: \"Father\",\n           emp_family_name: \"Krish Vishwakarma\",\n           emp_office_name: undefined,\n           emp_org_name: undefined,\n           emp_lang: [\n             {\n               lang: \"Punjabi\",\n               lang_type: [\n                 \"write\"\n               ]\n             }\n           ]\n         }\n       })\n\nArgument `emp_district`: Invalid value provided. Expected Int, provided String. "}
{"level":"error","message":"Date & Time:- 2024-04-24T13:01:30.661Z POST 0.37833300000056624 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_salary_allow: {\n             create: []\n           },\n           emp_salary_deduction: {\n             create: [\n               {\n                 amount_in: null,\n                 name: null,\n                 wfe_date: null,\n                 acnt_no: null\n               }\n             ]\n           }\n         }\n       })\n\nArgument `amount_in` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-24T13:06:53.694Z POST 0.6227659999858588 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_salary_allow: {\n             create: [\n               {\n                 name: \"DA\",\n                 wfe_date: \"1111-11-11\",\n                 amount_in: 21212\n               }\n             ]\n           },\n           emp_salary_deduction: {\n             create: [\n               {\n                 name: \"PT\",\n                 wfe_date: \"0111-01-01\",\n                 acnt_no: \"212\"\n               },\n               {\n                 amount_in: null,\n                 name: null,\n                 wfe_date: null,\n                 acnt_no: null\n               }\n             ]\n           }\n         }\n       })\n\nArgument `amount_in` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-24T13:09:15.091Z POST 0.3378700000466779 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_salary_allow: {\n             create: [\n               {\n                 name: \"HRA\",\n                 wfe_date: \"1111-11-11\",\n                 amount_in: 2121\n               }\n             ]\n           },\n           emp_salary_deduction: {\n             create: [\n               {\n                 amount_in: 212,\n                 name: \"GPF\",\n                 wfe_date: \"1111-11-11\",\n                 acnt_no: \"212\"\n               },\n               {\n                 amount_in: null,\n                 name: null,\n                 wfe_date: null,\n                 acnt_no: null\n               }\n             ]\n           }\n         }\n       })\n\nArgument `amount_in` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-24T13:16:50.383Z POST 0.3239039999898523 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_salary_allow: {\n             create: [\n               {\n                 name: \"HRA\",\n                 wfe_date: \"1111-11-11\",\n                 amount_in: 212\n               }\n             ]\n           },\n           emp_salary_deduction: {\n             create: [\n               {\n                 name: \"PT\",\n                 wfe_date: \"1111-11-11\",\n                 acnt_no: \"212\"\n               },\n               {\n                 amount_in: null,\n                 name: null,\n                 wfe_date: null,\n                 acnt_no: null\n               }\n             ]\n           }\n         }\n       })\n\nArgument `amount_in` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-25T04:49:16.931Z POST 0.3367469999939203 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_salary_allow: {\n             create: [\n               {\n                 name: \"DA\",\n                 wfe_date: \"1111-11-11\",\n                 amount_in: 3232\n               }\n             ]\n           },\n           emp_salary_deduction: {\n             create: [\n               {\n                 amount_in: 427,\n                 name: \"EPF\",\n                 wfe_date: \"1111-11-11\",\n                 acnt_no: \"32323\"\n               },\n               {\n                 amount_in: null,\n                 name: null,\n                 wfe_date: null,\n                 acnt_no: null\n               }\n             ]\n           }\n         }\n       })\n\nArgument `amount_in` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-25T04:49:24.649Z POST 0.4467079999158159 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_salary_allow: {\n             create: [\n               {\n                 name: \"DA\",\n                 wfe_date: \"1111-11-11\",\n                 amount_in: 3232\n               }\n             ]\n           },\n           emp_salary_deduction: {\n             create: [\n               {\n                 amount_in: 427,\n                 name: \"EPF\",\n                 wfe_date: \"1111-11-11\",\n                 acnt_no: \"32323\"\n               },\n               {\n                 amount_in: null,\n                 name: null,\n                 wfe_date: null,\n                 acnt_no: null\n               }\n             ]\n           }\n         }\n       })\n\nArgument `amount_in` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-25T04:53:44.278Z POST 0.49531599995680153 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_salary_allow: {\n             create: [\n               {\n                 name: \"DA\",\n                 wfe_date: \"1111-11-11\",\n                 amount_in: 3232\n               }\n             ]\n           },\n           emp_salary_deduction: {\n             create: [\n               {\n                 amount_in: 427,\n                 name: \"EPF\",\n                 wfe_date: \"1111-11-11\",\n                 acnt_no: \"32323\"\n               },\n               {\n                 amount_in: null,\n                 name: null,\n                 wfe_date: null,\n                 acnt_no: null\n               }\n             ]\n           }\n         }\n       })\n\nArgument `amount_in` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-25T05:00:44.258Z POST 0.47176999994553626 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_salary_allow: {\n             create: [\n               {\n                 name: \"DA\",\n                 wfe_date: \"1111-11-11\",\n                 amount_in: 3232\n               }\n             ]\n           },\n           emp_salary_deduction: {\n             create: [\n               {\n                 amount_in: 427,\n                 name: \"EPF\",\n                 wfe_date: \"1111-11-11\",\n                 acnt_no: \"32323\"\n               },\n               {\n                 amount_in: null,\n                 name: null,\n                 wfe_date: null,\n                 acnt_no: null\n               }\n             ]\n           }\n         }\n       })\n\nArgument `amount_in` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-25T05:03:07.324Z POST 2.5748300000004747 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_salary_allow: {\n             create: [\n               {\n                 name: \"DA\",\n                 wfe_date: \"1111-11-11\",\n                 amount_in: 3232\n               }\n             ]\n           },\n           emp_salary_deduction: {\n             create: [\n               {\n                 amount_in: 427,\n                 name: \"EPF\",\n                 wfe_date: \"1111-11-11\",\n                 acnt_no: \"32323\"\n               },\n               {\n                 amount_in: null,\n                 name: null,\n                 wfe_date: null,\n                 acnt_no: null\n               }\n             ]\n           }\n         }\n       })\n\nArgument `amount_in` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-25T05:03:52.110Z POST 0.9692230000000563 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_salary_allow: {\n             create: [\n               {\n                 name: \"DA\",\n                 wfe_date: \"1111-11-11\",\n                 amount_in: 3232\n               }\n             ]\n           },\n           emp_salary_deduction: {\n             create: [\n               {\n                 amount_in: 427,\n                 name: \"EPF\",\n                 wfe_date: \"1111-11-11\",\n                 acnt_no: \"32323\"\n               },\n               {\n                 amount_in: null,\n                 name: null,\n                 wfe_date: null,\n                 acnt_no: null\n               }\n             ]\n           }\n         }\n       })\n\nArgument `amount_in` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-25T05:58:36.912Z POST 1.6105289999977686 /api/hrms/v1/pay/payroll/update-many status = false, err = \nInvalid `prisma.payroll_master.update()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:425:46\n\n  422 update_emp_payroll = async (req: Request) => {\n  423   const { status, id } = req.body;\n  424 \n→ 425   const data = await prisma.payroll_master.update({\n          where: {\n            id: undefined,\n        ?   emp_id_month_year?: payroll_masterEmp_idMonthYearCompoundUniqueInput,\n        ?   AND?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   OR?: payroll_masterWhereInput[],\n        ?   NOT?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   emp_id?: StringFilter | String,\n        ?   emp_name?: StringFilter | String,\n        ?   gross_pay?: FloatFilter | Float,\n        ?   leave_days?: IntFilter | Int,\n        ?   working_hour?: IntFilter | Int,\n        ?   total_allowance?: FloatFilter | Float,\n        ?   total_deductions?: FloatFilter | Float,\n        ?   non_billable?: IntFilter | Int,\n        ?   present_days?: IntFilter | Int,\n        ?   lwp_days?: IntFilter | Int,\n        ?   salary_deducted?: FloatFilter | Float,\n        ?   net_pay?: FloatFilter | Float,\n        ?   last_month_lwp_deduction?: FloatFilter | Float,\n        ?   status?: StringNullableFilter | String | Null,\n        ?   date?: DateTimeFilter | DateTime,\n        ?   month?: IntFilter | Int,\n        ?   year?: IntFilter | Int,\n        ?   created_at?: DateTimeFilter | DateTime,\n        ?   updated_at?: DateTimeFilter | DateTime\n          },\n          data: {\n            status: undefined\n          }\n        })\n\nArgument `where` of type payroll_masterWhereUniqueInput needs at least one of `id` or `emp_id_month_year` arguments. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-04-25T05:59:01.207Z POST 0.35669799998868257 /api/hrms/v1/pay/payroll/update-many status = false, err = \nInvalid `prisma.payroll_master.update()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:425:46\n\n  422 update_emp_payroll = async (req: Request) => {\n  423   const { status, id } = req.body;\n  424 \n→ 425   const data = await prisma.payroll_master.update({\n          where: {\n            id: undefined,\n        ?   emp_id_month_year?: payroll_masterEmp_idMonthYearCompoundUniqueInput,\n        ?   AND?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   OR?: payroll_masterWhereInput[],\n        ?   NOT?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   emp_id?: StringFilter | String,\n        ?   emp_name?: StringFilter | String,\n        ?   gross_pay?: FloatFilter | Float,\n        ?   leave_days?: IntFilter | Int,\n        ?   working_hour?: IntFilter | Int,\n        ?   total_allowance?: FloatFilter | Float,\n        ?   total_deductions?: FloatFilter | Float,\n        ?   non_billable?: IntFilter | Int,\n        ?   present_days?: IntFilter | Int,\n        ?   lwp_days?: IntFilter | Int,\n        ?   salary_deducted?: FloatFilter | Float,\n        ?   net_pay?: FloatFilter | Float,\n        ?   last_month_lwp_deduction?: FloatFilter | Float,\n        ?   status?: StringNullableFilter | String | Null,\n        ?   date?: DateTimeFilter | DateTime,\n        ?   month?: IntFilter | Int,\n        ?   year?: IntFilter | Int,\n        ?   created_at?: DateTimeFilter | DateTime,\n        ?   updated_at?: DateTimeFilter | DateTime\n          },\n          data: {\n            status: undefined\n          }\n        })\n\nArgument `where` of type payroll_masterWhereUniqueInput needs at least one of `id` or `emp_id_month_year` arguments. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-04-25T05:59:31.084Z POST 0.40821799999685027 /api/hrms/v1/pay/payroll/update-many status = false, err = \nInvalid `prisma.payroll_master.update()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:425:46\n\n  422 update_emp_payroll = async (req: Request) => {\n  423   const { status, id } = req.body;\n  424 \n→ 425   const data = await prisma.payroll_master.update({\n          where: {\n            id: undefined,\n        ?   emp_id_month_year?: payroll_masterEmp_idMonthYearCompoundUniqueInput,\n        ?   AND?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   OR?: payroll_masterWhereInput[],\n        ?   NOT?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   emp_id?: StringFilter | String,\n        ?   emp_name?: StringFilter | String,\n        ?   gross_pay?: FloatFilter | Float,\n        ?   leave_days?: IntFilter | Int,\n        ?   working_hour?: IntFilter | Int,\n        ?   total_allowance?: FloatFilter | Float,\n        ?   total_deductions?: FloatFilter | Float,\n        ?   non_billable?: IntFilter | Int,\n        ?   present_days?: IntFilter | Int,\n        ?   lwp_days?: IntFilter | Int,\n        ?   salary_deducted?: FloatFilter | Float,\n        ?   net_pay?: FloatFilter | Float,\n        ?   last_month_lwp_deduction?: FloatFilter | Float,\n        ?   status?: StringNullableFilter | String | Null,\n        ?   date?: DateTimeFilter | DateTime,\n        ?   month?: IntFilter | Int,\n        ?   year?: IntFilter | Int,\n        ?   created_at?: DateTimeFilter | DateTime,\n        ?   updated_at?: DateTimeFilter | DateTime\n          },\n          data: {\n            status: undefined\n          }\n        })\n\nArgument `where` of type payroll_masterWhereUniqueInput needs at least one of `id` or `emp_id_month_year` arguments. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-04-25T06:01:53.430Z POST 0.4079529999871738 /api/hrms/v1/pay/payroll/update status = false, err = \nInvalid `prisma.payroll_master.update()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:425:46\n\n  422 update_emp_payroll = async (req: Request) => {\n  423   const { status, id } = req.body;\n  424 \n→ 425   const data = await prisma.payroll_master.update({\n          where: {\n            id: undefined,\n        ?   emp_id_month_year?: payroll_masterEmp_idMonthYearCompoundUniqueInput,\n        ?   AND?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   OR?: payroll_masterWhereInput[],\n        ?   NOT?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   emp_id?: StringFilter | String,\n        ?   emp_name?: StringFilter | String,\n        ?   gross_pay?: FloatFilter | Float,\n        ?   leave_days?: IntFilter | Int,\n        ?   working_hour?: IntFilter | Int,\n        ?   total_allowance?: FloatFilter | Float,\n        ?   total_deductions?: FloatFilter | Float,\n        ?   non_billable?: IntFilter | Int,\n        ?   present_days?: IntFilter | Int,\n        ?   lwp_days?: IntFilter | Int,\n        ?   salary_deducted?: FloatFilter | Float,\n        ?   net_pay?: FloatFilter | Float,\n        ?   last_month_lwp_deduction?: FloatFilter | Float,\n        ?   status?: StringNullableFilter | String | Null,\n        ?   date?: DateTimeFilter | DateTime,\n        ?   month?: IntFilter | Int,\n        ?   year?: IntFilter | Int,\n        ?   created_at?: DateTimeFilter | DateTime,\n        ?   updated_at?: DateTimeFilter | DateTime\n          },\n          data: {\n            status: undefined\n          }\n        })\n\nArgument `where` of type payroll_masterWhereUniqueInput needs at least one of `id` or `emp_id_month_year` arguments. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-04-25T06:02:06.039Z POST 0.41431800002465025 /api/hrms/v1/pay/payroll/update-many status = false, err = \nInvalid `prisma.payroll_master.update()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:425:46\n\n  422 update_emp_payroll = async (req: Request) => {\n  423   const { status, id } = req.body;\n  424 \n→ 425   const data = await prisma.payroll_master.update({\n          where: {\n            id: undefined,\n        ?   emp_id_month_year?: payroll_masterEmp_idMonthYearCompoundUniqueInput,\n        ?   AND?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   OR?: payroll_masterWhereInput[],\n        ?   NOT?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   emp_id?: StringFilter | String,\n        ?   emp_name?: StringFilter | String,\n        ?   gross_pay?: FloatFilter | Float,\n        ?   leave_days?: IntFilter | Int,\n        ?   working_hour?: IntFilter | Int,\n        ?   total_allowance?: FloatFilter | Float,\n        ?   total_deductions?: FloatFilter | Float,\n        ?   non_billable?: IntFilter | Int,\n        ?   present_days?: IntFilter | Int,\n        ?   lwp_days?: IntFilter | Int,\n        ?   salary_deducted?: FloatFilter | Float,\n        ?   net_pay?: FloatFilter | Float,\n        ?   last_month_lwp_deduction?: FloatFilter | Float,\n        ?   status?: StringNullableFilter | String | Null,\n        ?   date?: DateTimeFilter | DateTime,\n        ?   month?: IntFilter | Int,\n        ?   year?: IntFilter | Int,\n        ?   created_at?: DateTimeFilter | DateTime,\n        ?   updated_at?: DateTimeFilter | DateTime\n          },\n          data: {\n            status: undefined\n          }\n        })\n\nArgument `where` of type payroll_masterWhereUniqueInput needs at least one of `id` or `emp_id_month_year` arguments. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-04-25T06:02:51.749Z POST 0.30040999996708706 /api/hrms/v1/pay/payroll/update-many status = false, err = \nInvalid `prisma.payroll_master.update()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:425:46\n\n  422 update_emp_payroll = async (req: Request) => {\n  423   const { status, id } = req.body;\n  424 \n→ 425   const data = await prisma.payroll_master.update({\n          where: {\n            id: undefined,\n        ?   emp_id_month_year?: payroll_masterEmp_idMonthYearCompoundUniqueInput,\n        ?   AND?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   OR?: payroll_masterWhereInput[],\n        ?   NOT?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   emp_id?: StringFilter | String,\n        ?   emp_name?: StringFilter | String,\n        ?   gross_pay?: FloatFilter | Float,\n        ?   leave_days?: IntFilter | Int,\n        ?   working_hour?: IntFilter | Int,\n        ?   total_allowance?: FloatFilter | Float,\n        ?   total_deductions?: FloatFilter | Float,\n        ?   non_billable?: IntFilter | Int,\n        ?   present_days?: IntFilter | Int,\n        ?   lwp_days?: IntFilter | Int,\n        ?   salary_deducted?: FloatFilter | Float,\n        ?   net_pay?: FloatFilter | Float,\n        ?   last_month_lwp_deduction?: FloatFilter | Float,\n        ?   status?: StringNullableFilter | String | Null,\n        ?   date?: DateTimeFilter | DateTime,\n        ?   month?: IntFilter | Int,\n        ?   year?: IntFilter | Int,\n        ?   created_at?: DateTimeFilter | DateTime,\n        ?   updated_at?: DateTimeFilter | DateTime\n          },\n          data: {\n            status: undefined\n          }\n        })\n\nArgument `where` of type payroll_masterWhereUniqueInput needs at least one of `id` or `emp_id_month_year` arguments. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-04-25T06:07:29.844Z POST 0.34144700004253536 /api/hrms/v1/pay/payroll/update-many status = false, err = \nInvalid `prisma.payroll_master.update()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:425:46\n\n  422 update_emp_payroll = async (req: Request) => {\n  423   const { status, id } = req.body;\n  424 \n→ 425   const data = await prisma.payroll_master.update({\n          where: {\n            id: undefined,\n        ?   emp_id_month_year?: payroll_masterEmp_idMonthYearCompoundUniqueInput,\n        ?   AND?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   OR?: payroll_masterWhereInput[],\n        ?   NOT?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   emp_id?: StringFilter | String,\n        ?   emp_name?: StringFilter | String,\n        ?   gross_pay?: FloatFilter | Float,\n        ?   leave_days?: IntFilter | Int,\n        ?   working_hour?: IntFilter | Int,\n        ?   total_allowance?: FloatFilter | Float,\n        ?   total_deductions?: FloatFilter | Float,\n        ?   non_billable?: IntFilter | Int,\n        ?   present_days?: IntFilter | Int,\n        ?   lwp_days?: IntFilter | Int,\n        ?   salary_deducted?: FloatFilter | Float,\n        ?   net_pay?: FloatFilter | Float,\n        ?   last_month_lwp_deduction?: FloatFilter | Float,\n        ?   status?: StringNullableFilter | String | Null,\n        ?   date?: DateTimeFilter | DateTime,\n        ?   month?: IntFilter | Int,\n        ?   year?: IntFilter | Int,\n        ?   created_at?: DateTimeFilter | DateTime,\n        ?   updated_at?: DateTimeFilter | DateTime\n          },\n          data: {\n            status: undefined\n          }\n        })\n\nArgument `where` of type payroll_masterWhereUniqueInput needs at least one of `id` or `emp_id_month_year` arguments. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-04-25T06:08:28.455Z POST 2.16807400000107 /api/hrms/v1/pay/payroll/update-many status = false, err = \nInvalid `prisma.payroll_master.update()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:425:46\n\n  422 update_emp_payroll = async (req: Request) => {\n  423   const { status, id } = req.body;\n  424 \n→ 425   const data = await prisma.payroll_master.update({\n          where: {\n            id: undefined,\n        ?   emp_id_month_year?: payroll_masterEmp_idMonthYearCompoundUniqueInput,\n        ?   AND?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   OR?: payroll_masterWhereInput[],\n        ?   NOT?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   emp_id?: StringFilter | String,\n        ?   emp_name?: StringFilter | String,\n        ?   gross_pay?: FloatFilter | Float,\n        ?   leave_days?: IntFilter | Int,\n        ?   working_hour?: IntFilter | Int,\n        ?   total_allowance?: FloatFilter | Float,\n        ?   total_deductions?: FloatFilter | Float,\n        ?   non_billable?: IntFilter | Int,\n        ?   present_days?: IntFilter | Int,\n        ?   lwp_days?: IntFilter | Int,\n        ?   salary_deducted?: FloatFilter | Float,\n        ?   net_pay?: FloatFilter | Float,\n        ?   last_month_lwp_deduction?: FloatFilter | Float,\n        ?   status?: StringNullableFilter | String | Null,\n        ?   date?: DateTimeFilter | DateTime,\n        ?   month?: IntFilter | Int,\n        ?   year?: IntFilter | Int,\n        ?   created_at?: DateTimeFilter | DateTime,\n        ?   updated_at?: DateTimeFilter | DateTime\n          },\n          data: {\n            status: undefined\n          }\n        })\n\nArgument `where` of type payroll_masterWhereUniqueInput needs at least one of `id` or `emp_id_month_year` arguments. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-04-25T06:09:30.061Z POST 0.5652980000013486 /api/hrms/v1/pay/payroll/update-many status = false, err = \nInvalid `prisma.payroll_master.update()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:425:46\n\n  422 update_emp_payroll = async (req: Request) => {\n  423   const { status, id } = req.body;\n  424 \n→ 425   const data = await prisma.payroll_master.update({\n          where: {\n            id: undefined,\n        ?   emp_id_month_year?: payroll_masterEmp_idMonthYearCompoundUniqueInput,\n        ?   AND?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   OR?: payroll_masterWhereInput[],\n        ?   NOT?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   emp_id?: StringFilter | String,\n        ?   emp_name?: StringFilter | String,\n        ?   gross_pay?: FloatFilter | Float,\n        ?   leave_days?: IntFilter | Int,\n        ?   working_hour?: IntFilter | Int,\n        ?   total_allowance?: FloatFilter | Float,\n        ?   total_deductions?: FloatFilter | Float,\n        ?   non_billable?: IntFilter | Int,\n        ?   present_days?: IntFilter | Int,\n        ?   lwp_days?: IntFilter | Int,\n        ?   salary_deducted?: FloatFilter | Float,\n        ?   net_pay?: FloatFilter | Float,\n        ?   last_month_lwp_deduction?: FloatFilter | Float,\n        ?   status?: StringNullableFilter | String | Null,\n        ?   date?: DateTimeFilter | DateTime,\n        ?   month?: IntFilter | Int,\n        ?   year?: IntFilter | Int,\n        ?   created_at?: DateTimeFilter | DateTime,\n        ?   updated_at?: DateTimeFilter | DateTime\n          },\n          data: {\n            status: undefined\n          }\n        })\n\nArgument `where` of type payroll_masterWhereUniqueInput needs at least one of `id` or `emp_id_month_year` arguments. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-04-25T06:09:30.496Z POST 0.36879900000349153 /api/hrms/v1/pay/payroll/update-many status = false, err = \nInvalid `prisma.payroll_master.update()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:425:46\n\n  422 update_emp_payroll = async (req: Request) => {\n  423   const { status, id } = req.body;\n  424 \n→ 425   const data = await prisma.payroll_master.update({\n          where: {\n            id: undefined,\n        ?   emp_id_month_year?: payroll_masterEmp_idMonthYearCompoundUniqueInput,\n        ?   AND?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   OR?: payroll_masterWhereInput[],\n        ?   NOT?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   emp_id?: StringFilter | String,\n        ?   emp_name?: StringFilter | String,\n        ?   gross_pay?: FloatFilter | Float,\n        ?   leave_days?: IntFilter | Int,\n        ?   working_hour?: IntFilter | Int,\n        ?   total_allowance?: FloatFilter | Float,\n        ?   total_deductions?: FloatFilter | Float,\n        ?   non_billable?: IntFilter | Int,\n        ?   present_days?: IntFilter | Int,\n        ?   lwp_days?: IntFilter | Int,\n        ?   salary_deducted?: FloatFilter | Float,\n        ?   net_pay?: FloatFilter | Float,\n        ?   last_month_lwp_deduction?: FloatFilter | Float,\n        ?   status?: StringNullableFilter | String | Null,\n        ?   date?: DateTimeFilter | DateTime,\n        ?   month?: IntFilter | Int,\n        ?   year?: IntFilter | Int,\n        ?   created_at?: DateTimeFilter | DateTime,\n        ?   updated_at?: DateTimeFilter | DateTime\n          },\n          data: {\n            status: undefined\n          }\n        })\n\nArgument `where` of type payroll_masterWhereUniqueInput needs at least one of `id` or `emp_id_month_year` arguments. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-04-25T06:09:30.680Z POST 0.44236800000362564 /api/hrms/v1/pay/payroll/update-many status = false, err = \nInvalid `prisma.payroll_master.update()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:425:46\n\n  422 update_emp_payroll = async (req: Request) => {\n  423   const { status, id } = req.body;\n  424 \n→ 425   const data = await prisma.payroll_master.update({\n          where: {\n            id: undefined,\n        ?   emp_id_month_year?: payroll_masterEmp_idMonthYearCompoundUniqueInput,\n        ?   AND?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   OR?: payroll_masterWhereInput[],\n        ?   NOT?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   emp_id?: StringFilter | String,\n        ?   emp_name?: StringFilter | String,\n        ?   gross_pay?: FloatFilter | Float,\n        ?   leave_days?: IntFilter | Int,\n        ?   working_hour?: IntFilter | Int,\n        ?   total_allowance?: FloatFilter | Float,\n        ?   total_deductions?: FloatFilter | Float,\n        ?   non_billable?: IntFilter | Int,\n        ?   present_days?: IntFilter | Int,\n        ?   lwp_days?: IntFilter | Int,\n        ?   salary_deducted?: FloatFilter | Float,\n        ?   net_pay?: FloatFilter | Float,\n        ?   last_month_lwp_deduction?: FloatFilter | Float,\n        ?   status?: StringNullableFilter | String | Null,\n        ?   date?: DateTimeFilter | DateTime,\n        ?   month?: IntFilter | Int,\n        ?   year?: IntFilter | Int,\n        ?   created_at?: DateTimeFilter | DateTime,\n        ?   updated_at?: DateTimeFilter | DateTime\n          },\n          data: {\n            status: undefined\n          }\n        })\n\nArgument `where` of type payroll_masterWhereUniqueInput needs at least one of `id` or `emp_id_month_year` arguments. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-04-25T06:09:30.879Z POST 0.3772749999916414 /api/hrms/v1/pay/payroll/update-many status = false, err = \nInvalid `prisma.payroll_master.update()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:425:46\n\n  422 update_emp_payroll = async (req: Request) => {\n  423   const { status, id } = req.body;\n  424 \n→ 425   const data = await prisma.payroll_master.update({\n          where: {\n            id: undefined,\n        ?   emp_id_month_year?: payroll_masterEmp_idMonthYearCompoundUniqueInput,\n        ?   AND?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   OR?: payroll_masterWhereInput[],\n        ?   NOT?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   emp_id?: StringFilter | String,\n        ?   emp_name?: StringFilter | String,\n        ?   gross_pay?: FloatFilter | Float,\n        ?   leave_days?: IntFilter | Int,\n        ?   working_hour?: IntFilter | Int,\n        ?   total_allowance?: FloatFilter | Float,\n        ?   total_deductions?: FloatFilter | Float,\n        ?   non_billable?: IntFilter | Int,\n        ?   present_days?: IntFilter | Int,\n        ?   lwp_days?: IntFilter | Int,\n        ?   salary_deducted?: FloatFilter | Float,\n        ?   net_pay?: FloatFilter | Float,\n        ?   last_month_lwp_deduction?: FloatFilter | Float,\n        ?   status?: StringNullableFilter | String | Null,\n        ?   date?: DateTimeFilter | DateTime,\n        ?   month?: IntFilter | Int,\n        ?   year?: IntFilter | Int,\n        ?   created_at?: DateTimeFilter | DateTime,\n        ?   updated_at?: DateTimeFilter | DateTime\n          },\n          data: {\n            status: undefined\n          }\n        })\n\nArgument `where` of type payroll_masterWhereUniqueInput needs at least one of `id` or `emp_id_month_year` arguments. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-04-25T06:09:31.563Z POST 0.359628000005614 /api/hrms/v1/pay/payroll/update-many status = false, err = \nInvalid `prisma.payroll_master.update()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:425:46\n\n  422 update_emp_payroll = async (req: Request) => {\n  423   const { status, id } = req.body;\n  424 \n→ 425   const data = await prisma.payroll_master.update({\n          where: {\n            id: undefined,\n        ?   emp_id_month_year?: payroll_masterEmp_idMonthYearCompoundUniqueInput,\n        ?   AND?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   OR?: payroll_masterWhereInput[],\n        ?   NOT?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   emp_id?: StringFilter | String,\n        ?   emp_name?: StringFilter | String,\n        ?   gross_pay?: FloatFilter | Float,\n        ?   leave_days?: IntFilter | Int,\n        ?   working_hour?: IntFilter | Int,\n        ?   total_allowance?: FloatFilter | Float,\n        ?   total_deductions?: FloatFilter | Float,\n        ?   non_billable?: IntFilter | Int,\n        ?   present_days?: IntFilter | Int,\n        ?   lwp_days?: IntFilter | Int,\n        ?   salary_deducted?: FloatFilter | Float,\n        ?   net_pay?: FloatFilter | Float,\n        ?   last_month_lwp_deduction?: FloatFilter | Float,\n        ?   status?: StringNullableFilter | String | Null,\n        ?   date?: DateTimeFilter | DateTime,\n        ?   month?: IntFilter | Int,\n        ?   year?: IntFilter | Int,\n        ?   created_at?: DateTimeFilter | DateTime,\n        ?   updated_at?: DateTimeFilter | DateTime\n          },\n          data: {\n            status: undefined\n          }\n        })\n\nArgument `where` of type payroll_masterWhereUniqueInput needs at least one of `id` or `emp_id_month_year` arguments. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-04-25T06:09:31.737Z POST 0.2801260000123875 /api/hrms/v1/pay/payroll/update-many status = false, err = \nInvalid `prisma.payroll_master.update()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:425:46\n\n  422 update_emp_payroll = async (req: Request) => {\n  423   const { status, id } = req.body;\n  424 \n→ 425   const data = await prisma.payroll_master.update({\n          where: {\n            id: undefined,\n        ?   emp_id_month_year?: payroll_masterEmp_idMonthYearCompoundUniqueInput,\n        ?   AND?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   OR?: payroll_masterWhereInput[],\n        ?   NOT?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   emp_id?: StringFilter | String,\n        ?   emp_name?: StringFilter | String,\n        ?   gross_pay?: FloatFilter | Float,\n        ?   leave_days?: IntFilter | Int,\n        ?   working_hour?: IntFilter | Int,\n        ?   total_allowance?: FloatFilter | Float,\n        ?   total_deductions?: FloatFilter | Float,\n        ?   non_billable?: IntFilter | Int,\n        ?   present_days?: IntFilter | Int,\n        ?   lwp_days?: IntFilter | Int,\n        ?   salary_deducted?: FloatFilter | Float,\n        ?   net_pay?: FloatFilter | Float,\n        ?   last_month_lwp_deduction?: FloatFilter | Float,\n        ?   status?: StringNullableFilter | String | Null,\n        ?   date?: DateTimeFilter | DateTime,\n        ?   month?: IntFilter | Int,\n        ?   year?: IntFilter | Int,\n        ?   created_at?: DateTimeFilter | DateTime,\n        ?   updated_at?: DateTimeFilter | DateTime\n          },\n          data: {\n            status: undefined\n          }\n        })\n\nArgument `where` of type payroll_masterWhereUniqueInput needs at least one of `id` or `emp_id_month_year` arguments. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-04-25T06:09:31.929Z POST 0.3160559999960242 /api/hrms/v1/pay/payroll/update-many status = false, err = \nInvalid `prisma.payroll_master.update()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:425:46\n\n  422 update_emp_payroll = async (req: Request) => {\n  423   const { status, id } = req.body;\n  424 \n→ 425   const data = await prisma.payroll_master.update({\n          where: {\n            id: undefined,\n        ?   emp_id_month_year?: payroll_masterEmp_idMonthYearCompoundUniqueInput,\n        ?   AND?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   OR?: payroll_masterWhereInput[],\n        ?   NOT?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   emp_id?: StringFilter | String,\n        ?   emp_name?: StringFilter | String,\n        ?   gross_pay?: FloatFilter | Float,\n        ?   leave_days?: IntFilter | Int,\n        ?   working_hour?: IntFilter | Int,\n        ?   total_allowance?: FloatFilter | Float,\n        ?   total_deductions?: FloatFilter | Float,\n        ?   non_billable?: IntFilter | Int,\n        ?   present_days?: IntFilter | Int,\n        ?   lwp_days?: IntFilter | Int,\n        ?   salary_deducted?: FloatFilter | Float,\n        ?   net_pay?: FloatFilter | Float,\n        ?   last_month_lwp_deduction?: FloatFilter | Float,\n        ?   status?: StringNullableFilter | String | Null,\n        ?   date?: DateTimeFilter | DateTime,\n        ?   month?: IntFilter | Int,\n        ?   year?: IntFilter | Int,\n        ?   created_at?: DateTimeFilter | DateTime,\n        ?   updated_at?: DateTimeFilter | DateTime\n          },\n          data: {\n            status: undefined\n          }\n        })\n\nArgument `where` of type payroll_masterWhereUniqueInput needs at least one of `id` or `emp_id_month_year` arguments. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-04-25T06:14:03.105Z POST 0.5876399999979185 /api/hrms/v1/pay/payroll/update-many status = false, err = \nInvalid `prisma.payroll_master.update()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:425:46\n\n  422 update_emp_payroll = async (req: Request) => {\n  423   const { status, id } = req.body;\n  424 \n→ 425   const data = await prisma.payroll_master.update({\n          where: {\n            id: undefined,\n        ?   emp_id_month_year?: payroll_masterEmp_idMonthYearCompoundUniqueInput,\n        ?   AND?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   OR?: payroll_masterWhereInput[],\n        ?   NOT?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   emp_id?: StringFilter | String,\n        ?   emp_name?: StringFilter | String,\n        ?   gross_pay?: FloatFilter | Float,\n        ?   leave_days?: IntFilter | Int,\n        ?   working_hour?: IntFilter | Int,\n        ?   total_allowance?: FloatFilter | Float,\n        ?   total_deductions?: FloatFilter | Float,\n        ?   non_billable?: IntFilter | Int,\n        ?   present_days?: IntFilter | Int,\n        ?   lwp_days?: IntFilter | Int,\n        ?   salary_deducted?: FloatFilter | Float,\n        ?   net_pay?: FloatFilter | Float,\n        ?   last_month_lwp_deduction?: FloatFilter | Float,\n        ?   status?: StringNullableFilter | String | Null,\n        ?   date?: DateTimeFilter | DateTime,\n        ?   month?: IntFilter | Int,\n        ?   year?: IntFilter | Int,\n        ?   created_at?: DateTimeFilter | DateTime,\n        ?   updated_at?: DateTimeFilter | DateTime,\n        ?   employees?: EmployeesRelationFilter | employeesWhereInput\n          },\n          data: {\n            status: undefined\n          }\n        })\n\nArgument `where` of type payroll_masterWhereUniqueInput needs at least one of `id` or `emp_id_month_year` arguments. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-04-25T06:23:08.909Z POST 2.447982999990927 /api/hrms/v1/pay/payroll/update-many status = false, err = \nInvalid `prisma.payroll_master.update()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:425:46\n\n  422 update_emp_payroll = async (req: Request) => {\n  423   const { status, id } = req.body;\n  424 \n→ 425   const data = await prisma.payroll_master.update({\n          where: {\n            id: undefined,\n        ?   emp_id_month_year?: payroll_masterEmp_idMonthYearCompoundUniqueInput,\n        ?   AND?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   OR?: payroll_masterWhereInput[],\n        ?   NOT?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   emp_id?: StringFilter | String,\n        ?   emp_name?: StringFilter | String,\n        ?   gross_pay?: FloatFilter | Float,\n        ?   leave_days?: IntFilter | Int,\n        ?   working_hour?: IntFilter | Int,\n        ?   total_allowance?: FloatFilter | Float,\n        ?   total_deductions?: FloatFilter | Float,\n        ?   non_billable?: IntFilter | Int,\n        ?   present_days?: IntFilter | Int,\n        ?   lwp_days?: IntFilter | Int,\n        ?   salary_deducted?: FloatFilter | Float,\n        ?   net_pay?: FloatFilter | Float,\n        ?   last_month_lwp_deduction?: FloatFilter | Float,\n        ?   status?: StringNullableFilter | String | Null,\n        ?   date?: DateTimeFilter | DateTime,\n        ?   month?: IntFilter | Int,\n        ?   year?: IntFilter | Int,\n        ?   created_at?: DateTimeFilter | DateTime,\n        ?   updated_at?: DateTimeFilter | DateTime,\n        ?   employees?: EmployeesRelationFilter | employeesWhereInput\n          },\n          data: {\n            status: undefined\n          }\n        })\n\nArgument `where` of type payroll_masterWhereUniqueInput needs at least one of `id` or `emp_id_month_year` arguments. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-04-25T06:24:30.936Z POST 2.4588050000002113 /api/hrms/v1/pay/payroll/update-many status = false, err = \nInvalid `prisma.payroll_master.update()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:425:46\n\n  422 update_emp_payroll = async (req: Request) => {\n  423   const { status, id } = req.body;\n  424 \n→ 425   const data = await prisma.payroll_master.update({\n          where: {\n            id: undefined,\n        ?   emp_id_month_year?: payroll_masterEmp_idMonthYearCompoundUniqueInput,\n        ?   AND?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   OR?: payroll_masterWhereInput[],\n        ?   NOT?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   emp_id?: StringFilter | String,\n        ?   emp_name?: StringFilter | String,\n        ?   gross_pay?: FloatFilter | Float,\n        ?   leave_days?: IntFilter | Int,\n        ?   working_hour?: IntFilter | Int,\n        ?   total_allowance?: FloatFilter | Float,\n        ?   total_deductions?: FloatFilter | Float,\n        ?   non_billable?: IntFilter | Int,\n        ?   present_days?: IntFilter | Int,\n        ?   lwp_days?: IntFilter | Int,\n        ?   salary_deducted?: FloatFilter | Float,\n        ?   net_pay?: FloatFilter | Float,\n        ?   last_month_lwp_deduction?: FloatFilter | Float,\n        ?   status?: StringNullableFilter | String | Null,\n        ?   date?: DateTimeFilter | DateTime,\n        ?   month?: IntFilter | Int,\n        ?   year?: IntFilter | Int,\n        ?   created_at?: DateTimeFilter | DateTime,\n        ?   updated_at?: DateTimeFilter | DateTime,\n        ?   employees?: EmployeesRelationFilter | employeesWhereInput\n          },\n          data: {\n            status: undefined\n          }\n        })\n\nArgument `where` of type payroll_masterWhereUniqueInput needs at least one of `id` or `emp_id_month_year` arguments. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-04-25T06:30:43.407Z POST 2.215028999999049 /api/hrms/v1/pay/payroll/update-many status = false, err = \nInvalid `prisma.payroll_master.update()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:425:46\n\n  422 update_emp_payroll = async (req: Request) => {\n  423   const { status, id } = req.body;\n  424 \n→ 425   const data = await prisma.payroll_master.update({\n          where: {\n            id: undefined,\n        ?   emp_id_month_year?: payroll_masterEmp_idMonthYearCompoundUniqueInput,\n        ?   AND?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   OR?: payroll_masterWhereInput[],\n        ?   NOT?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   emp_id?: StringFilter | String,\n        ?   emp_name?: StringFilter | String,\n        ?   gross_pay?: FloatFilter | Float,\n        ?   leave_days?: IntFilter | Int,\n        ?   working_hour?: IntFilter | Int,\n        ?   total_allowance?: FloatFilter | Float,\n        ?   total_deductions?: FloatFilter | Float,\n        ?   non_billable?: IntFilter | Int,\n        ?   present_days?: IntFilter | Int,\n        ?   lwp_days?: IntFilter | Int,\n        ?   salary_deducted?: FloatFilter | Float,\n        ?   net_pay?: FloatFilter | Float,\n        ?   last_month_lwp_deduction?: FloatFilter | Float,\n        ?   status?: StringNullableFilter | String | Null,\n        ?   date?: DateTimeFilter | DateTime,\n        ?   month?: IntFilter | Int,\n        ?   year?: IntFilter | Int,\n        ?   created_at?: DateTimeFilter | DateTime,\n        ?   updated_at?: DateTimeFilter | DateTime,\n        ?   employees?: EmployeesRelationFilter | employeesWhereInput\n          },\n          data: {\n            status: undefined\n          }\n        })\n\nArgument `where` of type payroll_masterWhereUniqueInput needs at least one of `id` or `emp_id_month_year` arguments. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-04-25T06:33:53.844Z POST 2.2070409999996627 /api/hrms/v1/pay/payroll/update-many status = false, err = \nInvalid `prisma.payroll_master.update()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:425:46\n\n  422 update_emp_payroll = async (req: Request) => {\n  423   const { status, id } = req.body;\n  424 \n→ 425   const data = await prisma.payroll_master.update({\n          where: {\n            id: undefined,\n        ?   emp_id_month_year?: payroll_masterEmp_idMonthYearCompoundUniqueInput,\n        ?   AND?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   OR?: payroll_masterWhereInput[],\n        ?   NOT?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   emp_id?: StringFilter | String,\n        ?   emp_name?: StringFilter | String,\n        ?   gross_pay?: FloatFilter | Float,\n        ?   leave_days?: IntFilter | Int,\n        ?   working_hour?: IntFilter | Int,\n        ?   total_allowance?: FloatFilter | Float,\n        ?   total_deductions?: FloatFilter | Float,\n        ?   non_billable?: IntFilter | Int,\n        ?   present_days?: IntFilter | Int,\n        ?   lwp_days?: IntFilter | Int,\n        ?   salary_deducted?: FloatFilter | Float,\n        ?   net_pay?: FloatFilter | Float,\n        ?   last_month_lwp_deduction?: FloatFilter | Float,\n        ?   status?: StringNullableFilter | String | Null,\n        ?   date?: DateTimeFilter | DateTime,\n        ?   month?: IntFilter | Int,\n        ?   year?: IntFilter | Int,\n        ?   created_at?: DateTimeFilter | DateTime,\n        ?   updated_at?: DateTimeFilter | DateTime,\n        ?   employees?: EmployeesRelationFilter | employeesWhereInput\n          },\n          data: {\n            status: undefined\n          }\n        })\n\nArgument `where` of type payroll_masterWhereUniqueInput needs at least one of `id` or `emp_id_month_year` arguments. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-04-25T06:34:18.340Z POST 2.2170560000004116 /api/hrms/v1/pay/payroll/update-many status = false, err = \nInvalid `prisma.payroll_master.update()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:425:46\n\n  422 update_emp_payroll = async (req: Request) => {\n  423   const { status, id } = req.body;\n  424 \n→ 425   const data = await prisma.payroll_master.update({\n          where: {\n            id: undefined,\n        ?   emp_id_month_year?: payroll_masterEmp_idMonthYearCompoundUniqueInput,\n        ?   AND?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   OR?: payroll_masterWhereInput[],\n        ?   NOT?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   emp_id?: StringFilter | String,\n        ?   emp_name?: StringFilter | String,\n        ?   gross_pay?: FloatFilter | Float,\n        ?   leave_days?: IntFilter | Int,\n        ?   working_hour?: IntFilter | Int,\n        ?   total_allowance?: FloatFilter | Float,\n        ?   total_deductions?: FloatFilter | Float,\n        ?   non_billable?: IntFilter | Int,\n        ?   present_days?: IntFilter | Int,\n        ?   lwp_days?: IntFilter | Int,\n        ?   salary_deducted?: FloatFilter | Float,\n        ?   net_pay?: FloatFilter | Float,\n        ?   last_month_lwp_deduction?: FloatFilter | Float,\n        ?   status?: StringNullableFilter | String | Null,\n        ?   date?: DateTimeFilter | DateTime,\n        ?   month?: IntFilter | Int,\n        ?   year?: IntFilter | Int,\n        ?   created_at?: DateTimeFilter | DateTime,\n        ?   updated_at?: DateTimeFilter | DateTime,\n        ?   employees?: EmployeesRelationFilter | employeesWhereInput\n          },\n          data: {\n            status: undefined\n          }\n        })\n\nArgument `where` of type payroll_masterWhereUniqueInput needs at least one of `id` or `emp_id_month_year` arguments. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-04-25T06:34:50.023Z POST 2.362772999998924 /api/hrms/v1/pay/payroll/update-many status = false, err = \nInvalid `prisma.payroll_master.update()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:425:46\n\n  422 update_emp_payroll = async (req: Request) => {\n  423   const { status, id } = req.body;\n  424 \n→ 425   const data = await prisma.payroll_master.update({\n          where: {\n            id: undefined,\n        ?   emp_id_month_year?: payroll_masterEmp_idMonthYearCompoundUniqueInput,\n        ?   AND?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   OR?: payroll_masterWhereInput[],\n        ?   NOT?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   emp_id?: StringFilter | String,\n        ?   emp_name?: StringFilter | String,\n        ?   gross_pay?: FloatFilter | Float,\n        ?   leave_days?: IntFilter | Int,\n        ?   working_hour?: IntFilter | Int,\n        ?   total_allowance?: FloatFilter | Float,\n        ?   total_deductions?: FloatFilter | Float,\n        ?   non_billable?: IntFilter | Int,\n        ?   present_days?: IntFilter | Int,\n        ?   lwp_days?: IntFilter | Int,\n        ?   salary_deducted?: FloatFilter | Float,\n        ?   net_pay?: FloatFilter | Float,\n        ?   last_month_lwp_deduction?: FloatFilter | Float,\n        ?   status?: StringNullableFilter | String | Null,\n        ?   date?: DateTimeFilter | DateTime,\n        ?   month?: IntFilter | Int,\n        ?   year?: IntFilter | Int,\n        ?   created_at?: DateTimeFilter | DateTime,\n        ?   updated_at?: DateTimeFilter | DateTime,\n        ?   employees?: EmployeesRelationFilter | employeesWhereInput\n          },\n          data: {\n            status: undefined\n          }\n        })\n\nArgument `where` of type payroll_masterWhereUniqueInput needs at least one of `id` or `emp_id_month_year` arguments. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-04-25T06:35:16.155Z POST 2.207268000000113 /api/hrms/v1/pay/payroll/update-many status = false, err = \nInvalid `prisma.payroll_master.update()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:425:46\n\n  422 update_emp_payroll = async (req: Request) => {\n  423   const { status, id } = req.body;\n  424 \n→ 425   const data = await prisma.payroll_master.update({\n          where: {\n            id: undefined,\n        ?   emp_id_month_year?: payroll_masterEmp_idMonthYearCompoundUniqueInput,\n        ?   AND?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   OR?: payroll_masterWhereInput[],\n        ?   NOT?: payroll_masterWhereInput | payroll_masterWhereInput[],\n        ?   emp_id?: StringFilter | String,\n        ?   emp_name?: StringFilter | String,\n        ?   gross_pay?: FloatFilter | Float,\n        ?   leave_days?: IntFilter | Int,\n        ?   working_hour?: IntFilter | Int,\n        ?   total_allowance?: FloatFilter | Float,\n        ?   total_deductions?: FloatFilter | Float,\n        ?   non_billable?: IntFilter | Int,\n        ?   present_days?: IntFilter | Int,\n        ?   lwp_days?: IntFilter | Int,\n        ?   salary_deducted?: FloatFilter | Float,\n        ?   net_pay?: FloatFilter | Float,\n        ?   last_month_lwp_deduction?: FloatFilter | Float,\n        ?   status?: StringNullableFilter | String | Null,\n        ?   date?: DateTimeFilter | DateTime,\n        ?   month?: IntFilter | Int,\n        ?   year?: IntFilter | Int,\n        ?   created_at?: DateTimeFilter | DateTime,\n        ?   updated_at?: DateTimeFilter | DateTime,\n        ?   employees?: EmployeesRelationFilter | employeesWhereInput\n          },\n          data: {\n            status: undefined\n          }\n        })\n\nArgument `where` of type payroll_masterWhereUniqueInput needs at least one of `id` or `emp_id_month_year` arguments. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-04-25T06:35:56.313Z POST 2.134538000000248 /api/hrms/v1/pay/payroll/update-many status = false, err = \nInvalid `prisma.payroll_master.updateMany()` invocation:\n\n{\n  data: [\n    {\n      working_hour: 32\n    }\n  ]\n  ~~~~~~~~~~~~~~~~~~~~\n}\n\nArgument `data`: Invalid value provided. Expected payroll_masterUpdateManyMutationInput or payroll_masterUncheckedUpdateManyInput, provided (Object). "}
{"level":"error","message":"Date & Time:- 2024-04-25T06:36:22.724Z POST 2.1481190000004062 /api/hrms/v1/pay/payroll/update-many status = false, err = \nInvalid `prisma.payroll_master.updateMany()` invocation:\n\n{\n  data: [\n    {\n      working_hour: 32\n    }\n  ],\n  ~~~~~~~~~~~~~~~~~~~~\n  where: {\n    emp_id: {\n      equals: \"EMP912e46\"\n    },\n    month: 4,\n    year: 2024\n  }\n}\n\nArgument `data`: Invalid value provided. Expected payroll_masterUpdateManyMutationInput or payroll_masterUncheckedUpdateManyInput, provided (Object). "}
{"level":"error","message":"Date & Time:- 2024-04-25T06:36:46.523Z POST 0.7029589999983727 /api/hrms/v1/pay/payroll/update-many status = false, err = \nInvalid `prisma.payroll_master.updateMany()` invocation:\n\n{\n  data: [\n    {\n      working_hour: undefined\n    }\n  ],\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  where: {\n    emp_id: {\n      equals: undefined\n    },\n    month: undefined,\n    year: undefined\n  }\n}\n\nArgument `data`: Invalid value provided. Expected payroll_masterUpdateManyMutationInput or payroll_masterUncheckedUpdateManyInput, provided (Object). "}
{"level":"error","message":"Date & Time:- 2024-04-25T11:44:38.718Z POST 0.6663599999956205 /api/hrms/v1/pay/payroll/download status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42601`. Message: `ERROR: syntax error at or near \"'Microsoft.Jet.OLEDB.4.0'\"` "}
{"level":"error","message":"Date & Time:- 2024-04-25T11:46:57.324Z POST 2.0872629999998935 /api/hrms/v1/pay/payroll/download status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42601`. Message: `ERROR: syntax error at or near \"format\"` "}
{"level":"error","message":"Date & Time:- 2024-04-25T11:47:30.846Z POST 2.103993000000628 /api/hrms/v1/pay/payroll/download status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42501`. Message: `ERROR: could not open file \"/Desktop\" for writing: Permission denied\nHINT: COPY TO instructs the PostgreSQL server process to write a file. You may want a client-side facility such as psql's \\copy.` "}
{"level":"error","message":"Date & Time:- 2024-04-25T11:49:37.492Z POST 2.139842999999928 /api/hrms/v1/pay/payroll/download status = false, err = \nInvalid `prisma.$queryRawUnsafe()` invocation:\n\n\nRaw query failed. Code: `42501`. Message: `ERROR: could not open file \"/Desktop\" for writing: Permission denied\nHINT: COPY TO instructs the PostgreSQL server process to write a file. You may want a client-side facility such as psql's \\copy.` "}
{"level":"error","message":"Date & Time:- 2024-04-25T11:51:08.868Z POST 2.2757680000004257 /api/hrms/v1/pay/payroll/download status = false, err = \nInvalid `prisma.$queryRawUnsafe()` invocation:\n\n\nRaw query failed. Code: `42809`. Message: `ERROR: could not open file \"/var\" for writing: Is a directory` "}
{"level":"error","message":"Date & Time:- 2024-04-25T11:51:38.946Z POST 2.114306000000397 /api/hrms/v1/pay/payroll/download status = false, err = \nInvalid `prisma.$queryRawUnsafe()` invocation:\n\n\nRaw query failed. Code: `42809`. Message: `ERROR: could not open file \"/tmp\" for writing: Is a directory` "}
{"level":"error","message":"Date & Time:- 2024-04-25T11:57:50.134Z POST 2.0849379999999655 /api/hrms/v1/pay/payroll/download status = false, err = \nInvalid `prisma.$queryRawUnsafe()` invocation:\n\n\nRaw query failed. Code: `42601`. Message: `ERROR: syntax error at or near \"WITH\"` "}
{"level":"error","message":"Date & Time:- 2024-04-25T11:58:04.742Z POST 2.1322230000000673 /api/hrms/v1/pay/payroll/download status = false, err = \nInvalid `prisma.$queryRawUnsafe()` invocation:\n\n\nRaw query failed. Code: `42601`. Message: `ERROR: syntax error at or near \"WITH\"` "}
{"level":"error","message":"Date & Time:- 2024-04-25T13:09:48.562Z POST 0.2778040000121109 /api/hrms/v1/employee/leave status = false, err = \nInvalid `prisma.employee_leave_details.create()` invocation in\n/home/krish/Desktop/juidcoMain/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empLeave.dao.ts:51:62\n\n  48   },\n  49 };\n  50 \n→ 51 const leaveRequest = await prisma.employee_leave_details.create({\n       data: {\n         employee_id: \"EMP912e43\",\n         emp_leave_type_id: null,\n         leave_from: \"2024-04-15\",\n         leave_to: \"2024-04-19\",\n         total_days: 5,\n         leave_reason: \"casc\",\n         file_upload: null,\n         half_day: true,\n         leave_status: undefined,\n     +   emp_leave_type: {\n     +     create: employee_leave_typeCreateWithoutEmployee_leave_detailsInput | employee_leave_typeUncheckedCreateWithoutEmployee_leave_detailsInput,\n     +     connectOrCreate: employee_leave_typeCreateOrConnectWithoutEmployee_leave_detailsInput,\n     +     connect: employee_leave_typeWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `emp_leave_type` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-26T04:39:30.028Z POST 0.47352500003762543 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (318, null, 2024-04-26, 2024-04-26 10:09:30.017, null, 0, 1, 2024-04-26 10:09:30.018, 2024-04-26 10:09:30.018).` "}
{"level":"error","message":"Date & Time:- 2024-04-26T10:48:15.881Z POST 3.958526999995229 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (317, null, 2024-04-26, 2024-04-26 16:18:15.825, null, 0, 1, 2024-04-26 16:18:15.869, 2024-04-26 16:18:15.869).` "}
{"level":"error","message":"Date & Time:- 2024-04-26T10:51:28.701Z POST 0.34565599999041297 /api/hrms/v1/employee/create status = false, err = Unexpected socket close "}
{"level":"error","message":"Date & Time:- 2024-04-27T04:49:28.051Z POST 0.37543600000208244 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (319, null, 2024-04-27, 2024-04-27 10:19:28.041, null, 0, 1, 2024-04-27 10:19:28.042, 2024-04-27 10:19:28.042).` "}
{"level":"error","message":"Date & Time:- 2024-04-29T05:00:57.346Z POST 0.8903080000018235 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (317, null, 2024-04-29, 2024-04-29 10:30:57.336, null, 0, 1, 2024-04-29 10:30:57.337, 2024-04-29 10:30:57.337).` "}
{"level":"error","message":"Date & Time:- 2024-04-29T05:59:00.411Z POST 0.35221899999305606 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (319, null, 2024-04-29, 2024-04-29 11:29:00.401, null, 0, 1, 2024-04-29 11:29:00.402, 2024-04-29 11:29:00.402).` "}
{"level":"error","message":"Date & Time:- 2024-04-29T06:52:44.061Z POST 0.3526220000348985 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (318, null, 2024-04-29, 2024-04-29 12:22:44.053, null, 0, 1, 2024-04-29 12:22:44.054, 2024-04-29 12:22:44.054).` "}
{"level":"error","message":"Date & Time:- 2024-04-29T12:28:35.143Z POST 0.30588500015437603 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (317, null, 2024-04-29, 2024-04-29 17:58:35.097, null, 0, 1, 2024-04-29 17:58:35.136, 2024-04-29 17:58:35.136).` "}
{"level":"error","message":"Date & Time:- 2024-04-29T12:52:06.992Z GET 3.9110539999992397 /api/hrms/v1/pay/payroll status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:451:24\n\n  448 }\n  449 \n  450 const [data, count] = await prisma.$transaction([\n→ 451   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            payroll_master: {\n              select: {\n                id: true,\n                emp_id: true,\n                emp_name: true,\n                gross_pay: true,\n                leave_days: true,\n                working_hour: true,\n                total_allowance: true,\n                total_deductions: true,\n                non_billable: true,\n                present_days: true,\n                lwp_days: true,\n                salary_deducted: true,\n                status: true,\n                net_pay: true\n              },\n              orderBy: {\n                emp_id: \"asc\"\n              }\n            }\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-29T12:53:15.474Z GET 0.43863299999793526 /api/hrms/v1/pay/payroll status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:451:24\n\n  448 }\n  449 \n  450 const [data, count] = await prisma.$transaction([\n→ 451   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            payroll_master: {\n              select: {\n                id: true,\n                emp_id: true,\n                emp_name: true,\n                gross_pay: true,\n                leave_days: true,\n                working_hour: true,\n                total_allowance: true,\n                total_deductions: true,\n                non_billable: true,\n                present_days: true,\n                lwp_days: true,\n                salary_deducted: true,\n                status: true,\n                net_pay: true\n              },\n              orderBy: {\n                emp_id: \"asc\"\n              }\n            }\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-29T12:53:54.812Z GET 0.6598349999985658 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:451:24\n\n  448 }\n  449 \n  450 const [data, count] = await prisma.$transaction([\n→ 451   prisma.employees.findMany({\n          take: 10,\n          select: {\n            payroll_master: {\n              select: {\n                id: true,\n                emp_id: true,\n                emp_name: true,\n                gross_pay: true,\n                leave_days: true,\n                working_hour: true,\n                total_allowance: true,\n                total_deductions: true,\n                non_billable: true,\n                present_days: true,\n                lwp_days: true,\n                salary_deducted: true,\n                status: true,\n                net_pay: true\n              },\n              orderBy: {\n                emp_id: \"asc\"\n              }\n            }\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-29T12:53:57.437Z GET 0.31620299999485724 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:451:24\n\n  448 }\n  449 \n  450 const [data, count] = await prisma.$transaction([\n→ 451   prisma.employees.findMany({\n          take: 10,\n          select: {\n            payroll_master: {\n              select: {\n                id: true,\n                emp_id: true,\n                emp_name: true,\n                gross_pay: true,\n                leave_days: true,\n                working_hour: true,\n                total_allowance: true,\n                total_deductions: true,\n                non_billable: true,\n                present_days: true,\n                lwp_days: true,\n                salary_deducted: true,\n                status: true,\n                net_pay: true\n              },\n              orderBy: {\n                emp_id: \"asc\"\n              }\n            }\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-29T12:54:11.690Z GET 0.7778370000014547 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:451:24\n\n  448 }\n  449 \n  450 const [data, count] = await prisma.$transaction([\n→ 451   prisma.employees.findMany({\n          take: 10,\n          select: {\n            payroll_master: {\n              select: {\n                id: true,\n                emp_id: true,\n                emp_name: true,\n                gross_pay: true,\n                leave_days: true,\n                working_hour: true,\n                total_allowance: true,\n                total_deductions: true,\n                non_billable: true,\n                present_days: true,\n                lwp_days: true,\n                salary_deducted: true,\n                status: true,\n                net_pay: true\n              },\n              orderBy: {\n                emp_id: \"asc\"\n              }\n            }\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-29T12:54:50.458Z GET 0.4915069999988191 /api/hrms/v1/pay/payroll?limit=10&page=$%7Bpage%7D status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:451:24\n\n  448 }\n  449 \n  450 const [data, count] = await prisma.$transaction([\n→ 451   prisma.employees.findMany({\n          take: 10,\n          select: {\n            payroll_master: {\n              select: {\n                id: true,\n                emp_id: true,\n                emp_name: true,\n                gross_pay: true,\n                leave_days: true,\n                working_hour: true,\n                total_allowance: true,\n                total_deductions: true,\n                non_billable: true,\n                present_days: true,\n                lwp_days: true,\n                salary_deducted: true,\n                status: true,\n                net_pay: true\n              },\n              orderBy: {\n                emp_id: \"asc\"\n              }\n            }\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-29T12:56:16.931Z GET 0.496714000008069 /api/hrms/v1/pay/payroll?limit=10&page=1&page=1 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:451:24\n\n  448 }\n  449 \n  450 const [data, count] = await prisma.$transaction([\n→ 451   prisma.employees.findMany({\n          take: 10,\n          select: {\n            payroll_master: {\n              select: {\n                id: true,\n                emp_id: true,\n                emp_name: true,\n                gross_pay: true,\n                leave_days: true,\n                working_hour: true,\n                total_allowance: true,\n                total_deductions: true,\n                non_billable: true,\n                present_days: true,\n                lwp_days: true,\n                salary_deducted: true,\n                status: true,\n                net_pay: true\n              },\n              orderBy: {\n                emp_id: \"asc\"\n              }\n            }\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-29T13:02:08.235Z GET 0.39272499992512167 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:451:24\n\n  448 }\n  449 \n  450 const [data, count] = await prisma.$transaction([\n→ 451   prisma.employees.findMany({\n          take: 10,\n          select: {\n            payroll_master: {\n              select: {\n                id: true,\n                emp_id: true,\n                emp_name: true,\n                gross_pay: true,\n                leave_days: true,\n                working_hour: true,\n                total_allowance: true,\n                total_deductions: true,\n                non_billable: true,\n                present_days: true,\n                lwp_days: true,\n                salary_deducted: true,\n                status: true,\n                net_pay: true\n              },\n              orderBy: {\n                emp_id: \"asc\"\n              }\n            }\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-29T13:02:20.074Z GET 0.6066459999419749 /api/hrms/v1/pay/payroll status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:451:24\n\n  448 }\n  449 \n  450 const [data, count] = await prisma.$transaction([\n→ 451   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            payroll_master: {\n              select: {\n                id: true,\n                emp_id: true,\n                emp_name: true,\n                gross_pay: true,\n                leave_days: true,\n                working_hour: true,\n                total_allowance: true,\n                total_deductions: true,\n                non_billable: true,\n                present_days: true,\n                lwp_days: true,\n                salary_deducted: true,\n                status: true,\n                net_pay: true\n              },\n              orderBy: {\n                emp_id: \"asc\"\n              }\n            }\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-29T13:26:59.220Z POST 0.3357710000127554 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (319, null, 2024-04-29, 2024-04-29 18:56:59.21, null, 0, 1, 2024-04-29 18:56:59.212, 2024-04-29 18:56:59.212).` "}
{"level":"error","message":"Date & Time:- 2024-04-30T11:18:32.016Z POST 0.33070899546146393 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (344, null, 2024-04-30, 2024-04-30 16:48:31.973, null, 0, 1, 2024-04-30 16:48:32.014, 2024-04-30 16:48:32.014).` "}
{"level":"error","message":"Date & Time:- 2024-05-02T06:46:18.036Z GET 0.4355939999950351 /api/hrms/v1/pay/payroll status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:420:46\n\n  417   };\n  418 }\n  419 \n→ 420 const data = await prisma.payroll_master.findMany({\n        skip: NaN,\n        select: {\n          id: true,\n          emp_id: true,\n          emp_name: true,\n          gross_pay: true,\n          leave_days: true,\n          working_hour: true,\n          total_allowance: true,\n          total_deductions: true,\n          non_billable: true,\n          present_days: true,\n          lwp_days: true,\n          salary_deducted: true,\n          status: true,\n          net_pay: true\n        },\n        orderBy: {\n          emp_id: \"asc\"\n        },\n      + take: Int\n      })\n\nArgument `take` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-02T06:46:20.778Z GET 0.464523000002373 /api/hrms/v1/pay/payroll status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:420:46\n\n  417   };\n  418 }\n  419 \n→ 420 const data = await prisma.payroll_master.findMany({\n        skip: NaN,\n        select: {\n          id: true,\n          emp_id: true,\n          emp_name: true,\n          gross_pay: true,\n          leave_days: true,\n          working_hour: true,\n          total_allowance: true,\n          total_deductions: true,\n          non_billable: true,\n          present_days: true,\n          lwp_days: true,\n          salary_deducted: true,\n          status: true,\n          net_pay: true\n        },\n        orderBy: {\n          emp_id: \"asc\"\n        },\n      + take: Int\n      })\n\nArgument `take` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-02T06:46:38.245Z GET 0.34760300000198185 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:420:46\n\n  417   };\n  418 }\n  419 \n→ 420 const data = await prisma.payroll_master.findMany({\n        take: 10,\n        select: {\n          id: true,\n          emp_id: true,\n          emp_name: true,\n          gross_pay: true,\n          leave_days: true,\n          working_hour: true,\n          total_allowance: true,\n          total_deductions: true,\n          non_billable: true,\n          present_days: true,\n          lwp_days: true,\n          salary_deducted: true,\n          status: true,\n          net_pay: true\n        },\n        orderBy: {\n          emp_id: \"asc\"\n        },\n      + skip: Int\n      })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-02T06:46:39.458Z GET 0.36843299999600276 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:420:46\n\n  417   };\n  418 }\n  419 \n→ 420 const data = await prisma.payroll_master.findMany({\n        take: 10,\n        select: {\n          id: true,\n          emp_id: true,\n          emp_name: true,\n          gross_pay: true,\n          leave_days: true,\n          working_hour: true,\n          total_allowance: true,\n          total_deductions: true,\n          non_billable: true,\n          present_days: true,\n          lwp_days: true,\n          salary_deducted: true,\n          status: true,\n          net_pay: true\n        },\n        orderBy: {\n          emp_id: \"asc\"\n        },\n      + skip: Int\n      })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-02T06:50:34.075Z GET 2.120244999998249 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-02T06:50:46.923Z GET 0.37474400000064634 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-02T06:51:07.709Z GET 0.7545229999959702 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-02T06:51:10.189Z GET 0.4126399999950081 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-02T06:51:21.047Z GET 0.45819000000483356 /api/hrms/v1/pay/payroll?limit=10? status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-02T06:51:27.228Z GET 0.34206100000301376 /api/hrms/v1/pay/payroll?limit=10?page= status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-02T06:51:29.390Z GET 0.3561760000011418 /api/hrms/v1/pay/payroll?limit=10?page=1 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-02T06:51:36.470Z GET 0.5299360000062734 /api/hrms/v1/pay/payroll?limit=10?page=1 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-02T06:58:50.382Z GET 0.2768449999857694 /api/hrms/v1/pay/payslip?emp_id=EMP912e43&date=%222024-04-28%22 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `22P03`. Message: `ERROR: incorrect binary data format in bind parameter 2` "}
{"level":"error","message":"Date & Time:- 2024-05-02T06:58:50.582Z GET 0.2624970000470057 /api/hrms/v1/pay/payslip?emp_id=EMP912e43&date=%222024-04-28%22 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `22P03`. Message: `ERROR: incorrect binary data format in bind parameter 2` "}
{"level":"error","message":"Date & Time:- 2024-05-02T06:59:07.917Z GET 0.30673199996817857 /api/hrms/v1/pay/payslip?emp_id=EMP912e43&date=2024-04-28 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `22P03`. Message: `ERROR: incorrect binary data format in bind parameter 2` "}
{"level":"error","message":"Date & Time:- 2024-05-02T06:59:08.114Z GET 0.27494999999180436 /api/hrms/v1/pay/payslip?emp_id=EMP912e43&date=2024-04-28 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `22P03`. Message: `ERROR: incorrect binary data format in bind parameter 2` "}
{"level":"error","message":"Date & Time:- 2024-05-02T06:59:44.969Z GET 0.39576499990653247 /api/hrms/v1/pay/payslip?emp_id=EMP912e43&date=2024-04-30 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `22P03`. Message: `ERROR: incorrect binary data format in bind parameter 2` "}
{"level":"error","message":"Date & Time:- 2024-05-02T06:59:45.183Z GET 0.2804189999587834 /api/hrms/v1/pay/payslip?emp_id=EMP912e43&date=2024-04-30 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `22P03`. Message: `ERROR: incorrect binary data format in bind parameter 2` "}
{"level":"error","message":"Date & Time:- 2024-05-02T07:00:09.062Z GET 0.3692779999691993 /api/hrms/v1/pay/payslip?emp_id=EMP912e43&date=2024-05-30 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `22P03`. Message: `ERROR: incorrect binary data format in bind parameter 2` "}
{"level":"error","message":"Date & Time:- 2024-05-02T07:00:09.294Z GET 0.27976900001522154 /api/hrms/v1/pay/payslip?emp_id=EMP912e43&date=2024-05-30 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `22P03`. Message: `ERROR: incorrect binary data format in bind parameter 2` "}
{"level":"error","message":"Date & Time:- 2024-05-02T07:18:27.619Z GET 0.2812139999587089 /api/hrms/v1/pay/payslip?emp_id=EMP912e43&date=2024-04-29 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `22P03`. Message: `ERROR: incorrect binary data format in bind parameter 2` "}
{"level":"error","message":"Date & Time:- 2024-05-02T07:18:52.501Z GET 0.312758999876678 /api/hrms/v1/pay/payslip?emp_id=EMP912e43&date=2024-04-29 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `22P03`. Message: `ERROR: incorrect binary data format in bind parameter 2` "}
{"level":"error","message":"Date & Time:- 2024-05-02T10:04:02.744Z GET 2.3660600000293925 /api/hrms/v1/employee/attendance/count-daily status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: operator does not exist: date = text\nHINT: No operator matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"Date & Time:- 2024-05-02T10:04:29.768Z GET 2.139259999999922 /api/hrms/v1/employee/attendance/count-daily status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: operator does not exist: date = text\nHINT: No operator matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"Date & Time:- 2024-05-02T10:06:30.123Z GET 0.309664000000339 /api/hrms/v1/employee/attendance/count-daily status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: operator does not exist: date = text\nHINT: No operator matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"Date & Time:- 2024-05-02T10:06:43.135Z GET 2.1534270000001925 /api/hrms/v1/employee/attendance/count-daily status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: operator does not exist: date = text\nHINT: No operator matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"Date & Time:- 2024-05-02T13:29:32.433Z POST 0.39214899999205954 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (351, null, 2024-05-02, 2024-05-02 18:59:32.425, null, 0, 1, 2024-05-02 18:59:32.426, 2024-05-02 18:59:32.426).` "}
{"level":"error","message":"Date & Time:- 2024-05-02T13:50:04.239Z POST 0.5564079999967362 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (317, null, 2024-05-02, 2024-05-02 19:20:04.231, null, 0, 1, 2024-05-02 19:20:04.232, 2024-05-02 19:20:04.232).` "}
{"level":"error","message":"Date & Time:- 2024-05-02T13:52:28.478Z POST 3.623348999999507 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (317, null, 2024-05-02, 2024-05-02 19:22:28.416, null, 0, 1, 2024-05-02 19:22:28.464, 2024-05-02 19:22:28.464).` "}
{"level":"error","message":"Date & Time:- 2024-05-02T13:56:59.567Z POST 2.314951000000292 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (331, null, 2024-05-02, 2024-05-02 19:26:59.483, null, 0, 1, 2024-05-02 19:26:59.552, 2024-05-02 19:26:59.552).` "}
{"level":"error","message":"Date & Time:- 2024-05-03T04:41:44.453Z POST 2.3748729999933857 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (364, null, 2024-05-03, 2024-05-03 10:11:44.363, null, 0, 1, 2024-05-03 10:11:44.438, 2024-05-03 10:11:44.438).` "}
{"level":"error","message":"Date & Time:- 2024-05-03T05:10:46.201Z POST 0.3805229999998119 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (332, null, 2024-05-03, 2024-05-03 10:40:46.192, null, 0, 1, 2024-05-03 10:40:46.193, 2024-05-03 10:40:46.193).` "}
{"level":"error","message":"Date & Time:- 2024-05-03T08:05:36.214Z GET 2.4822880000001533 /api/hrms/v1/ulb/get?id=3 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: operator does not exist: bigint = text\nHINT: No operator matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"Date & Time:- 2024-05-03T08:11:09.356Z GET 0.25095299998065457 /api/hrms/v1/employee/attendance/count-daily status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: operator does not exist: date = text\nHINT: No operator matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"Date & Time:- 2024-05-03T08:22:32.788Z GET 2.0789529999992737 /api/hrms/v1/employee/attendance/count-daily status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42703`. Message: `column \"emp\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-05-03T08:22:33.750Z GET 0.7248009999993883 /api/hrms/v1/employee/attendance/count-daily status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42703`. Message: `column \"emp\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-05-03T08:23:20.333Z GET 2.2063680000001114 /api/hrms/v1/employee/attendance/count-daily status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `22007`. Message: `ERROR: invalid input syntax for type timestamp: \"null\"` "}
{"level":"error","message":"Date & Time:- 2024-05-03T08:23:40.891Z GET 2.2936540000000605 /api/hrms/v1/employee/attendance/count-daily status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: operator does not exist: timestamp without time zone !== unknown\nHINT: No operator matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"Date & Time:- 2024-05-03T08:24:21.532Z GET 2.5104019999998854 /api/hrms/v1/employee/attendance/count-daily status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42601`. Message: `ERROR: syntax error at or near \"[\"` "}
{"level":"error","message":"Date & Time:- 2024-05-03T08:31:24.351Z GET 2.086330000000089 /api/hrms/v1/employee/attendance/count-daily status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: operator does not exist: date = text\nHINT: No operator matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"Date & Time:- 2024-05-03T08:31:26.164Z GET 0.9997860000003129 /api/hrms/v1/employee/attendance/count-daily status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: operator does not exist: date = text\nHINT: No operator matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"Date & Time:- 2024-05-03T10:26:00.474Z POST 0.33723900001496077 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (778, null, 2024-05-03, 2024-05-03 15:56:00.466, null, 0, 1, 2024-05-03 15:56:00.467, 2024-05-03 15:56:00.467).` "}
{"level":"error","message":"Date & Time:- 2024-05-03T11:01:36.710Z POST 0.2435789997689426 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (780, null, 2024-05-03, 2024-05-03 16:31:36.708, null, 0, 1, 2024-05-03 16:31:36.709, 2024-05-03 16:31:36.709).` "}
{"level":"error","message":"Date & Time:- 2024-05-03T11:02:17.022Z POST 0.2623069998808205 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (781, null, 2024-05-03, 2024-05-03 16:32:17.02, null, 0, 1, 2024-05-03 16:32:17.021, 2024-05-03 16:32:17.021).` "}
{"level":"error","message":"Date & Time:- 2024-05-03T11:02:39.390Z POST 0.2859550002031028 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (782, null, 2024-05-03, 2024-05-03 16:32:39.388, null, 0, 1, 2024-05-03 16:32:39.389, 2024-05-03 16:32:39.389).` "}
{"level":"error","message":"Date & Time:- 2024-05-03T11:07:55.141Z POST 0.2564550004899502 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (784, null, 2024-05-03, 2024-05-03 16:37:55.139, null, 0, 1, 2024-05-03 16:37:55.14, 2024-05-03 16:37:55.14).` "}
{"level":"error","message":"Date & Time:- 2024-05-03T11:38:01.295Z GET 2.655900000001566 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-05-03T11:38:02.134Z GET 0.8395000000018626 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-05-03T11:38:51.672Z GET 0.4584000000031665 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-05-03T11:38:52.028Z GET 0.40979999999399297 /api/hrms/v1/employee/attendance/count-daily status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: operator does not exist: date = text\nHINT: No operator matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"Date & Time:- 2024-05-03T11:38:52.429Z GET 0.6187999999965541 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-05-03T11:39:05.420Z GET 0.5154999999940628 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-05-03T11:39:05.749Z GET 0.3706999999994878 /api/hrms/v1/employee/attendance/count-daily status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: operator does not exist: date = text\nHINT: No operator matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"Date & Time:- 2024-05-03T11:39:06.199Z GET 0.5868000000045868 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-05-03T11:39:22.214Z GET 0.4529999999940628 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-05-03T11:39:22.559Z GET 0.5419000000110827 /api/hrms/v1/employee/attendance/count-daily status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: operator does not exist: date = text\nHINT: No operator matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"Date & Time:- 2024-05-03T11:39:22.902Z GET 0.41550000000279397 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-05-03T11:39:37.929Z GET 0.6278000000020256 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-05-03T11:39:38.275Z GET 0.43089999999210704 /api/hrms/v1/employee/attendance/count-daily status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: operator does not exist: date = text\nHINT: No operator matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"Date & Time:- 2024-05-03T11:39:38.622Z GET 0.461699999999837 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-05-03T11:41:11.129Z GET 0.40679999999701977 /api/hrms/v1/employee/attendance/count-daily status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: operator does not exist: date = text\nHINT: No operator matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"Date & Time:- 2024-05-03T11:41:11.535Z GET 0.4098999999987427 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-05-03T11:47:08.356Z GET 1.4050000000006548 /api/hrms/v1/employee/attendance/count-daily status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: operator does not exist: date = text\nHINT: No operator matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"Date & Time:- 2024-05-03T11:48:16.670Z GET 0.7404999999998836 /api/hrms/v1/employee/attendance/count-daily status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: operator does not exist: date = text\nHINT: No operator matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"Date & Time:- 2024-05-04T06:18:39.779Z POST 0.43938499997602776 /api/hrms/v1/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-05-04T06:20:33.580Z POST 0.43562300002668053 /api/hrms/v1/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-05-04T06:21:36.165Z POST 0.35954699997091666 /api/hrms/v1/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-05-04T06:21:43.252Z POST 0.2914219999802299 /api/hrms/v1/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-05-04T06:23:09.055Z POST 0.2988689999911003 /api/hrms/v1/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-05-04T06:24:01.057Z POST 0.3651580000296235 /api/hrms/v1/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-05-04T06:24:25.489Z POST 0.3388109999941662 /api/hrms/v1/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-05-04T06:25:13.472Z POST 0.3702819999307394 /api/hrms/v1/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-05-04T06:28:44.580Z POST 2.7036809999999605 /api/hrms/v1/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-05-04T06:28:53.662Z POST 1.7323959999994258 /api/hrms/v1/employee/create status = false, err = Cannot destructure property 'emp_education' of 'emp_education_details' as it is undefined. "}
{"level":"error","message":"Date & Time:- 2024-05-04T06:30:06.080Z POST 0.5415740000025835 /api/hrms/v1/employee/create status = false, err = Cannot destructure property 'emp_education' of 'emp_education_details' as it is undefined. "}
{"level":"error","message":"Date & Time:- 2024-05-04T06:31:33.574Z POST 2.5581459999993967 /api/hrms/v1/employee/create status = false, err = Cannot destructure property 'emp_education' of 'emp_education_details' as it is undefined. "}
{"level":"error","message":"Date & Time:- 2024-05-04T06:31:35.314Z POST 0.9768329999988055 /api/hrms/v1/employee/create status = false, err = Cannot destructure property 'emp_education' of 'emp_education_details' as it is undefined. "}
{"level":"error","message":"Date & Time:- 2024-05-04T06:32:45.054Z POST 0.3853519999975106 /api/hrms/v1/employee/create status = false, err = Cannot destructure property 'emp_education' of 'emp_education_details' as it is undefined. "}
{"level":"error","message":"Date & Time:- 2024-05-04T06:32:56.059Z POST 0.3759509999945294 /api/hrms/v1/employee/create status = false, err = Cannot destructure property 'emp_education' of 'emp_education_details' as it is undefined. "}
{"level":"error","message":"Date & Time:- 2024-05-04T06:33:21.931Z POST 0.34162399999331683 /api/hrms/v1/employee/create status = false, err = Cannot destructure property 'emp_education' of 'emp_education_details' as it is undefined. "}
{"level":"error","message":"Date & Time:- 2024-05-04T06:33:47.876Z POST 0.29932199997710995 /api/hrms/v1/employee/create status = false, err = Cannot destructure property 'emp_education' of 'emp_education_details' as it is undefined. "}
{"level":"error","message":"Date & Time:- 2024-05-04T06:33:50.560Z POST 0.3183569999819156 /api/hrms/v1/employee/create status = false, err = Cannot destructure property 'emp_education' of 'emp_education_details' as it is undefined. "}
{"level":"error","message":"Date & Time:- 2024-05-04T06:34:04.229Z POST 0.35225700002047233 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:85:34\n\n  82 if (isMany) {\n  83   return await tx[tableName].createMany({ data });\n  84 } else {\n→ 85   return await tx[tableName].create({\n         data: {\n           emp_type: 1,\n           office_name: \"XYZ123\",\n           office_code: \"XYZ123\",\n           ddo_code: \"DDO456\",\n           ddo_designation: \"Chief Officer\",\n           district: \"adc\"\n                     ~~~~~\n         }\n       })\n\nArgument `district`: Invalid value provided. Expected Int, provided String. "}
{"level":"error","message":"Date & Time:- 2024-05-04T06:34:37.376Z POST 0.4536779999907594 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:85:34\n\n  82 if (isMany) {\n  83   return await tx[tableName].createMany({ data });\n  84 } else {\n→ 85   return await tx[tableName].create({\n         data: {\n           married_status: \"cw\",\n           identification_marks: \"Mole on left arm\",\n           religion: \"wc\",\n           emp_categories: \"we\",\n           emp_home_state: \"New York\",\n           emp_district: \"wce\",\n                         ~~~~~\n           emp_blood_group: \"cw\",\n           emp_health_status: \"cwe\",\n           emp_ltc_home_town: \"New York City\",\n           emp_nearest_railway_station: \"Grand Central Terminal\",\n           emp_phy_health_type: \"cwe\",\n           emp_family: \"cwe\",\n           emp_family_name: \"Smith\",\n           emp_office_name: \"XYZ Corporation\",\n           emp_org_name: \"ABC Corp\",\n           emp_lang: [\n             {\n               language: \"Hindi\",\n               emp_lang_do: [\n                 \"read\",\n                 \"write\",\n                 \"speak\"\n               ]\n             }\n           ]\n         }\n       })\n\nArgument `emp_district`: Invalid value provided. Expected Int, provided String. "}
{"level":"error","message":"Date & Time:- 2024-05-04T06:35:16.857Z POST 0.39153799999621697 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:85:34\n\n  82 if (isMany) {\n  83   return await tx[tableName].createMany({ data });\n  84 } else {\n→ 85   return await tx[tableName].create({\n         data: {\n           emp_salary_allow: {\n             create: [\n               {\n                 name: \"Allowance Name\",\n                 wfe_date: \"2022-03-01\",\n                 amount_in: 122\n               }\n             ]\n           },\n           emp_salary_deduction: {\n             create: [\n               {\n                 name: \"Deduction Name\",\n                 wfe_date: \"2022-03-01\",\n                 acnt_no: 1234567890,\n                 amount_in: 500\n               }\n             ]\n           }\n         }\n       })\n\nArgument `acnt_no`: Invalid value provided. Expected String or Null, provided Int. "}
{"level":"error","message":"Date & Time:- 2024-05-04T06:36:34.603Z POST 0.4423689999966882 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:85:34\n\n  82 if (isMany) {\n  83   return await tx[tableName].createMany({ data });\n  84 } else {\n→ 85   return await tx[tableName].create({\n         data: {\n           emp_salary_allow: {\n             create: [\n               {\n                 name: \"Allowance Name\",\n                 wfe_date: \"2022-03-01\",\n                 amount_in: 122\n               }\n             ]\n           },\n           emp_salary_deduction: {\n             create: [\n               {\n                 name: \"Deduction Name\",\n                 wfe_date: \"2022-03-01\",\n                 acnt_no: 1234567890,\n                 amount_in: 500\n               }\n             ]\n           }\n         }\n       })\n\nArgument `acnt_no`: Invalid value provided. Expected String or Null, provided Int. "}
{"level":"error","message":"Date & Time:- 2024-05-04T06:36:47.503Z POST 0.4645349999773316 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:85:34\n\n  82 if (isMany) {\n  83   return await tx[tableName].createMany({ data });\n  84 } else {\n→ 85   return await tx[tableName].create(\nUnique constraint failed on the fields: (`emp_id`) "}
{"level":"error","message":"Date & Time:- 2024-05-04T06:38:12.371Z POST 1.6998739999980899 /api/hrms/v1/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-05-04T06:38:49.102Z POST 0.528625999999349 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:85:34\n\n  82 if (isMany) {\n  83   return await tx[tableName].createMany({ data });\n  84 } else {\n→ 85   return await tx[tableName].create({\n         data: {\n           emp_office_details_id: 31,\n           emp_basic_details_id: 31,\n           emp_id: \"EMP262f73\",\n           emp_type: 1,\n           emp_personal_details_id: 30,\n           emp_address_details_id: 30,\n           emp_join_details_id: 30,\n           emp_salary_details_id: 28,\n           emp_loan_details_id: 28,\n           emp_family_details: {\n             create: [\n               {\n                 name: \"g4twg\",\n                 relation: \"4g4\",\n                 dob: \"g5g\",\n                 dependent: \"yes\"\n               },\n               {\n                 name: \"g4\",\n                 relation: \"g45\",\n                 dob: \"g45\",\n                 dependent: \"no\"\n               }\n             ]\n           },\n           emp_nominee_details: {\n             create: [\n               {\n                 nominee_name: \"John Doe\",\n                 relation: \"Spouse\",\n                 percentage: 50.5,\n                 address: \"123 Main St\",\n                 minor: \"No\"\n               },\n               {\n                 nominee_name: \"Jane Doe\",\n                 relation: \"Child\",\n                 percentage: 49.5,\n                 address: \"456 Oak St\",\n                 minor: \"yes\"\n               }\n             ]\n           },\n           emp_increment_details: {\n             create: [\n               {\n                 scale: \"A\",\n                 inc_date: \"2022-02-28\",\n                 inc_amount: 5000,\n                 basic_pay_after_inc: 55000,\n                 vide_order_no: \"V123\",\n                 vide_order_date: \"2022-03-01\"\n               }\n             ]\n           },\n           emp_promotion_details: {\n             create: [\n               {\n                 designation: {\n                   from: \"Manager\",\n                   to: \"Senior\"\n                 },\n                 scale: {\n                   from: \"A\",\n                   to: \"1\"\n                 },\n                 vide_order_no: \"V456\",\n                 vide_order_date: \"2022-03-15\",\n                 transfer: \"yes\"\n               }\n             ]\n           },\n           emp_transfer_details: {\n           ~~~~~~~~~~~~~~~~~~~~\n             create: [\n               {\n                 designation: {\n                   from: \"acsd\",\n                   to: \"cas\"\n                 },\n                 office: {\n                   from: \"casd\",\n                   to: \"casdc\"\n                 },\n                 join_date: \"2024-05-12\",\n                 vide_order_no: \"3232\",\n                 vide_order_date: \"2024-05-11\",\n                 transfer_after_prom: \"no\"\n               }\n             ]\n           },\n           emp_timebound_details: {\n             create: [\n               {\n                 pay_scale: {\n                   from: \"casd\",\n                   to: \"cad\"\n                 },\n                 inc_amt: \"5000\",\n                 b_after_pay: \"55000\",\n                 vide_order_no: \"V123\",\n                 vide_order_date: \"2022-03-01T12:34:56.789Z\",\n                 remarks: \"Example remark\"\n               }\n             ]\n           },\n           emp_education_details: {\n             create: [\n               {\n                 edu_level: \"Matriculation\",\n                 stream: \"vdsfv\",\n                 board: \"dfvdsf\",\n                 passing_year: \"3434\",\n                 grade: \"1st\",\n                 upload_edu: \"C:\\\\fakepath\\\\Screenshot 2024-02-14 172443.png\",\n                 marks: 100\n               },\n               {\n                 edu_level: \"Intermediate\",\n                 stream: null,\n                 board: null,\n                 passing_year: null,\n                 grade: null,\n                 upload_edu: null\n               }\n             ]\n           },\n           emp_training_details: {\n             create: [\n               {\n                 name_of_training: \"acas\",\n                 training_type: \"Basic\",\n                 name_of_inst: \"casdcasd\",\n                 starting_from: {\n                   from: \"2323-03-03\"\n                 },\n                 end_to: {\n                   to: \"2323-03-03\"\n                 },\n                 tot_day_training: \"234\",\n                 upload_edu: \"C:\\\\fakepath\\\\Screenshot 2024-02-14 172443.png\"\n               }\n             ]\n           },\n       ?   emp_del?: Int,\n       ?   created_at?: DateTime,\n       ?   updated_at?: DateTime,\n       ?   emp_attendance?: employee_attendance_historyUncheckedCreateNestedManyWithoutEmployeeInput,\n       ?   emp_hierarchy?: employee_hierarchyUncheckedCreateNestedManyWithoutEmployeeInput,\n       ?   emp_leave_details?: employee_leave_detailsUncheckedCreateNestedManyWithoutEmployeeInput,\n       ?   emp_leave_chart?: employee_leave_chartUncheckedCreateNestedManyWithoutEmployeeInput,\n       ?   emp_daily_attendance?: employee_daily_attendanceUncheckedCreateNestedManyWithoutEmployeeInput,\n       ?   emp_claim?: employee_claimUncheckedCreateNestedManyWithoutEmployeesInput,\n       ?   leave_encashment?: leave_encashmentUncheckedCreateNestedManyWithoutEmployeeInput,\n       ?   pension_master?: pension_masterUncheckedCreateNestedManyWithoutEmployeesInput,\n       ?   payroll_master?: payroll_masterUncheckedCreateNestedManyWithoutEmployeesInput\n         }\n       })\n\nUnknown argument `emp_transfer_details`. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-05-04T06:51:27.008Z GET 0.34337100002449006 /api/hrms/v1/employee/get status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:337:24\n\n  334 }\n  335 \n  336 const [data, count] = await prisma.$transaction([\n→ 337   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-04T07:34:01.327Z GET 0.3993369999807328 /api/hrms/v1/employee/get?limit=10&page=1&department=null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:357:24\n\n  354 }\n  355 \n  356 const [data, count] = await prisma.$transaction([\n→ 357   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                OR: [\n                  {\n                    emp_join_details: {\n                      OR: [\n                        {\n                          department_id: {\n                            equals: NaN\n                          }\n                        },\n                        {\n                          designation_id: {\n                            equals: NaN\n                          }\n                        }\n                      ]\n                    }\n                  },\n                  {\n                    emp_basic_details: {\n                      emp_type: NaN\n                    }\n                  }\n                ]\n              }\n            ]\n          }\n        })\n\nUnknown argument `emp_type`. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-05-04T07:34:12.193Z GET 2.0325259999999616 /api/hrms/v1/employee/get?limit=10&page=1&department=null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:357:24\n\n  354 }\n  355 \n  356 const [data, count] = await prisma.$transaction([\n→ 357   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                OR: [\n                  {\n                    emp_join_details: {\n                      OR: [\n                        {\n                          department_id: {\n                            equals: NaN\n                          }\n                        },\n                        {\n                          designation_id: {\n                            equals: NaN\n                          }\n                        }\n                      ]\n                    }\n                  },\n                  {\n                    emp_basic_details: {\n                      emp_type: NaN\n                    }\n                  }\n                ]\n              }\n            ]\n          }\n        })\n\nUnknown argument `emp_type`. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-05-04T07:34:14.511Z GET 0.4151220000003377 /api/hrms/v1/employee/get?limit=10&page=1&department=null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:357:24\n\n  354 }\n  355 \n  356 const [data, count] = await prisma.$transaction([\n→ 357   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                OR: [\n                  {\n                    emp_join_details: {\n                      OR: [\n                        {\n                          department_id: {\n                            equals: NaN\n                          }\n                        },\n                        {\n                          designation_id: {\n                            equals: NaN\n                          }\n                        }\n                      ]\n                    }\n                  },\n                  {\n                    emp_basic_details: {\n                      emp_type: NaN\n                    }\n                  }\n                ]\n              }\n            ]\n          }\n        })\n\nUnknown argument `emp_type`. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-05-04T07:34:49.316Z GET 0.3657260000036331 /api/hrms/v1/employee/get?limit=10&page=1&department=null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:357:24\n\n  354 }\n  355 \n  356 const [data, count] = await prisma.$transaction([\n→ 357   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                OR: [\n                  {\n                    emp_join_details: {\n                      OR: [\n                        {\n                          department_id: {\n                            equals: NaN\n                          }\n                        },\n                        {\n                          designation_id: {\n                            equals: NaN\n                          }\n                        }\n                      ]\n                    }\n                  },\n                  {\n                    emp_basic_details: {\n                      emp_type: NaN\n                    }\n                  }\n                ]\n              }\n            ]\n          }\n        })\n\nUnknown argument `emp_type`. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-05-04T07:34:50.185Z GET 0.3402730000016163 /api/hrms/v1/employee/get?limit=10&page=1&department=2 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:357:24\n\n  354 }\n  355 \n  356 const [data, count] = await prisma.$transaction([\n→ 357   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                OR: [\n                  {\n                    emp_join_details: {\n                      OR: [\n                        {\n                          department_id: {\n                            equals: 2\n                          }\n                        },\n                        {\n                          designation_id: {\n                            equals: NaN\n                          }\n                        }\n                      ]\n                    }\n                  },\n                  {\n                    emp_basic_details: {\n                      emp_type: NaN\n                    }\n                  }\n                ]\n              }\n            ]\n          }\n        })\n\nUnknown argument `emp_type`. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-05-04T07:34:54.809Z GET 0.5210500000030152 /api/hrms/v1/employee/get?limit=10&page=1&department=null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:357:24\n\n  354 }\n  355 \n  356 const [data, count] = await prisma.$transaction([\n→ 357   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                OR: [\n                  {\n                    emp_join_details: {\n                      OR: [\n                        {\n                          department_id: {\n                            equals: NaN\n                          }\n                        },\n                        {\n                          designation_id: {\n                            equals: NaN\n                          }\n                        }\n                      ]\n                    }\n                  },\n                  {\n                    emp_basic_details: {\n                      emp_type: NaN\n                    }\n                  }\n                ]\n              }\n            ]\n          }\n        })\n\nUnknown argument `emp_type`. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-05-04T07:35:07.907Z GET 0.3345679999983986 /api/hrms/v1/employee/get?limit=10&page=1&department=null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:357:24\n\n  354 }\n  355 \n  356 const [data, count] = await prisma.$transaction([\n→ 357   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                OR: [\n                  {\n                    emp_join_details: {\n                      OR: [\n                        {\n                          department_id: {\n                            equals: NaN\n                          }\n                        },\n                        {\n                          designation_id: {\n                            equals: NaN\n                          }\n                        }\n                      ]\n                    }\n                  },\n                  {\n                    emp_basic_details: {\n                      emp_type: NaN\n                    }\n                  }\n                ]\n              }\n            ]\n          }\n        })\n\nUnknown argument `emp_type`. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-05-04T07:37:02.872Z GET 1.3110509999969508 /api/hrms/v1/employee/get?limit=10&page=1&department=null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:357:24\n\n  354 }\n  355 \n  356 const [data, count] = await prisma.$transaction([\n→ 357   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                OR: [\n                  {\n                    emp_join_details: {\n                      OR: [\n                        {\n                          department_id: {\n                            equals: NaN\n                          }\n                        },\n                        {\n                          designation_id: {\n                            equals: NaN\n                          }\n                        }\n                      ]\n                    }\n                  },\n                  {\n                    emp_basic_details: {\n                      emp_type: NaN\n                    }\n                  }\n                ]\n              }\n            ]\n          }\n        })\n\nUnknown argument `emp_type`. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-05-04T07:38:50.243Z GET 1.1999400000204332 /api/hrms/v1/employee/get?limit=10&page=1false status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:357:24\n\n  354 }\n  355 \n  356 const [data, count] = await prisma.$transaction([\n→ 357   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-04T07:41:11.675Z GET 0.7040699999779463 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:357:24\n\n  354 }\n  355 \n  356 const [data, count] = await prisma.$transaction([\n→ 357   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-04T07:41:22.672Z GET 0.37654600001405925 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:357:24\n\n  354 }\n  355 \n  356 const [data, count] = await prisma.$transaction([\n→ 357   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-04T07:41:53.628Z GET 0.463365999981761 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:357:24\n\n  354 }\n  355 \n  356 const [data, count] = await prisma.$transaction([\n→ 357   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-04T07:42:15.118Z GET 0.32931500003905967 /api/hrms/v1/employee/get?limit=10&page=1&department=null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:357:24\n\n  354 }\n  355 \n  356 const [data, count] = await prisma.$transaction([\n→ 357   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                OR: [\n                  {\n                    emp_join_details: {\n                      OR: [\n                        {\n                          department_id: {\n                            equals: NaN\n                          }\n                        },\n                        {\n                          designation_id: {\n                            equals: NaN\n                          }\n                        }\n                      ]\n                    }\n                  },\n                  {\n                    emp_basic_details: {\n                      emp_type: NaN\n                    }\n                  }\n                ]\n              }\n            ]\n          }\n        })\n\nUnknown argument `emp_type`. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-05-04T07:42:19.012Z GET 0.29156799998600036 /api/hrms/v1/employee/get?limit=10&page=1&department=2 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:357:24\n\n  354 }\n  355 \n  356 const [data, count] = await prisma.$transaction([\n→ 357   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                OR: [\n                  {\n                    emp_join_details: {\n                      OR: [\n                        {\n                          department_id: {\n                            equals: 2\n                          }\n                        },\n                        {\n                          designation_id: {\n                            equals: NaN\n                          }\n                        }\n                      ]\n                    }\n                  },\n                  {\n                    emp_basic_details: {\n                      emp_type: NaN\n                    }\n                  }\n                ]\n              }\n            ]\n          }\n        })\n\nUnknown argument `emp_type`. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-05-04T07:43:24.690Z GET 0.4090929999947548 /api/hrms/v1/employee/get?limit=10&page=1&department=2 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:357:24\n\n  354 }\n  355 \n  356 const [data, count] = await prisma.$transaction([\n→ 357   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                OR: [\n                  {\n                    emp_join_details: {\n                      OR: [\n                        {\n                          department_id: {\n                            equals: 2\n                          }\n                        },\n                        {\n                          designation_id: {\n                            equals: NaN\n                          }\n                        }\n                      ]\n                    }\n                  },\n                  {\n                    emp_basic_details: {\n                      emp_type: NaN\n                    }\n                  }\n                ]\n              }\n            ]\n          }\n        })\n\nUnknown argument `emp_type`. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-05-04T07:44:01.003Z GET 0.5491140000003725 /api/hrms/v1/employee/get?limit=10&page=1&department=2 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:353:24\n\n  350 }\n  351 \n  352 const [data, count] = await prisma.$transaction([\n→ 353   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_join_details: {\n                  OR: [\n                    {\n                      department_id: {\n                        equals: 2\n                      }\n                    },\n                    {\n                      designation_id: {\n                        equals: NaN\n                      }\n                    }\n                  ]\n                }\n              },\n              {\n                emp_basic_details: {\n                  emp_type: NaN\n                }\n              }\n            ]\n          }\n        })\n\nUnknown argument `emp_type`. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-05-04T07:46:21.291Z GET 0.285024999990128 /api/hrms/v1/employee/get?limit=10&page=1&department=2 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:353:24\n\n  350 }\n  351 \n  352 const [data, count] = await prisma.$transaction([\n→ 353   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_join_details: {\n                  OR: [\n                    {\n                      department_id: {\n                        equals: 2\n                      }\n                    },\n                    {\n                      designation_id: {\n                        equals: NaN\n                      }\n                    }\n                  ]\n                }\n              },\n              {\n                emp_basic_details: {\n                  emp_type: NaN\n                }\n              }\n            ]\n          }\n        })\n\nUnknown argument `emp_type`. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-05-04T07:46:27.540Z GET 0.45737700001336634 /api/hrms/v1/employee/get?limit=10&page=1&department=2 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:353:24\n\n  350 }\n  351 \n  352 const [data, count] = await prisma.$transaction([\n→ 353   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_join_details: {\n                  OR: [\n                    {\n                      department_id: {\n                        equals: 2\n                      }\n                    },\n                    {\n                      designation_id: {\n                        equals: NaN\n                      }\n                    }\n                  ]\n                }\n              },\n              {\n                emp_basic_details: {\n                  emp_type: NaN\n                }\n              }\n            ]\n          }\n        })\n\nUnknown argument `emp_type`. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-05-04T07:47:30.321Z GET 0.3731499999994412 /api/hrms/v1/employee/get?limit=10&page=1&department=2 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:353:24\n\n  350 }\n  351 \n  352 const [data, count] = await prisma.$transaction([\n→ 353   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_join_details: {\n                  OR: [\n                    {\n                      department_id: {\n                        equals: 2\n                      }\n                    },\n                    {\n                      designation_id: {\n                        equals: NaN\n                      }\n                    }\n                  ]\n                }\n              },\n              {\n                emp_basic_details: {\n                  emp_type: NaN\n                }\n              }\n            ]\n          }\n        })\n\nUnknown argument `emp_type`. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-05-04T07:49:37.856Z GET 2.793431000000055 /api/hrms/v1/employee/get?limit=10&page=1&department=2 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:353:24\n\n  350 }\n  351 \n  352 const [data, count] = await prisma.$transaction([\n→ 353   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_join_details: {\n                  OR: [\n                    {\n                      department_id: {\n                        equals: 2\n                      }\n                    },\n                    {\n                      designation_id: {\n                        equals: NaN\n                      }\n                    }\n                  ]\n                }\n              },\n              {\n                emp_basic_details: {\n                  emp_type: NaN\n                }\n              }\n            ]\n          }\n        })\n\nUnknown argument `emp_type`. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-05-04T07:56:50.287Z GET 2.726035000000138 /api/hrms/v1/employee/get?limit=10&page=1&department=2 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:355:24\n\n  352 }\n  353 \n  354 const [data, count] = await prisma.$transaction([\n→ 355   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_join_details: {\n                  OR: [\n                    {\n                      department_id: {\n                        equals: 2\n                      }\n                    },\n                    {\n                      designation_id: {\n                        equals: NaN\n                      }\n                    }\n                  ]\n                }\n              },\n              {\n                emp_basic_details: {\n                  emp_type_id: {\n                    equals: NaN\n                  }\n                }\n              }\n            ]\n          }\n        })\n\nArgument `equals` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-04T07:56:53.238Z GET 1.057557999999517 /api/hrms/v1/employee/get?limit=10&page=1&department=2 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:355:24\n\n  352 }\n  353 \n  354 const [data, count] = await prisma.$transaction([\n→ 355   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_join_details: {\n                  OR: [\n                    {\n                      department_id: {\n                        equals: 2\n                      }\n                    },\n                    {\n                      designation_id: {\n                        equals: NaN\n                      }\n                    }\n                  ]\n                }\n              },\n              {\n                emp_basic_details: {\n                  emp_type_id: {\n                    equals: NaN\n                  }\n                }\n              }\n            ]\n          }\n        })\n\nArgument `equals` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-04T07:58:13.240Z GET 3.710055999999895 /api/hrms/v1/employee/get?limit=10&page=1&department=2 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:359:24\n\n  356 }\n  357 \n  358 const [data, count] = await prisma.$transaction([\n→ 359   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                OR: [\n                  {\n                    emp_join_details: {\n                      OR: [\n                        {\n                          department_id: {\n                            equals: 2\n                          }\n                        },\n                        {\n                          designation_id: {\n                            equals: NaN\n                          }\n                        }\n                      ]\n                    }\n                  },\n                  {\n                    emp_basic_details: {\n                      emp_type_id: {\n                        equals: NaN\n                      }\n                    }\n                  }\n                ]\n              }\n            ]\n          }\n        })\n\nArgument `equals` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-04T07:58:14.222Z GET 1.6914050000004863 /api/hrms/v1/employee/get?limit=10&page=1&department=2 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:359:24\n\n  356 }\n  357 \n  358 const [data, count] = await prisma.$transaction([\n→ 359   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                OR: [\n                  {\n                    emp_join_details: {\n                      OR: [\n                        {\n                          department_id: {\n                            equals: 2\n                          }\n                        },\n                        {\n                          designation_id: {\n                            equals: NaN\n                          }\n                        }\n                      ]\n                    }\n                  },\n                  {\n                    emp_basic_details: {\n                      emp_type_id: {\n                        equals: NaN\n                      }\n                    }\n                  }\n                ]\n              }\n            ]\n          }\n        })\n\nArgument `equals` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-04T07:59:26.731Z GET 3.653652000000875 /api/hrms/v1/employee/get?limit=10&page=1&department=2 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:355:24\n\n  352 }\n  353 \n  354 const [data, count] = await prisma.$transaction([\n→ 355   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_join_details: {\n                  OR: [\n                    {\n                      department_id: {\n                        equals: 2\n                      }\n                    },\n                    {\n                      designation_id: {\n                        equals: NaN\n                      }\n                    }\n                  ]\n                }\n              },\n              {\n                emp_basic_details: {\n                  emp_type_id: {\n                    equals: NaN\n                  }\n                }\n              }\n            ]\n          }\n        })\n\nArgument `equals` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-04T08:01:20.766Z GET 0.4128550000023097 /api/hrms/v1/employee/get?limit=10&page=1&department=2 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:355:24\n\n  352 }\n  353 \n  354 const [data, count] = await prisma.$transaction([\n→ 355   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_join_details: {\n                  OR: [\n                    {\n                      department_id: {\n                        equals: 2\n                      }\n                    },\n                    {\n                      designation_id: {\n                        equals: NaN\n                      }\n                    }\n                  ]\n                }\n              },\n              {\n                emp_basic_details: {\n                  emp_type_id: {\n                    equals: NaN\n                  }\n                }\n              }\n            ]\n          }\n        })\n\nArgument `equals` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-04T08:03:17.735Z GET 0.6488050000043586 /api/hrms/v1/employee/get?limit=10&page=1&department=2 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:355:24\n\n  352 }\n  353 \n  354 const [data, count] = await prisma.$transaction([\n→ 355   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_join_details: {\n                  OR: [\n                    {\n                      department_id: {\n                        equals: 2\n                      }\n                    },\n                    {\n                      designation_id: {\n                        equals: NaN\n                      }\n                    }\n                  ]\n                }\n              },\n              {\n                emp_basic_details: {\n                  emp_type_id: {\n                    equals: NaN\n                  }\n                }\n              }\n            ]\n          }\n        })\n\nArgument `equals` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-04T08:04:03.748Z GET 2.713130000000092 /api/hrms/v1/employee/get?limit=10&page=1&department=2 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:355:24\n\n  352 }\n  353 \n  354 const [data, count] = await prisma.$transaction([\n→ 355   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_join_details: {\n                  OR: [\n                    {\n                      department_id: {\n                        equals: 2\n                      }\n                    },\n                    {\n                      designation_id: {\n                        equals: NaN\n                      }\n                    }\n                  ]\n                }\n              },\n              {\n                emp_basic_details: {\n                  emp_type_id: {\n                    equals: NaN\n                  }\n                }\n              }\n            ]\n          }\n        })\n\nArgument `equals` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-04T08:05:10.328Z GET 2.7485350000006292 /api/hrms/v1/employee/get?limit=10&page=1&department=2 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:355:24\n\n  352 }\n  353 \n  354 const [data, count] = await prisma.$transaction([\n→ 355   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_join_details: {\n                  OR: [\n                    {\n                      department_id: {\n                        equals: 2\n                      }\n                    },\n                    {\n                      designation_id: {\n                        equals: NaN\n                      }\n                    }\n                  ]\n                }\n              },\n              {\n                emp_basic_details: {\n                  emp_type_id: {\n                    equals: NaN\n                  }\n                }\n              }\n            ]\n          }\n        })\n\nArgument `equals` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-04T08:05:31.480Z GET 2.723883000000569 /api/hrms/v1/employee/get?limit=10&page=1&department=2 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:355:24\n\n  352 }\n  353 \n  354 const [data, count] = await prisma.$transaction([\n→ 355   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_join_details: {\n                  OR: [\n                    {\n                      department_id: {\n                        equals: 2\n                      }\n                    },\n                    {\n                      designation_id: {\n                        equals: NaN\n                      }\n                    }\n                  ]\n                }\n              },\n              {\n                emp_basic_details: {\n                  emp_type_id: {\n                    equals: NaN\n                  }\n                }\n              }\n            ]\n          }\n        })\n\nArgument `equals` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-04T08:05:33.270Z GET 1.0818849999996019 /api/hrms/v1/employee/get?limit=10&page=1&department=2 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:355:24\n\n  352 }\n  353 \n  354 const [data, count] = await prisma.$transaction([\n→ 355   prisma.employees.findMany({\n          skip: 0,\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_join_details: {\n                  OR: [\n                    {\n                      department_id: {\n                        equals: 2\n                      }\n                    },\n                    {\n                      designation_id: {\n                        equals: NaN\n                      }\n                    }\n                  ]\n                }\n              },\n              {\n                emp_basic_details: {\n                  emp_type_id: {\n                    equals: NaN\n                  }\n                }\n              }\n            ]\n          }\n        })\n\nArgument `equals` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-04T08:25:30.572Z GET 0.31919499998912215 /api/hrms/v1/pay/payslip?emp_id=EMP912e41 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/payslip.dao.ts:82:45\n\n  79 //       AND EXTRACT(YEAR FROM date) = EXTRACT(YEAR FROM ${date}) \n  80 //   AND EXTRACT(MONTH FROM date) = EXTRACT(MONTH FROM ${date});\n  81 //     `;\n→ 82 const payroll = await prisma.payroll_master.findMany({\n       where: {\n         emp_id: \"EMP912e41\",\n         AND: [\n           {\n             date: {\n               gte: new Date(\"Invalid Date\")\n                    ~~~~~~~~~~~~~~~~~~~~~~~~\n             }\n           },\n           {\n             date: {\n               lt: new Date(\"Invalid Date\")\n             }\n           }\n         ]\n       }\n     })\n\nInvalid value for argument `gte`: Provided Date object is invalid. Expected Date. "}
{"level":"error","message":"Date & Time:- 2024-05-04T08:25:46.528Z GET 0.24161199992522597 /api/hrms/v1/pay/payslip?emp_id=EMP912e41&date= status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/payslip.dao.ts:82:45\n\n  79 //       AND EXTRACT(YEAR FROM date) = EXTRACT(YEAR FROM ${date}) \n  80 //   AND EXTRACT(MONTH FROM date) = EXTRACT(MONTH FROM ${date});\n  81 //     `;\n→ 82 const payroll = await prisma.payroll_master.findMany({\n       where: {\n         emp_id: \"EMP912e41\",\n         AND: [\n           {\n             date: {\n               gte: new Date(\"Invalid Date\")\n                    ~~~~~~~~~~~~~~~~~~~~~~~~\n             }\n           },\n           {\n             date: {\n               lt: new Date(\"Invalid Date\")\n             }\n           }\n         ]\n       }\n     })\n\nInvalid value for argument `gte`: Provided Date object is invalid. Expected Date. "}
{"level":"error","message":"Date & Time:- 2024-05-04T08:25:49.804Z GET 0.3889859998598695 /api/hrms/v1/pay/payslip?emp_id=EMP912e41&date=2024--4 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/payslip.dao.ts:82:45\n\n  79 //       AND EXTRACT(YEAR FROM date) = EXTRACT(YEAR FROM ${date}) \n  80 //   AND EXTRACT(MONTH FROM date) = EXTRACT(MONTH FROM ${date});\n  81 //     `;\n→ 82 const payroll = await prisma.payroll_master.findMany({\n       where: {\n         emp_id: \"EMP912e41\",\n         AND: [\n           {\n             date: {\n               gte: new Date(\"Invalid Date\")\n                    ~~~~~~~~~~~~~~~~~~~~~~~~\n             }\n           },\n           {\n             date: {\n               lt: new Date(\"Invalid Date\")\n             }\n           }\n         ]\n       }\n     })\n\nInvalid value for argument `gte`: Provided Date object is invalid. Expected Date. "}
{"level":"error","message":"Date & Time:- 2024-05-04T09:34:34.625Z POST 0.2703610002063215 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (782, null, 2024-05-04, 2024-05-04 15:04:34.619, null, 0, 1, 2024-05-04 15:04:34.62, 2024-05-04 15:04:34.62).` "}
{"level":"error","message":"Date & Time:- 2024-05-06T06:19:15.358Z POST 2.3944659999688156 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (776, null, 2024-05-06, 2024-05-06 11:49:15.279, null, 0, 1, 2024-05-06 11:49:15.341, 2024-05-06 11:49:15.341).` "}
{"level":"error","message":"Date & Time:- 2024-05-06T06:28:15.835Z POST 0.4554439999628812 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:85:34\n\n  82 if (isMany) {\n  83   return await tx[tableName].createMany({ data });\n  84 } else {\n→ 85   return await tx[tableName].create({\n         data: {\n           department_id: 3,\n           designation_id: undefined,\n           task: undefined,\n           class: undefined,\n           doj: \"2004-10-12\",\n           effective_pay_commision: \"2\",\n           confirmation_order: null,\n           pay_scale: \"2\",\n                      ~~~\n           pay_band: undefined,\n           grade_pay: \"1800\",\n           doc: undefined,\n           basic_pay: 326,\n           conf_order_number: undefined,\n           deduction_type: \"CPS\",\n           conf_order_date: undefined,\n           member_gis: null,\n           appoint_authority: undefined,\n           gis_account: undefined,\n           ulb: undefined,\n           last_inc_order: undefined,\n           name_of_service: undefined,\n           last_inc_order_date: undefined,\n           bank_name: undefined,\n           wef_date: undefined,\n           branch_name: undefined,\n           pf_category: undefined,\n           acc_no: undefined,\n           ifsc: undefined,\n           sen_grade_list: undefined\n         }\n       })\n\nArgument `pay_scale`: Invalid value provided. Expected Float or Null, provided String. "}
{"level":"error","message":"Date & Time:- 2024-05-06T06:34:06.605Z POST 0.3041120001580566 /api/hrms/v1/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-05-06T06:40:34.914Z POST 0.23887800006195903 /api/hrms/v1/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-05-06T06:46:14.277Z POST 0.26107800006866455 /api/hrms/v1/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-05-06T06:46:24.497Z POST 0.2926700001116842 /api/hrms/v1/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-05-06T06:49:30.626Z POST 0.2510239998809993 /api/hrms/v1/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-05-06T06:51:58.333Z POST 0.2878469997085631 /api/hrms/v1/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-05-06T06:52:09.644Z POST 0.2918879999779165 /api/hrms/v1/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-05-06T06:52:42.746Z POST 0.23760399967432022 /api/hrms/v1/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-05-06T07:01:55.016Z POST 0.34065099991858006 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (777, null, 2024-05-06, 2024-05-06 12:31:55.014, null, 0, 1, 2024-05-06 12:31:55.015, 2024-05-06 12:31:55.015).` "}
{"level":"error","message":"Date & Time:- 2024-05-06T07:03:01.078Z POST 0.29541199980303645 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (778, null, 2024-05-06, 2024-05-06 12:33:01.077, null, 0, 1, 2024-05-06 12:33:01.078, 2024-05-06 12:33:01.078).` "}
{"level":"error","message":"Date & Time:- 2024-05-06T07:03:34.306Z POST 0.35717799980193377 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (779, null, 2024-05-06, 2024-05-06 12:33:34.304, null, 0, 1, 2024-05-06 12:33:34.305, 2024-05-06 12:33:34.305).` "}
{"level":"error","message":"Date & Time:- 2024-05-06T07:04:18.035Z POST 0.31594299990683794 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (780, null, 2024-05-06, 2024-05-06 12:34:18.033, null, 0, 1, 2024-05-06 12:34:18.034, 2024-05-06 12:34:18.034).` "}
{"level":"error","message":"Date & Time:- 2024-05-06T07:40:07.179Z POST 0.3586500000092201 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (790, null, 2024-05-06, 2024-05-06 13:10:07.172, null, 0, 1, 2024-05-06 13:10:07.173, 2024-05-06 13:10:07.173).` "}
{"level":"error","message":"Date & Time:- 2024-05-06T07:49:48.343Z POST 0.3060460000997409 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (791, null, 2024-05-06, 2024-05-06 13:19:48.341, null, 0, 1, 2024-05-06 13:19:48.342, 2024-05-06 13:19:48.342).` "}
{"level":"error","message":"Date & Time:- 2024-05-08T08:06:09.855Z GET 0.49430000002030283 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nY:\\aadrika\\juidco_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-08T08:08:25.335Z GET 0.3593999999575317 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nY:\\aadrika\\juidco_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-08T08:11:06.719Z GET 0.34150000009685755 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nY:\\aadrika\\juidco_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-08T08:11:40.992Z GET 0.5715999999083579 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nY:\\aadrika\\juidco_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-08T08:11:58.959Z GET 0.34829999995417893 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nY:\\aadrika\\juidco_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-08T08:12:20.598Z GET 0.4084000000730157 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nY:\\aadrika\\juidco_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-08T08:13:19.296Z GET 0.46840000012889504 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nY:\\aadrika\\juidco_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-08T08:15:37.409Z GET 0.4047000000718981 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nY:\\aadrika\\juidco_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-08T08:15:45.179Z GET 0.531300000147894 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nY:\\aadrika\\juidco_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-08T08:15:55.282Z GET 0.39650000003166497 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nY:\\aadrika\\juidco_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-08T08:16:37.594Z GET 0.35380000015720725 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nY:\\aadrika\\juidco_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-08T08:16:53.499Z GET 0.40570000000298023 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nY:\\aadrika\\juidco_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-08T08:17:02.172Z GET 0.4329000001307577 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nY:\\aadrika\\juidco_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-08T08:20:38.348Z GET 0.3506000000052154 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nY:\\aadrika\\juidco_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-08T08:28:04.520Z GET 0.6990999998524785 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nY:\\aadrika\\juidco_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-08T08:29:18.618Z GET 0.35000000009313226 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nY:\\aadrika\\juidco_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-08T08:29:35.907Z GET 0.3321000002324581 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nY:\\aadrika\\juidco_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-08T08:30:45.666Z GET 0.3459000000730157 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nY:\\aadrika\\juidco_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-08T09:27:05.905Z GET 0.3801999995484948 /api/hrms/v1/pay/payroll?limit=10 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nY:\\aadrika\\juidco_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:421:29\n\n  418 }\n  419 \n  420 const [data, count] = await prisma.$transaction([\n→ 421   prisma.payroll_master.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T05:57:52.118Z GET 0.38208000001031905 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T05:58:47.903Z GET 0.26994000002741814 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T05:59:20.792Z GET 0.25907999998889863 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T05:59:21.759Z GET 0.33732300001429394 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T05:59:21.874Z GET 0.29747500002849847 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T05:59:21.933Z GET 0.25623200001427904 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T05:59:21.980Z GET 0.2931800000369549 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T05:59:23.213Z GET 0.24713099998189136 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T05:59:23.256Z GET 0.28111900005023926 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T05:59:23.360Z GET 0.27836600004229695 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T05:59:23.400Z GET 0.2205289999837987 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T05:59:29.397Z GET 0.29431100003421307 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:19:11.166Z GET 0.4620590000413358 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:19:11.283Z GET 0.25030600000172853 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:19:13.864Z GET 0.2737789999227971 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:19:34.669Z GET 0.2212350000627339 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:19:39.105Z GET 0.23556299996562302 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:19:42.667Z GET 0.6862590000964701 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:20:26.691Z GET 0.3657259999308735 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:20:50.376Z GET 0.26278900005854666 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:21:15.404Z GET 0.3129010000266135 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:21:24.323Z GET 0.2532290001399815 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:21:29.635Z GET 0.2830410001333803 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:21:59.405Z GET 0.27249700017273426 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:22:03.253Z GET 0.320892000105232 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:22:05.798Z GET 0.24761300021782517 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:22:56.059Z GET 0.25496200006455183 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:23:04.066Z GET 0.3057260001078248 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:23:05.221Z GET 0.45321100018918514 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:23:08.794Z GET 0.2393279999960214 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:23:14.064Z GET 0.2688699997961521 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:23:45.110Z GET 0.47759700007736683 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:23:48.611Z GET 0.30949999997392297 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:24:03.101Z GET 0.38921799999661744 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:24:15.071Z GET 0.2725259999278933 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:24:17.212Z GET 0.2700279999990016 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:24:25.543Z GET 0.2763620000332594 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:24:35.915Z GET 0.24014699994586408 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:24:38.118Z GET 0.24129199981689453 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T06:24:40.267Z GET 0.3812539998907596 /api/hrms/v1/employee/get?limit=10&page=1null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:363:24\n\n  360 }\n  361 \n  362 const [data, count] = await prisma.$transaction([\n→ 363   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-10T13:19:36.312Z GET 0.3219319999916479 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date=31/05/2024 status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:88:59\n\n  85   };\n  86 }\n  87 \n→ 88 const data = await prisma.employee_attendance_history.findMany({\n       select: {\n         id: true,\n         employee_id: true,\n         emp_in: true,\n         emp_out: true,\n         date: true,\n         created_at: true,\n         updated_at: true\n       },\n       orderBy: {\n         date: \"desc\"\n       },\n       where: {\n         employee_id: \"EMP912e43\",\n         date: new Date(\"Invalid Date\")\n               ~~~~~~~~~~~~~~~~~~~~~~~~\n       }\n     })\n\nInvalid value for argument `date`: Provided Date object is invalid. Expected Date. "}
{"level":"error","message":"Date & Time:- 2024-05-10T13:21:16.788Z GET 0.2256690000067465 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date=15/05/2024 status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:88:59\n\n  85   };\n  86 }\n  87 \n→ 88 const data = await prisma.employee_attendance_history.findMany({\n       select: {\n         id: true,\n         employee_id: true,\n         emp_in: true,\n         emp_out: true,\n         date: true,\n         created_at: true,\n         updated_at: true\n       },\n       orderBy: {\n         date: \"desc\"\n       },\n       where: {\n         employee_id: \"EMP912e43\",\n         date: new Date(\"Invalid Date\")\n               ~~~~~~~~~~~~~~~~~~~~~~~~\n       }\n     })\n\nInvalid value for argument `date`: Provided Date object is invalid. Expected Date. "}
{"level":"error","message":"Date & Time:- 2024-05-14T09:06:31.077Z POST 0.3873030000831932 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (776, null, 2024-05-14, 2024-05-14 14:36:31.025, null, 0, 1, 2024-05-14 14:36:31.07, 2024-05-14 14:36:31.07).` "}
{"level":"error","message":"Date & Time:- 2024-05-14T09:07:02.781Z POST 0.3713609999977052 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (777, null, 2024-05-14, 2024-05-14 14:37:02.779, null, 0, 1, 2024-05-14 14:37:02.78, 2024-05-14 14:37:02.78).` "}
{"level":"error","message":"Date & Time:- 2024-05-15T04:47:31.623Z GET 0.2606379999779165 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date=15/05/2024 status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:88:59\n\n  85   };\n  86 }\n  87 \n→ 88 const data = await prisma.employee_attendance_history.findMany({\n       select: {\n         id: true,\n         employee_id: true,\n         emp_in: true,\n         emp_out: true,\n         date: true,\n         created_at: true,\n         updated_at: true\n       },\n       orderBy: {\n         date: \"desc\"\n       },\n       where: {\n         employee_id: \"EMP912e43\",\n         date: new Date(\"Invalid Date\")\n               ~~~~~~~~~~~~~~~~~~~~~~~~\n       }\n     })\n\nInvalid value for argument `date`: Provided Date object is invalid. Expected Date. "}
{"level":"error","message":"Date & Time:- 2024-05-15T04:47:36.119Z GET 0.3604139999952167 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date=16/05/2024 status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:88:59\n\n  85   };\n  86 }\n  87 \n→ 88 const data = await prisma.employee_attendance_history.findMany({\n       select: {\n         id: true,\n         employee_id: true,\n         emp_in: true,\n         emp_out: true,\n         date: true,\n         created_at: true,\n         updated_at: true\n       },\n       orderBy: {\n         date: \"desc\"\n       },\n       where: {\n         employee_id: \"EMP912e43\",\n         date: new Date(\"Invalid Date\")\n               ~~~~~~~~~~~~~~~~~~~~~~~~\n       }\n     })\n\nInvalid value for argument `date`: Provided Date object is invalid. Expected Date. "}
{"level":"error","message":"Date & Time:- 2024-05-15T04:50:43.670Z GET 0.283545000012964 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date=29/05/2024 status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:88:59\n\n  85   };\n  86 }\n  87 \n→ 88 const data = await prisma.employee_attendance_history.findMany({\n       select: {\n         id: true,\n         employee_id: true,\n         emp_in: true,\n         emp_out: true,\n         date: true,\n         created_at: true,\n         updated_at: true\n       },\n       orderBy: {\n         date: \"desc\"\n       },\n       where: {\n         employee_id: \"EMP912e43\",\n         date: new Date(\"Invalid Date\")\n               ~~~~~~~~~~~~~~~~~~~~~~~~\n       }\n     })\n\nInvalid value for argument `date`: Provided Date object is invalid. Expected Date. "}
{"level":"error","message":"Date & Time:- 2024-05-15T04:50:56.166Z GET 0.47716399998171255 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date=15/05/2024 status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:88:59\n\n  85   };\n  86 }\n  87 \n→ 88 const data = await prisma.employee_attendance_history.findMany({\n       select: {\n         id: true,\n         employee_id: true,\n         emp_in: true,\n         emp_out: true,\n         date: true,\n         created_at: true,\n         updated_at: true\n       },\n       orderBy: {\n         date: \"desc\"\n       },\n       where: {\n         employee_id: \"EMP912e43\",\n         date: new Date(\"Invalid Date\")\n               ~~~~~~~~~~~~~~~~~~~~~~~~\n       }\n     })\n\nInvalid value for argument `date`: Provided Date object is invalid. Expected Date. "}
{"level":"error","message":"Date & Time:- 2024-05-15T04:51:16.270Z GET 0.25290900003165007 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date=15/05/2024 status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:88:59\n\n  85   };\n  86 }\n  87 \n→ 88 const data = await prisma.employee_attendance_history.findMany({\n       select: {\n         id: true,\n         employee_id: true,\n         emp_in: true,\n         emp_out: true,\n         date: true,\n         created_at: true,\n         updated_at: true\n       },\n       orderBy: {\n         date: \"desc\"\n       },\n       where: {\n         employee_id: \"EMP912e43\",\n         date: new Date(\"Invalid Date\")\n               ~~~~~~~~~~~~~~~~~~~~~~~~\n       }\n     })\n\nInvalid value for argument `date`: Provided Date object is invalid. Expected Date. "}
{"level":"error","message":"Date & Time:- 2024-05-15T04:54:46.597Z GET 0.4384509999999864 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date=17/05/2024 status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:88:59\n\n  85   };\n  86 }\n  87 \n→ 88 const data = await prisma.employee_attendance_history.findMany({\n       select: {\n         id: true,\n         employee_id: true,\n         emp_in: true,\n         emp_out: true,\n         date: true,\n         created_at: true,\n         updated_at: true\n       },\n       orderBy: {\n         date: \"desc\"\n       },\n       where: {\n         employee_id: \"EMP912e43\",\n         date: new Date(\"Invalid Date\")\n               ~~~~~~~~~~~~~~~~~~~~~~~~\n       }\n     })\n\nInvalid value for argument `date`: Provided Date object is invalid. Expected Date. "}
{"level":"error","message":"Date & Time:- 2024-05-15T04:55:15.420Z GET 0.8958309999998164 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date=15/05/2024 status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:88:59\n\n  85   };\n  86 }\n  87 \n→ 88 const data = await prisma.employee_attendance_history.findMany({\n       select: {\n         id: true,\n         employee_id: true,\n         emp_in: true,\n         emp_out: true,\n         date: true,\n         created_at: true,\n         updated_at: true\n       },\n       orderBy: {\n         date: \"desc\"\n       },\n       where: {\n         employee_id: \"EMP912e43\",\n         date: \"15/05/2024\"\n               ~~~~~~~~~~~~\n       }\n     })\n\nInvalid value for argument `date`: input contains invalid characters. Expected ISO-8601 DateTime. "}
{"level":"error","message":"Date & Time:- 2024-05-15T04:56:16.178Z GET 0.48615499999868916 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date=14/05/2024 status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:88:59\n\n  85   };\n  86 }\n  87 \n→ 88 const data = await prisma.employee_attendance_history.findMany({\n       select: {\n         id: true,\n         employee_id: true,\n         emp_in: true,\n         emp_out: true,\n         date: true,\n         created_at: true,\n         updated_at: true\n       },\n       orderBy: {\n         date: \"desc\"\n       },\n       where: {\n         employee_id: \"EMP912e43\",\n         date: \"14/05/2024\"\n               ~~~~~~~~~~~~\n       }\n     })\n\nInvalid value for argument `date`: input contains invalid characters. Expected ISO-8601 DateTime. "}
{"level":"error","message":"Date & Time:- 2024-05-15T04:59:36.270Z GET 0.6676300000108313 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date=NaN-NaN-NaN status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:88:59\n\n  85   };\n  86 }\n  87 \n→ 88 const data = await prisma.employee_attendance_history.findMany({\n       select: {\n         id: true,\n         employee_id: true,\n         emp_in: true,\n         emp_out: true,\n         date: true,\n         created_at: true,\n         updated_at: true\n       },\n       orderBy: {\n         date: \"desc\"\n       },\n       where: {\n         employee_id: \"EMP912e43\",\n         date: \"NaN-NaN-NaN\"\n               ~~~~~~~~~~~~~\n       }\n     })\n\nInvalid value for argument `date`: input contains invalid characters. Expected ISO-8601 DateTime. "}
{"level":"error","message":"Date & Time:- 2024-05-15T04:59:52.682Z GET 0.22818200002075173 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date=15/05/2024 status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:88:59\n\n  85   };\n  86 }\n  87 \n→ 88 const data = await prisma.employee_attendance_history.findMany({\n       select: {\n         id: true,\n         employee_id: true,\n         emp_in: true,\n         emp_out: true,\n         date: true,\n         created_at: true,\n         updated_at: true\n       },\n       orderBy: {\n         date: \"desc\"\n       },\n       where: {\n         employee_id: \"EMP912e43\",\n         date: \"15/05/2024\"\n               ~~~~~~~~~~~~\n       }\n     })\n\nInvalid value for argument `date`: input contains invalid characters. Expected ISO-8601 DateTime. "}
{"level":"error","message":"Date & Time:- 2024-05-15T05:00:29.255Z GET 0.8764599999994971 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date=14/05/2024 status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:88:59\n\n  85   };\n  86 }\n  87 \n→ 88 const data = await prisma.employee_attendance_history.findMany({\n       select: {\n         id: true,\n         employee_id: true,\n         emp_in: true,\n         emp_out: true,\n         date: true,\n         created_at: true,\n         updated_at: true\n       },\n       orderBy: {\n         date: \"desc\"\n       },\n       where: {\n         employee_id: \"EMP912e43\",\n         date: \"14/05/2024\"\n               ~~~~~~~~~~~~\n       }\n     })\n\nInvalid value for argument `date`: input contains invalid characters. Expected ISO-8601 DateTime. "}
{"level":"error","message":"Date & Time:- 2024-05-15T05:02:08.268Z GET 0.3824219999996785 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date=15/05/2024 status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:92:59\n\n  89   };\n  90 }\n  91 \n→ 92 const data = await prisma.employee_attendance_history.findMany({\n       select: {\n         id: true,\n         employee_id: true,\n         emp_in: true,\n         emp_out: true,\n         date: true,\n         created_at: true,\n         updated_at: true\n       },\n       orderBy: {\n         date: \"desc\"\n       },\n       where: {\n         employee_id: \"EMP912e43\",\n         date: \"15/05/2024\"\n               ~~~~~~~~~~~~\n       }\n     })\n\nInvalid value for argument `date`: input contains invalid characters. Expected ISO-8601 DateTime. "}
{"level":"error","message":"Date & Time:- 2024-05-15T05:02:58.421Z GET 0.5126399999971909 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date=14/05/2024 status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:92:59\n\n  89   };\n  90 }\n  91 \n→ 92 const data = await prisma.employee_attendance_history.findMany({\n       select: {\n         id: true,\n         employee_id: true,\n         emp_in: true,\n         emp_out: true,\n         date: true,\n         created_at: true,\n         updated_at: true\n       },\n       orderBy: {\n         date: \"desc\"\n       },\n       where: {\n         employee_id: \"EMP912e43\",\n         date: \"2024-05-14\"\n               ~~~~~~~~~~~~\n       }\n     })\n\nInvalid value for argument `date`: premature end of input. Expected ISO-8601 DateTime. "}
{"level":"error","message":"Date & Time:- 2024-05-15T05:02:59.371Z GET 0.4930960000056075 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date=15/05/2024 status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:92:59\n\n  89   };\n  90 }\n  91 \n→ 92 const data = await prisma.employee_attendance_history.findMany({\n       select: {\n         id: true,\n         employee_id: true,\n         emp_in: true,\n         emp_out: true,\n         date: true,\n         created_at: true,\n         updated_at: true\n       },\n       orderBy: {\n         date: \"desc\"\n       },\n       where: {\n         employee_id: \"EMP912e43\",\n         date: \"2024-05-15\"\n               ~~~~~~~~~~~~\n       }\n     })\n\nInvalid value for argument `date`: premature end of input. Expected ISO-8601 DateTime. "}
{"level":"error","message":"Date & Time:- 2024-05-15T05:03:06.665Z GET 0.26078800000686897 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date=14/05/2024 status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:92:59\n\n  89   };\n  90 }\n  91 \n→ 92 const data = await prisma.employee_attendance_history.findMany({\n       select: {\n         id: true,\n         employee_id: true,\n         emp_in: true,\n         emp_out: true,\n         date: true,\n         created_at: true,\n         updated_at: true\n       },\n       orderBy: {\n         date: \"desc\"\n       },\n       where: {\n         employee_id: \"EMP912e43\",\n         date: \"2024-05-14\"\n               ~~~~~~~~~~~~\n       }\n     })\n\nInvalid value for argument `date`: premature end of input. Expected ISO-8601 DateTime. "}
{"level":"error","message":"Date & Time:- 2024-05-15T05:36:25.252Z POST 0.282048000022769 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (780, null, 2024-05-15, 2024-05-15 11:06:25.245, null, 0, 1, 2024-05-15 11:06:25.246, 2024-05-15 11:06:25.246).` "}
{"level":"error","message":"Date & Time:- 2024-05-15T05:59:46.910Z POST 0.7295819999999367 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (1532, null, 2024-05-15, 2024-05-15 11:29:46.897, null, 0, 1, 2024-05-15 11:29:46.898, 2024-05-15 11:29:46.898).` "}
{"level":"error","message":"Date & Time:- 2024-05-15T06:59:45.227Z POST 2.10949800000526 /api/hrms/v1/pay/payroll/update-permissible status = false, err = Cannot read properties of undefined (reading 'salary_per_hour') "}
{"level":"error","message":"Date & Time:- 2024-05-15T07:00:54.409Z POST 2.171374999998079 /api/hrms/v1/pay/payroll/update-permissible status = false, err = Cannot read properties of undefined (reading 'salary_per_hour') "}
{"level":"error","message":"Date & Time:- 2024-05-15T07:06:01.675Z POST 0.41614000004483387 /api/hrms/v1/pay/payroll/update-permissible status = false, err = Cannot read properties of undefined (reading 'salary_per_hour') "}
{"level":"error","message":"Date & Time:- 2024-05-15T07:25:01.869Z POST 2.460609999998269 /api/hrms/v1/pay/payroll/update-permissible status = false, err = Cannot read properties of undefined (reading 'salary_per_hour') "}
{"level":"error","message":"Date & Time:- 2024-05-15T07:25:50.825Z POST 2.316808999999921 /api/hrms/v1/pay/payroll/update-permissible status = false, err = Cannot read properties of undefined (reading 'salary_per_hour') "}
{"level":"error","message":"Date & Time:- 2024-05-15T07:26:14.571Z POST 2.01796000000013 /api/hrms/v1/pay/payroll/update-permissible status = false, err = Cannot read properties of undefined (reading 'salary_per_hour') "}
{"level":"error","message":"Date & Time:- 2024-05-15T07:27:07.322Z POST 0.6914860000033514 /api/hrms/v1/pay/payroll/update-permissible status = false, err = Cannot read properties of undefined (reading 'salary_per_hour') "}
{"level":"error","message":"Date & Time:- 2024-05-15T07:28:50.511Z POST 2.0627260000001115 /api/hrms/v1/pay/payroll/update-permissible status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: operator does not exist: timestamp without time zone = text\nHINT: No operator matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"Date & Time:- 2024-05-15T08:13:18.126Z POST 0.3558279999997467 /api/hrms/v1/employee/leave status = false, err = \nInvalid `prisma.employee_leave_details.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empLeave.dao.ts:51:62\n\n  48   },\n  49 };\n  50 \n→ 51 const leaveRequest = await prisma.employee_leave_details.create({\n       data: {\n         employee_id: \"EMP912e43\",\n         emp_leave_type_id: null,\n         leave_from: \"2024-04-03\",\n         leave_to: \"2024-04-04\",\n         total_days: 2,\n         leave_reason: \"csdc\",\n         file_upload: null,\n         half_day: true,\n         leave_status: undefined,\n     +   emp_leave_type: {\n     +     create: employee_leave_typeCreateWithoutEmployee_leave_detailsInput | employee_leave_typeUncheckedCreateWithoutEmployee_leave_detailsInput,\n     +     connectOrCreate: employee_leave_typeCreateOrConnectWithoutEmployee_leave_detailsInput,\n     +     connect: employee_leave_typeWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `emp_leave_type` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-15T08:13:20.827Z POST 0.24048199999378994 /api/hrms/v1/employee/leave status = false, err = \nInvalid `prisma.employee_leave_details.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empLeave.dao.ts:51:62\n\n  48   },\n  49 };\n  50 \n→ 51 const leaveRequest = await prisma.employee_leave_details.create({\n       data: {\n         employee_id: \"EMP912e43\",\n         emp_leave_type_id: null,\n         leave_from: \"2024-04-03\",\n         leave_to: \"2024-04-04\",\n         total_days: 2,\n         leave_reason: \"csdc\",\n         file_upload: null,\n         half_day: true,\n         leave_status: undefined,\n     +   emp_leave_type: {\n     +     create: employee_leave_typeCreateWithoutEmployee_leave_detailsInput | employee_leave_typeUncheckedCreateWithoutEmployee_leave_detailsInput,\n     +     connectOrCreate: employee_leave_typeCreateOrConnectWithoutEmployee_leave_detailsInput,\n     +     connect: employee_leave_typeWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `emp_leave_type` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-15T12:50:54.011Z POST 0.4772499999962747 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (751, null, 2024-05-15, 2024-05-15 18:20:54.001, null, 0, 1, 2024-05-15 18:20:54.002, 2024-05-15 18:20:54.002).` "}
{"level":"error","message":"Date & Time:- 2024-05-23T07:57:41.901Z POST 0.30086299998220056 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (758, null, 2024-05-23, 2024-05-23 13:27:41.894, null, 0, 1, 2024-05-23 13:27:41.894, 2024-05-23 13:27:41.894).` "}
{"level":"error","message":"Date & Time:- 2024-05-23T09:45:29.472Z POST 1.1519109999935608 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (761, null, 2024-05-23, 2024-05-23 15:15:29.462, null, 0, 1, 2024-05-23 15:15:29.463, 2024-05-23 15:15:29.463).` "}
{"level":"error","message":"Date & Time:- 2024-05-23T09:47:53.361Z GET 0.28279099999963364 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date=23/05/2024 status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:98:59\n\n  95   };\n  96 }\n  97 \n→ 98 const data = await prisma.employee_attendance_history.findMany({\n       select: {\n         id: true,\n         employee_id: true,\n         emp_in: true,\n         emp_out: true,\n         date: true,\n         created_at: true,\n         updated_at: true\n       },\n       orderBy: {\n         date: \"desc\"\n       },\n       where: {\n         employee_id: \"EMP912e43\",\n         date: new Date(\"Invalid Date\")\n               ~~~~~~~~~~~~~~~~~~~~~~~~\n       }\n     })\n\nInvalid value for argument `date`: Provided Date object is invalid. Expected Date. "}
{"level":"error","message":"Date & Time:- 2024-05-23T09:48:26.268Z GET 0.4079490000003716 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date=23/05/2024 status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:98:59\n\n  95   };\n  96 }\n  97 \n→ 98 const data = await prisma.employee_attendance_history.findMany({\n       select: {\n         id: true,\n         employee_id: true,\n         emp_in: true,\n         emp_out: true,\n         date: true,\n         created_at: true,\n         updated_at: true\n       },\n       orderBy: {\n         date: \"desc\"\n       },\n       where: {\n         employee_id: \"EMP912e43\",\n         date: new Date(\"Invalid Date\")\n               ~~~~~~~~~~~~~~~~~~~~~~~~\n       }\n     })\n\nInvalid value for argument `date`: Provided Date object is invalid. Expected Date. "}
{"level":"error","message":"Date & Time:- 2024-05-23T09:53:46.192Z GET 0.44018599999981234 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format. Expected mm/dd/yyyy or dd/mm/yyyy "}
{"level":"error","message":"Date & Time:- 2024-05-23T09:53:46.264Z GET 0.44211899999936577 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format. Expected mm/dd/yyyy or dd/mm/yyyy "}
{"level":"error","message":"Date & Time:- 2024-05-23T09:53:46.283Z GET 0.28673499999968044 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date= status = false, err = Invalid date format. Expected mm/dd/yyyy or dd/mm/yyyy "}
{"level":"error","message":"Date & Time:- 2024-05-23T09:54:13.296Z GET 0.2197359999991022 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format. Expected mm/dd/yyyy or dd/mm/yyyy "}
{"level":"error","message":"Date & Time:- 2024-05-23T09:54:13.346Z GET 0.33585999999922933 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format. Expected mm/dd/yyyy or dd/mm/yyyy "}
{"level":"error","message":"Date & Time:- 2024-05-23T09:54:13.364Z GET 0.24986100000387523 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date= status = false, err = Invalid date format. Expected mm/dd/yyyy or dd/mm/yyyy "}
{"level":"error","message":"Date & Time:- 2024-05-23T09:55:33.318Z GET 0.3128200000001016 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format. Expected mm/dd/yyyy or dd/mm/yyyy "}
{"level":"error","message":"Date & Time:- 2024-05-23T09:55:33.395Z GET 0.3031760000003487 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format. Expected mm/dd/yyyy or dd/mm/yyyy "}
{"level":"error","message":"Date & Time:- 2024-05-23T09:55:33.414Z GET 0.4110920000002807 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date= status = false, err = Invalid date format. Expected mm/dd/yyyy or dd/mm/yyyy "}
{"level":"error","message":"Date & Time:- 2024-05-27T04:00:34.637Z POST 0.42733700000098906 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (814, null, 2024-05-27, 2024-05-27 09:30:34.63, null, 0, 1, 2024-05-27 09:30:34.631, 2024-05-27 09:30:34.631).` "}
{"level":"error","message":"Date & Time:- 2024-05-27T04:05:37.201Z POST 0.2786200000264216 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (817, null, 2024-05-27, 2024-05-27 09:35:37.193, null, 0, 1, 2024-05-27 09:35:37.194, 2024-05-27 09:35:37.194).` "}
{"level":"error","message":"Date & Time:- 2024-05-27T04:06:23.581Z POST 0.2805590000061784 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (818, null, 2024-05-27, 2024-05-27 09:36:23.578, null, 0, 1, 2024-05-27 09:36:23.579, 2024-05-27 09:36:23.579).` "}
{"level":"error","message":"Date & Time:- 2024-05-27T04:07:22.687Z POST 0.26829099998576567 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (819, null, 2024-05-27, 2024-05-27 09:37:22.685, null, 0, 1, 2024-05-27 09:37:22.686, 2024-05-27 09:37:22.686).` "}
{"level":"error","message":"Date & Time:- 2024-05-27T07:09:37.090Z POST 0.3380129999713972 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (822, null, 2024-05-27, 2024-05-27 12:39:37.083, null, 0, 1, 2024-05-27 12:39:37.084, 2024-05-27 12:39:37.084).` "}
{"level":"error","message":"Date & Time:- 2024-05-27T07:45:35.559Z POST 0.3517770000034943 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (893, null, 2024-05-27, 2024-05-27 13:15:35.551, null, 0, 1, 2024-05-27 13:15:35.552, 2024-05-27 13:15:35.552).` "}
{"level":"error","message":"Date & Time:- 2024-05-27T07:49:12.204Z POST 0.3244570000024396 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (895, null, 2024-05-27, 2024-05-27 13:19:12.158, null, 0, 1, 2024-05-27 13:19:12.198, 2024-05-27 13:19:12.198).` "}
{"level":"error","message":"Date & Time:- 2024-05-27T09:59:10.716Z POST 0.37974700000631856 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (4832, null, 2024-05-27, 2024-05-27 15:29:10.67, null, 0, 1, 2024-05-27 15:29:10.709, 2024-05-27 15:29:10.709).` "}
{"level":"error","message":"Date & Time:- 2024-05-27T10:22:36.102Z POST 0.4069009999802802 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (4834, null, 2024-05-27, 2024-05-27 15:52:36.095, null, 0, 1, 2024-05-27 15:52:36.096, 2024-05-27 15:52:36.096).` "}
{"level":"error","message":"Date & Time:- 2024-05-27T11:27:11.121Z GET 0.34712399999261834 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-05-27T11:34:20.274Z POST 0.28500500007066876 /api/hrms/v1/employee/leave status = false, err = \nInvalid `prisma.employee_leave_details.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empLeave.dao.ts:99:61\n\n  96      },\n  97  };\n  98 \n→ 99 const leaveRequest = await prisma.employee_leave_details.create({\n       data: {\n         employee_id: \"EMP912e43\",\n         emp_leave_type_id: null,\n         leave_from: \"2024-05-30\",\n         leave_to: \"2024-06-01\",\n         total_days: 1.5,\n         leave_reason: \"dftyfty\",\n         file_upload: null,\n         half_day: true,\n         leave_status: undefined,\n     +   emp_leave_type: {\n     +     create: employee_leave_typeCreateWithoutEmployee_leave_detailsInput | employee_leave_typeUncheckedCreateWithoutEmployee_leave_detailsInput,\n     +     connectOrCreate: employee_leave_typeCreateOrConnectWithoutEmployee_leave_detailsInput,\n     +     connect: employee_leave_typeWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `emp_leave_type` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-27T11:46:06.580Z POST 0.3026280000049155 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (779, null, 2024-05-27, 2024-05-27 17:16:06.572, null, 0, 1, 2024-05-27 17:16:06.573, 2024-05-27 17:16:06.573).` "}
{"level":"error","message":"Date & Time:- 2024-05-27T12:29:43.764Z POST 2.5265979999967385 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (780, null, 2024-05-27, 2024-05-27 17:59:43.711, null, 0, 1, 2024-05-27 17:59:43.753, 2024-05-27 17:59:43.753).` "}
{"level":"error","message":"Date & Time:- 2024-05-27T12:32:33.654Z POST 0.3519369999994524 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (782, null, 2024-05-27, 2024-05-27 18:02:33.651, null, 0, 1, 2024-05-27 18:02:33.653, 2024-05-27 18:02:33.653).` "}
{"level":"error","message":"Date & Time:- 2024-05-27T12:56:14.064Z POST 0.3088140001054853 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (784, null, 2024-05-27, 2024-05-27 18:26:14.024, null, 0, 1, 2024-05-27 18:26:14.063, 2024-05-27 18:26:14.063).` "}
{"level":"error","message":"Date & Time:- 2024-05-27T14:36:41.630Z GET 0.45869999984279275 /api/hrms/v1/pay/payroll?limit=10/pay/payroll?limit=10&page=1&search= status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/payroll/payroll.dao.ts:487:29\n\n  484 }\n  485 \n  486 const [data, count] = await prisma.$transaction([\n→ 487   prisma.payroll_master.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true,\n            month: true,\n            year: true,\n            basic_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n          where: {\n            month: 5,\n            year: 2024\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-28T04:35:00.746Z POST 0.39171100000021397 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (906, null, 2024-05-28, 2024-05-28 10:05:00.74, null, 0, 1, 2024-05-28 10:05:00.741, 2024-05-28 10:05:00.741).` "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:18:44.908Z GET 0.2865359999705106 /api/hrms/v1/pay/payslip?emp_id=EMP912e43&name=TDS,EPF,ESIC status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/payslip.dao.ts:82:49\n\n  79 //       AND EXTRACT(YEAR FROM date) = EXTRACT(YEAR FROM ${date})\n  80 //   AND EXTRACT(MONTH FROM date) = EXTRACT(MONTH FROM ${date});\n  81 //     `;\n→ 82 const payroll = await prisma.payroll_master.findMany({\n       where: {\n         emp_id: \"EMP912e43\",\n         AND: [\n           {\n             date: {\n               gte: new Date(\"Invalid Date\")\n                    ~~~~~~~~~~~~~~~~~~~~~~~~\n             }\n           },\n           {\n             date: {\n               lt: new Date(\"Invalid Date\")\n             }\n           }\n         ]\n       }\n     })\n\nInvalid value for argument `gte`: Provided Date object is invalid. Expected Date. "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:18:47.638Z GET 0.2260819999501109 /api/hrms/v1/pay/payslip?emp_id=EMP912e43&name=TDS,EPF,ESIC status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/payslip.dao.ts:82:49\n\n  79 //       AND EXTRACT(YEAR FROM date) = EXTRACT(YEAR FROM ${date})\n  80 //   AND EXTRACT(MONTH FROM date) = EXTRACT(MONTH FROM ${date});\n  81 //     `;\n→ 82 const payroll = await prisma.payroll_master.findMany({\n       where: {\n         emp_id: \"EMP912e43\",\n         AND: [\n           {\n             date: {\n               gte: new Date(\"Invalid Date\")\n                    ~~~~~~~~~~~~~~~~~~~~~~~~\n             }\n           },\n           {\n             date: {\n               lt: new Date(\"Invalid Date\")\n             }\n           }\n         ]\n       }\n     })\n\nInvalid value for argument `gte`: Provided Date object is invalid. Expected Date. "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:19:00.100Z GET 0.26920400001108646 /api/hrms/v1/pay/payslip?emp_id=EMP912e43&name=TDS,EPF,ESIC status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/payslip.dao.ts:82:49\n\n  79 //       AND EXTRACT(YEAR FROM date) = EXTRACT(YEAR FROM ${date})\n  80 //   AND EXTRACT(MONTH FROM date) = EXTRACT(MONTH FROM ${date});\n  81 //     `;\n→ 82 const payroll = await prisma.payroll_master.findMany({\n       where: {\n         emp_id: \"EMP912e43\",\n         AND: [\n           {\n             date: {\n               gte: new Date(\"Invalid Date\")\n                    ~~~~~~~~~~~~~~~~~~~~~~~~\n             }\n           },\n           {\n             date: {\n               lt: new Date(\"Invalid Date\")\n             }\n           }\n         ]\n       }\n     })\n\nInvalid value for argument `gte`: Provided Date object is invalid. Expected Date. "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:20:08.023Z GET 0.32225499994819984 /api/hrms/v1/pay/payslip?emp_id=EMP912e43&name=TDS,EPF,ESIC status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/payslip.dao.ts:82:49\n\n  79 //       AND EXTRACT(YEAR FROM date) = EXTRACT(YEAR FROM ${date})\n  80 //   AND EXTRACT(MONTH FROM date) = EXTRACT(MONTH FROM ${date});\n  81 //     `;\n→ 82 const payroll = await prisma.payroll_master.findMany({\n       where: {\n         emp_id: \"EMP912e43\",\n         AND: [\n           {\n             date: {\n               gte: new Date(\"Invalid Date\")\n                    ~~~~~~~~~~~~~~~~~~~~~~~~\n             }\n           },\n           {\n             date: {\n               lt: new Date(\"Invalid Date\")\n             }\n           }\n         ]\n       }\n     })\n\nInvalid value for argument `gte`: Provided Date object is invalid. Expected Date. "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:20:09.973Z GET 0.24787600000854582 /api/hrms/v1/pay/payslip?emp_id=EMP912e43&name=TDS,EPF,ESIC status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/payslip.dao.ts:82:49\n\n  79 //       AND EXTRACT(YEAR FROM date) = EXTRACT(YEAR FROM ${date})\n  80 //   AND EXTRACT(MONTH FROM date) = EXTRACT(MONTH FROM ${date});\n  81 //     `;\n→ 82 const payroll = await prisma.payroll_master.findMany({\n       where: {\n         emp_id: \"EMP912e43\",\n         AND: [\n           {\n             date: {\n               gte: new Date(\"Invalid Date\")\n                    ~~~~~~~~~~~~~~~~~~~~~~~~\n             }\n           },\n           {\n             date: {\n               lt: new Date(\"Invalid Date\")\n             }\n           }\n         ]\n       }\n     })\n\nInvalid value for argument `gte`: Provided Date object is invalid. Expected Date. "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:21:21.196Z GET 0.34159200004069135 /api/hrms/v1/pay/payslip?emp_id=EMP912e43&name=TDS,EPF,ESIC status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/payslip.dao.ts:82:49\n\n  79 //       AND EXTRACT(YEAR FROM date) = EXTRACT(YEAR FROM ${date})\n  80 //   AND EXTRACT(MONTH FROM date) = EXTRACT(MONTH FROM ${date});\n  81 //     `;\n→ 82 const payroll = await prisma.payroll_master.findMany({\n       where: {\n         emp_id: \"EMP912e43\",\n         AND: [\n           {\n             date: {\n               gte: new Date(\"Invalid Date\")\n                    ~~~~~~~~~~~~~~~~~~~~~~~~\n             }\n           },\n           {\n             date: {\n               lt: new Date(\"Invalid Date\")\n             }\n           }\n         ]\n       }\n     })\n\nInvalid value for argument `gte`: Provided Date object is invalid. Expected Date. "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:34:03.728Z GET 0.3762569999998959 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:34:03.803Z GET 0.3673500000004424 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:34:03.824Z GET 0.42406800000026124 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:34:06.205Z GET 0.25891300000148476 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date=30/05/2024 status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:126:59\n\n  123   };\n  124 }\n  125 \n→ 126 const data = await prisma.employee_attendance_history.findMany({\n        select: {\n          id: true,\n          employee_id: true,\n          emp_in: true,\n          emp_out: true,\n          date: true,\n          created_at: true,\n          updated_at: true\n        },\n        orderBy: {\n          date: \"desc\"\n        },\n        where: {\n          employee_id: \"EMP912e43\",\n          date: \"2024-05-29\"\n                ~~~~~~~~~~~~\n        }\n      })\n\nInvalid value for argument `date`: premature end of input. Expected ISO-8601 DateTime. "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:37:10.736Z GET 0.3922770000008313 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:37:10.799Z GET 0.3825170000000071 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:37:10.819Z GET 0.4173580000006041 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:38:05.328Z GET 0.2297469999975874 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:38:05.402Z GET 0.23964300000079675 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:38:05.420Z GET 0.2298369999989518 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:38:18.369Z GET 0.3258029999997234 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:38:18.419Z GET 0.22428199999558274 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:38:18.439Z GET 0.21115800000552554 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:38:53.631Z GET 0.5855269999883603 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:38:53.735Z GET 0.4388500000059139 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:38:53.768Z GET 0.4634669999941252 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:38:56.645Z GET 0.2401769999996759 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:38:56.704Z GET 0.22046399999817368 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:38:56.723Z GET 0.26539500000944827 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:40:19.318Z GET 0.45491299999957846 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:40:19.373Z GET 0.2898219999988214 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:40:19.395Z GET 0.28454100000089966 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:40:33.338Z GET 0.39256899999963935 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:40:33.377Z GET 0.279262000000017 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:40:33.406Z GET 0.3669670000017504 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:40:53.617Z GET 0.2302639999979874 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:40:53.661Z GET 0.2317110000003595 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:40:53.682Z GET 0.534137999995437 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:41:00.575Z GET 0.739025999995647 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:41:00.624Z GET 0.32428199999412755 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:41:00.647Z GET 0.36663299999781884 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:43:24.636Z GET 0.3121099999989383 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:43:24.712Z GET 0.4094549999863375 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:43:24.758Z GET 0.27028100000461563 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:44:51.557Z GET 0.49823599999945145 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:44:51.594Z GET 0.45061600000008184 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:44:51.614Z GET 0.4306270000006407 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:45:19.044Z GET 0.34177500000078 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:45:19.065Z GET 0.2579680000053486 /api/hrms/v1/employee/attendance-history/get?emp_id=EMP912e43&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:45:19.086Z GET 0.22969799999555107 /api/hrms/v1/employee/attendance-history/get?emp_id=undefined&date= status = false, err = Invalid date format "}
{"level":"error","message":"Date & Time:- 2024-05-28T05:56:29.426Z POST 0.34282400005031377 /api/hrms/v1/employee/leave status = false, err = \nInvalid `prisma.employee_leave_details.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empLeave.dao.ts:98:62\n\n  95   },\n  96 };\n  97 \n→ 98 const leaveRequest = await prisma.employee_leave_details.create({\n       data: {\n         employee_id: \"EMP912e43\",\n         emp_leave_type_id: null,\n         leave_from: \"2024-05-30\",\n         leave_to: \"2024-05-31\",\n         total_days: 2,\n         leave_reason: \"ewewqefqewf\",\n         file_upload: null,\n         half_day: false,\n         leave_status: undefined,\n     +   emp_leave_type: {\n     +     create: employee_leave_typeCreateWithoutEmployee_leave_detailsInput | employee_leave_typeUncheckedCreateWithoutEmployee_leave_detailsInput,\n     +     connectOrCreate: employee_leave_typeCreateOrConnectWithoutEmployee_leave_detailsInput,\n     +     connect: employee_leave_typeWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `emp_leave_type` is missing. "}
{"level":"error","message":"Date & Time:- 2024-05-28T06:38:59.291Z GET 0.4623249999986001 /api/hrms/v1/pay/payslip?emp_id=EMP912e43&name=TDS,EPF,ESIC status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/payslip.dao.ts:82:49\n\n  79 //       AND EXTRACT(YEAR FROM date) = EXTRACT(YEAR FROM ${date})\n  80 //   AND EXTRACT(MONTH FROM date) = EXTRACT(MONTH FROM ${date});\n  81 //     `;\n→ 82 const payroll = await prisma.payroll_master.findMany({\n       where: {\n         emp_id: \"EMP912e43\",\n         AND: [\n           {\n             date: {\n               gte: new Date(\"Invalid Date\")\n                    ~~~~~~~~~~~~~~~~~~~~~~~~\n             }\n           },\n           {\n             date: {\n               lt: new Date(\"Invalid Date\")\n             }\n           }\n         ]\n       }\n     })\n\nInvalid value for argument `gte`: Provided Date object is invalid. Expected Date. "}
{"level":"error","message":"Date & Time:- 2024-05-28T07:20:26.959Z POST 0.43699199999537086 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (999, null, 2024-05-28, 2024-05-28 12:50:26.95, null, 0, 1, 2024-05-28 12:50:26.951, 2024-05-28 12:50:26.951).` "}
{"level":"error","message":"Date & Time:- 2024-05-28T07:31:56.575Z POST 0.4593289999756962 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (1001, null, 2024-05-28, 2024-05-28 13:01:56.568, null, 0, 1, 2024-05-28 13:01:56.568, 2024-05-28 13:01:56.568).` "}
{"level":"error","message":"Date & Time:- 2024-05-28T07:58:32.250Z POST 3.5655599999990955 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (1002, null, 2024-05-28, 2024-05-28 13:28:32.169, null, 0, 1, 2024-05-28 13:28:32.237, 2024-05-28 13:28:32.237).` "}
{"level":"error","message":"Date & Time:- 2024-05-28T09:25:35.768Z POST 0.3095159996300936 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (1004, null, 2024-05-28, 2024-05-28 14:55:35.761, null, 0, 1, 2024-05-28 14:55:35.761, 2024-05-28 14:55:35.761).` "}
{"level":"error","message":"Date & Time:- 2024-05-28T11:54:48.051Z POST 0.36968699999852106 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (1065, null, 2024-05-28, 2024-05-28 17:24:47.998, null, 0, 1, 2024-05-28 17:24:48.042, 2024-05-28 17:24:48.042).` "}
{"level":"error","message":"Date & Time:- 2024-05-28T12:55:17.293Z POST 2.4385029999975814 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (1066, null, 2024-05-28, 2024-05-28 18:25:17.226, null, 0, 1, 2024-05-28 18:25:17.28, 2024-05-28 18:25:17.28).` "}
{"level":"error","message":"Date & Time:- 2024-05-28T13:00:11.033Z POST 0.3931800000136718 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (1067, null, 2024-05-28, 2024-05-28 18:30:11.031, null, 0, 1, 2024-05-28 18:30:11.032, 2024-05-28 18:30:11.032).` "}
{"level":"error","message":"Date & Time:- 2024-05-30T05:50:34.676Z POST 2.4448009999468923 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (2748, null, 2024-05-30, 2024-05-30 11:20:34.548, null, 0, 1, 2024-05-30 11:20:34.654, 2024-05-30 11:20:34.654).` "}
{"level":"error","message":"Date & Time:- 2024-05-30T08:17:11.522Z POST 2.7170880000048783 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (2750, null, 2024-05-30, 2024-05-30 13:47:11.443, null, 0, 1, 2024-05-30 13:47:11.507, 2024-05-30 13:47:11.507).` "}
{"level":"error","message":"Date & Time:- 2024-05-30T08:19:05.515Z POST 0.42108400000142865 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (2751, null, 2024-05-30, 2024-05-30 13:49:05.512, null, 0, 1, 2024-05-30 13:49:05.514, 2024-05-30 13:49:05.514).` "}
{"level":"error","message":"Date & Time:- 2024-05-30T10:39:52.715Z POST 0.2974709998816252 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (2752, null, 2024-05-30, 2024-05-30 16:09:52.592, null, 0, 1, 2024-05-30 16:09:52.705, 2024-05-30 16:09:52.705).` "}
{"level":"error","message":"Date & Time:- 2024-05-30T11:10:04.511Z POST 0.2667149994522333 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (2754, null, 2024-05-30, 2024-05-30 16:40:04.467, null, 0, 1, 2024-05-30 16:40:04.509, 2024-05-30 16:40:04.509).` "}
{"level":"error","message":"Date & Time:- 2024-05-30T11:44:27.149Z POST 0.3831210006028414 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (2756, null, 2024-05-30, 2024-05-30 17:14:27.066, null, 0, 1, 2024-05-30 17:14:27.141, 2024-05-30 17:14:27.141).` "}
{"level":"error","message":"Date & Time:- 2024-05-30T12:45:55.076Z POST 0.2524210009723902 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (2758, null, 2024-05-30, 2024-05-30 18:15:55.073, null, 0, 1, 2024-05-30 18:15:55.074, 2024-05-30 18:15:55.074).` "}
{"level":"error","message":"Date & Time:- 2024-05-30T12:53:34.655Z POST 0.3941520005464554 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (2759, null, 2024-05-30, 2024-05-30 18:23:34.606, null, 0, 1, 2024-05-30 18:23:34.653, 2024-05-30 18:23:34.653).` "}
{"level":"error","message":"Date & Time:- 2024-05-30T12:53:56.941Z POST 0.25873899832367897 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (2760, null, 2024-05-30, 2024-05-30 18:23:56.939, null, 0, 1, 2024-05-30 18:23:56.94, 2024-05-30 18:23:56.94).` "}
{"level":"error","message":"Date & Time:- 2024-05-30T12:57:53.127Z POST 0.2225080020725727 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (2764, null, 2024-05-30, 2024-05-30 18:27:53.126, null, 0, 1, 2024-05-30 18:27:53.127, 2024-05-30 18:27:53.127).` "}
{"level":"error","message":"Date & Time:- 2024-06-03T04:49:37.830Z POST 2.500889000000825 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (2765, null, 2024-06-03, 2024-06-03 10:19:37.778, null, 0, 1, 2024-06-03 10:19:37.82, 2024-06-03 10:19:37.82).` "}
{"level":"error","message":"Date & Time:- 2024-06-04T10:43:34.657Z POST 2.5636190000004717 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (12228, null, 2024-06-04, 2024-06-04 16:13:34.58, null, 0, 1, 2024-06-04 16:13:34.645, 2024-06-04 16:13:34.645).` "}
{"level":"error","message":"Date & Time:- 2024-06-04T10:43:36.472Z GET 1.1753430000026128 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-06-04T10:43:36.529Z GET 0.3340360000001965 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-06-04T10:43:38.891Z GET 0.5108190000028117 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-06-04T10:43:38.961Z GET 0.27893999999650987 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-06-04T10:43:43.250Z GET 0.36102699999901233 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-06-04T10:43:43.316Z GET 0.37413099999685073 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-06-04T10:44:57.862Z GET 1.021537999999964 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-06-04T10:45:00.400Z GET 0.6361780000006547 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-06-04T10:45:00.487Z GET 0.4520379999994475 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-06-04T10:47:16.527Z GET 0.2780260000145063 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-06-04T10:54:12.346Z GET 1.847739000000729 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-06-04T10:54:17.374Z GET 0.43752000000313274 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-06-04T10:54:18.902Z GET 0.4945560000014666 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-06-04T10:54:18.983Z GET 0.5025999999998021 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-10-07T07:57:18.189Z POST 0.7029999997466803 /api/hrms/v1/employee/create status = false, err = Invalid login: 535-5.7.8 Username and Password not accepted. For more information, go to\n535 5.7.8  https://support.google.com/mail/?p=BadCredentials d9443c01a7336-20c1396d750sm34693475ad.232 - gsmtp "}
{"level":"error","message":"Date & Time:- 2024-10-07T07:59:21.580Z POST 6.993199999909848 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (776, null, 2024-10-07, 2024-10-07 13:29:20.847, null, 0, 1, 2024-10-07 13:29:20.85, 2024-10-07 13:29:20.85).` "}
{"level":"error","message":"Date & Time:- 2024-10-07T08:13:43.777Z POST 0.5264999996870756 /api/hrms/v1/employee/create status = false, err = Invalid login: 535-5.7.8 Username and Password not accepted. For more information, go to\n535 5.7.8  https://support.google.com/mail/?p=BadCredentials d2e1a72fcca58-71df0cbbaddsm3841907b3a.40 - gsmtp "}
{"level":"error","message":"Date & Time:- 2024-10-07T08:16:41.730Z POST 0.5681999996304512 /api/hrms/v1/employee/create status = false, err = Invalid login: 535-5.7.8 Username and Password not accepted. For more information, go to\n535 5.7.8  https://support.google.com/mail/?p=BadCredentials d2e1a72fcca58-71df0d663cbsm3980550b3a.170 - gsmtp "}
{"level":"error","message":"Date & Time:- 2024-10-07T08:19:15.722Z POST 0.5429000006988645 /api/hrms/v1/employee/create status = false, err = Invalid login: 535-5.7.8 Username and Password not accepted. For more information, go to\n535 5.7.8  https://support.google.com/mail/?p=BadCredentials 98e67ed59e1d1-2e1e86aa0f9sm6402331a91.54 - gsmtp "}
{"level":"error","message":"Date & Time:- 2024-10-07T08:31:33.514Z POST 0.5035000005736947 /api/hrms/v1/employee/create status = false, err = Invalid login: 535-5.7.8 Username and Password not accepted. For more information, go to\n535 5.7.8  https://support.google.com/mail/?p=BadCredentials d9443c01a7336-20c138af984sm35349435ad.57 - gsmtp "}
{"level":"error","message":"Date & Time:- 2024-10-07T10:04:09.589Z POST 4.217499999998836 /api/hrms/v1/employee/create status = false, err = Invalid login: 535-5.7.8 Username and Password not accepted. For more information, go to\n535 5.7.8  https://support.google.com/mail/?p=BadCredentials d2e1a72fcca58-71df0cbc731sm4035107b3a.8 - gsmtp "}
{"level":"error","message":"Date & Time:- 2024-10-07T10:08:51.194Z POST 0.5808000000542961 /api/hrms/v1/employee/create status = false, err = Invalid login: 535-5.7.8 Username and Password not accepted. For more information, go to\n535 5.7.8  https://support.google.com/mail/?p=BadCredentials 41be03b00d2f7-7e9f6c4ce2bsm4581791a12.83 - gsmtp "}
{"level":"error","message":"Date & Time:- 2024-10-07T10:11:22.953Z POST 1.7675999999046326 /api/hrms/v1/employee/create status = false, err = Invalid login: 535-5.7.8 Username and Password not accepted. For more information, go to\n535 5.7.8  https://support.google.com/mail/?p=BadCredentials 41be03b00d2f7-7e9f680c727sm4642841a12.2 - gsmtp "}
{"level":"error","message":"Date & Time:- 2024-10-07T10:18:03.857Z POST 1.3684999999823049 /api/hrms/v1/employee/create status = false, err = Invalid login: 535-5.7.8 Username and Password not accepted. For more information, go to\n535 5.7.8  https://support.google.com/mail/?p=BadCredentials d9443c01a7336-20c1393072dsm37106055ad.174 - gsmtp "}
{"level":"error","message":"Date & Time:- 2024-10-07T10:23:58.531Z POST 1.5489000000525266 /api/hrms/v1/employee/create status = false, err = Invalid login: 535-5.7.8 Username and Password not accepted. For more information, go to\n535 5.7.8  https://support.google.com/mail/?p=BadCredentials d2e1a72fcca58-71df0d47a4dsm4075017b3a.118 - gsmtp "}
{"level":"error","message":"Date & Time:- 2024-10-07T10:27:36.545Z POST 1.434899999992922 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (777, null, 2024-10-07, 2024-10-07 15:57:36.263, null, 0, 1, 2024-10-07 15:57:36.265, 2024-10-07 15:57:36.265).` "}
{"level":"error","message":"Date & Time:- 2024-10-07T10:28:49.213Z POST 0.6277999999001622 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (778, null, 2024-10-07, 2024-10-07 15:58:49.209, null, 0, 1, 2024-10-07 15:58:49.216, 2024-10-07 15:58:49.216).` "}
{"level":"error","message":"Date & Time:- 2024-10-07T10:33:06.160Z POST 1.409999999916181 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (779, null, 2024-10-07, 2024-10-07 16:03:06.148, null, 0, 1, 2024-10-07 16:03:06.151, 2024-10-07 16:03:06.151).` "}
{"level":"error","message":"Date & Time:- 2024-10-07T10:50:37.836Z POST 1.6488000000827014 /api/hrms/v1/employee/create status = false, err = Invalid login: 535-5.7.8 Username and Password not accepted. For more information, go to\n535 5.7.8  https://support.google.com/mail/?p=BadCredentials d9443c01a7336-20c139a1561sm37141445ad.291 - gsmtp "}
{"level":"error","message":"Date & Time:- 2024-10-07T11:17:09.696Z POST 3.26579999999376 /api/hrms/v1/employee/create status = false, err = Invalid login: 534-5.7.9 Application-specific password required. For more information, go to\n534 5.7.9  https://support.google.com/mail/?p=InvalidSecondFactor 98e67ed59e1d1-2e1e85c9a56sm6801239a91.22 - gsmtp "}
{"level":"error","message":"Date & Time:- 2024-10-08T05:13:34.454Z POST 9.280300000013085 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (776, null, 2024-10-08, 2024-10-08 10:43:33.118, null, 0, 1, 2024-10-08 10:43:34.127, 2024-10-08 10:43:34.127).` "}
{"level":"error","message":"Date & Time:- 2024-10-08T05:14:15.341Z GET 2.417300000000978 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-10-08T05:14:16.942Z GET 1.815500000026077 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-10-08T05:15:59.667Z GET 0.6403000000282191 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-10-08T05:18:47.908Z GET 1.1922999999951571 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-10-08T05:20:17.835Z GET 2.1031000000657514 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-10-08T05:22:19.283Z GET 0.889299999922514 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-10-08T05:23:36.620Z GET 0.9280999999027699 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-10-08T05:24:47.474Z GET 0.7876999999862164 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-10-08T05:26:00.458Z GET 0.6387000000104308 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-10-08T05:29:55.836Z GET 0.6389999999664724 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-10-08T05:33:38.719Z GET 0.8025999998208135 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-10-08T05:33:45.801Z GET 0.5119999998714775 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-10-08T05:33:46.440Z GET 0.5226000000257045 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-10-08T06:26:55.534Z POST 7.910900000017136 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (777, null, 2024-10-08, 2024-10-08 11:56:54.997, null, 0, 1, 2024-10-08 11:56:55.406, 2024-10-08 11:56:55.406).` "}
{"level":"error","message":"Date & Time:- 2024-10-08T07:13:58.650Z POST 10.770599999988917 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (778, null, 2024-10-08, 2024-10-08 12:43:58.039, null, 0, 1, 2024-10-08 12:43:58.549, 2024-10-08 12:43:58.549).` "}
{"level":"error","message":"Date & Time:- 2024-10-08T11:25:12.979Z POST 8.297799999942072 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (779, null, 2024-10-08, 2024-10-08 16:55:12.454, null, 0, 1, 2024-10-08 16:55:12.883, 2024-10-08 16:55:12.883).` "}
{"level":"error","message":"Date & Time:- 2024-10-08T12:10:16.929Z GET 0.735700000077486 /api/hrms/v1/master/district status = false, err = \nInvalid `prisma.district.findMany()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\master\\district.dao.ts:8:40\n\n  5 \n  6 class DistrictDao {\n  7   get = async () => {\n→ 8     const data = await prisma.district.findMany(\nThe column `district.created_at` does not exist in the current database. "}
{"level":"error","message":"Date & Time:- 2024-10-08T12:11:25.857Z GET 0.5316999997012317 /api/hrms/v1/master/district status = false, err = \nInvalid `prisma.district.findMany()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\master\\district.dao.ts:8:40\n\n  5 \n  6 class DistrictDao {\n  7   get = async () => {\n→ 8     const data = await prisma.district.findMany(\nThe column `district.created_at` does not exist in the current database. "}
{"level":"error","message":"Date & Time:- 2024-10-08T12:12:21.350Z GET 1.3247999995946884 /api/hrms/v1/master/district status = false, err = \nInvalid `prisma.district.findMany()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\master\\district.dao.ts:8:40\n\n  5 \n  6 class DistrictDao {\n  7   get = async () => {\n→ 8     const data = await prisma.district.findMany(\nThe column `district.created_at` does not exist in the current database. "}
{"level":"error","message":"Date & Time:- 2024-10-09T05:13:08.987Z POST 6.660999999963678 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (780, null, 2024-10-09, 2024-10-09 10:43:05.856, null, 0, 1, 2024-10-09 10:43:07.815, 2024-10-09 10:43:07.815).` "}
{"level":"error","message":"Date & Time:- 2024-10-09T09:35:48.544Z GET 5.9887999999991735 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-09T09:36:24.407Z GET 2.543600000004517 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-09T09:36:25.903Z GET 4.547200000000885 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-09T09:37:39.697Z GET 0.989899999985937 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-09T09:38:51.109Z GET 1.1459999999788124 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-09T09:41:19.440Z GET 0.7857000000076368 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-09T09:42:58.465Z GET 0.48260000004665926 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-09T09:44:18.726Z GET 0.6742999999551103 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-09T09:45:59.641Z GET 0.896100000012666 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-09T09:47:39.902Z GET 2.3183999999964726 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-09T09:47:45.155Z GET 3.7211999999999534 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-09T09:47:46.395Z GET 0.6451999999990221 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-09T09:53:23.975Z GET 0.9653999999864027 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-09T09:54:44.158Z GET 0.8523000000277534 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-09T10:04:42.773Z GET 1.4173000000882894 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-09T10:10:55.855Z GET 0.6506000000517815 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-09T10:12:30.863Z GET 6.302999999999884 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-09T10:12:36.232Z GET 0.7540000000008149 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-09T10:12:37.100Z GET 0.7464000000036322 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-09T10:16:15.932Z GET 0.6135000000358559 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-09T10:18:08.957Z GET 0.8114000000059605 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-09T10:25:33.499Z GET 0.5344000000040978 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-09T10:27:11.654Z GET 0.6526000000303611 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-09T10:29:28.731Z GET 0.4878000000026077 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T05:42:14.137Z POST 12.493400000006659 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (776, null, 2024-10-14, 2024-10-14 11:12:12.76, null, 0, 1, 2024-10-14 11:12:13.687, 2024-10-14 11:12:13.687).` "}
{"level":"error","message":"Date & Time:- 2024-10-14T05:42:29.293Z GET 2.5442999999795575 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T05:42:30.239Z GET 2.001700000022538 /api/hrms/v1/employee/attendance/count-daily status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T05:42:30.707Z GET 0.7157000000006519 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T05:53:39.309Z POST 0.8843999999808148 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (777, null, 2024-10-14, 2024-10-14 11:23:39.225, null, 0, 1, 2024-10-14 11:23:39.304, 2024-10-14 11:23:39.304).` "}
{"level":"error","message":"Date & Time:- 2024-10-14T05:53:42.187Z GET 0.7445999999763444 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T05:53:42.495Z GET 0.7202000000979751 /api/hrms/v1/employee/attendance/count-daily status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T05:53:42.838Z GET 0.5639000000664964 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:25:02.789Z GET 4.744500000029802 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:26:54.595Z GET 0.7692999999853782 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:27:47.533Z GET 0.8270999999949709 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:27:48.144Z GET 0.7578000000212342 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:29:23.487Z GET 0.6494999999995343 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:32:51.260Z GET 1.0850000000791624 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:32:55.628Z GET 0.776600000099279 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:32:56.330Z GET 0.5075000000651926 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:34:00.057Z GET 2.786599999999453 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:34:02.528Z GET 0.8483999999953085 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:34:03.236Z GET 0.799299999998766 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:41:31.115Z GET 1.0639000000082888 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:44:14.664Z GET 3.693199999979697 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:44:21.459Z GET 0.7617999999783933 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:44:22.433Z GET 0.6598000000230968 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:45:03.797Z GET 0.6404000000329688 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:45:04.453Z GET 0.7286999999778345 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:46:44.926Z GET 0.6398000000044703 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:46:48.133Z GET 0.476799999945797 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:46:48.773Z GET 0.437900000018999 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:47:03.547Z GET 0.4998999999370426 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:47:04.391Z GET 1.3207000000402331 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:50:45.742Z GET 0.5990999999921769 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:52:50.714Z GET 0.4747000001370907 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:56:12.623Z GET 0.43849999993108213 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:56:50.402Z GET 0.5327999999281019 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:56:51.021Z GET 0.5098999999463558 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:57:54.191Z GET 0.9154000000562519 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:57:55.137Z GET 0.5426999998744577 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:58:12.400Z GET 0.4897000000346452 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:58:13.266Z GET 0.5279999999329448 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T06:59:57.068Z GET 0.4377999999560416 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:00:14.256Z GET 0.43479999992996454 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:00:14.921Z GET 0.5005000000819564 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:02:14.294Z GET 0.6435000000055879 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:02:21.142Z GET 0.4357000000309199 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:02:21.746Z GET 0.42300000018440187 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:03:44.400Z GET 0.5577999998349696 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:04:35.530Z GET 0.5287999999709427 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:04:36.152Z GET 0.7061000000685453 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:05:39.511Z GET 0.4790999998804182 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:05:40.230Z GET 0.5312999999150634 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:05:56.649Z GET 0.6166000000666827 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:05:57.336Z GET 0.43989999988116324 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:07:01.354Z GET 0.4813000001013279 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:08:24.140Z GET 0.4476999999023974 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:09:28.260Z GET 0.49209999991580844 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:09:29.013Z GET 0.4485999997705221 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:10:35.734Z GET 0.44330000039190054 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:12:17.648Z GET 0.44350000005215406 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:13:51.357Z GET 0.6253999997861683 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:15:21.006Z GET 0.5249999999068677 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:17:15.983Z GET 0.4155000001192093 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:18:31.985Z GET 0.4874999998137355 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:19:06.397Z GET 0.6019999999552965 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:19:07.125Z GET 0.5093000000342727 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:20:11.142Z GET 0.44659999990835786 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:20:55.113Z GET 0.5328999999910593 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:20:55.807Z GET 0.44799999985843897 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:22:17.158Z GET 0.5509999999776483 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:23:37.334Z GET 0.44990000035613775 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:24:42.035Z GET 0.4161999998614192 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:40:45.479Z GET 0.5394000001251698 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:40:46.381Z GET 0.45420000003650784 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:41:48.189Z GET 0.40679999999701977 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:42:52.907Z GET 0.46299999998882413 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:47:40.567Z GET 0.4852999998256564 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:47:45.181Z GET 0.48139999993145466 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:47:45.850Z GET 0.4218000005930662 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:48:47.676Z GET 0.5244999993592501 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:49:56.505Z GET 0.47379999980330467 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:51:00.591Z GET 0.41990000009536743 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:51:49.580Z GET 0.4488000003620982 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:51:50.687Z GET 0.5787000004202127 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T07:57:43.038Z GET 0.47290000040084124 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T08:02:05.672Z GET 0.6180999996140599 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T08:04:33.450Z GET 1.0804000003263354 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T08:07:17.193Z GET 0.4227999998256564 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T08:12:13.571Z GET 1.3678000001236796 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T08:20:13.672Z GET 0.5265999995172024 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T08:21:46.018Z GET 0.5920000001788139 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T08:23:50.527Z GET 0.625 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T09:17:27.823Z GET 0.6502999998629093 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T09:39:18.018Z GET 0.5493999999016523 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T09:54:02.557Z GET 0.5280000008642673 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T09:55:01.243Z GET 0.7510999999940395 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T09:55:01.900Z GET 0.6010000016540289 /api/hrms/v1/employee/attendance/count-daily status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T09:55:25.521Z GET 0.6753000002354383 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T09:59:02.810Z GET 0.6734999995678663 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T10:01:43.898Z GET 9.327799999999115 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T10:01:51.170Z GET 0.7973000000056345 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T10:01:52.490Z GET 0.6431999999986147 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T10:03:49.552Z GET 0.8832999999867752 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T10:03:59.985Z GET 0.7411000000138301 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T10:04:00.941Z GET 1.003499999991618 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T10:04:29.911Z POST 1.8836000000010245 /api/hrms/v1/employee/attendance/update status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T10:04:51.313Z POST 0.9230000000097789 /api/hrms/v1/employee/attendance/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T10:05:19.838Z GET 3.8876000000163913 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T10:05:22.370Z GET 0.5492000000085682 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T10:06:26.407Z GET 0.6535999999614432 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T10:06:27.287Z GET 0.5923000000184402 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T10:07:12.147Z GET 0.49390000000130385 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T10:07:12.799Z GET 0.6622999999672174 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T10:07:18.331Z GET 0.6957999999867752 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T10:07:19.081Z GET 0.634299999976065 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T10:07:35.701Z POST 0.6524999999674037 /api/hrms/v1/employee/attendance/update status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T10:07:44.690Z POST 1.8675999999977648 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (779, null, 2024-10-14, 2024-10-14 15:37:44.572, null, 0, 1, 2024-10-14 15:37:44.574, 2024-10-14 15:37:44.574).` "}
{"level":"error","message":"Date & Time:- 2024-10-14T10:07:49.506Z GET 0.5152000000234693 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T10:07:49.836Z GET 0.509699999995064 /api/hrms/v1/employee/attendance/count-daily status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T10:07:50.208Z GET 0.8109999999869615 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T10:11:08.446Z GET 6.047800000000279 /api/hrms/v1/employee/attendance/count-daily status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T10:11:09.004Z GET 3.9974999999976717 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T10:12:22.571Z GET 1.1612000000022817 /api/hrms/v1/employee/attendance/count-daily status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T10:12:23.053Z GET 0.9622999999846797 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T10:22:24.588Z GET 0.9834000000264496 /api/hrms/v1/employee/get status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\empOnBoard.dao.ts:369:24\n\n  366 }\n  367 \n  368 const [data, count] = await prisma.$transaction([\n→ 369   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true,\n                dob: true,\n                emp_type: true,\n                emp_type_master: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true,\n                doj: true,\n                designation: true,\n                basic_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"Date & Time:- 2024-10-14T11:16:20.542Z GET 7.727400000003399 /api/hrms/v1/employee-details status = false, err = Error fetching employee details: \nInvalid `prisma.employees.findUnique()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\employee\\EmployeeDetails.dao.ts:8:54\n\n  5 class EmployeeDetailsDao {\n  6   async getEmployeeDetailsByEmpId(empId: string) {\n  7     try {\n→ 8       const employeeDetails = await prisma.employees.findUnique({\n            where: {\n              emp_id: undefined,\n          ?   AND?: employeesWhereInput | employeesWhereInput[],\n          ?   OR?: employeesWhereInput[],\n          ?   NOT?: employeesWhereInput | employeesWhereInput[],\n          ?   emp_type?: IntFilter | Int,\n          ?   emp_del?: IntFilter | Int,\n          ?   emp_office_details_id?: IntFilter | Int,\n          ?   emp_basic_details_id?: IntFilter | Int,\n          ?   emp_personal_details_id?: IntFilter | Int,\n          ?   emp_address_details_id?: IntFilter | Int,\n          ?   emp_join_details_id?: IntFilter | Int,\n          ?   emp_loan_details_id?: IntFilter | Int,\n          ?   emp_salary_details_id?: IntFilter | Int,\n          ?   created_at?: DateTimeFilter | DateTime,\n          ?   updated_at?: DateTimeFilter | DateTime,\n          ?   emp_office_details?: Employee_office_detailsRelationFilter | employee_office_detailsWhereInput,\n          ?   emp_basic_details?: Employee_basic_detailsRelationFilter | employee_basic_detailsWhereInput,\n          ?   emp_personal_details?: Employee_personal_detailsRelationFilter | employee_personal_detailsWhereInput,\n          ?   emp_family_details?: Employee_family_detailsListRelationFilter,\n          ?   emp_nominee_details?: Employee_nominee_detailsListRelationFilter,\n          ?   emp_address_details?: Employee_address_detailsRelationFilter | employee_address_detailsWhereInput,\n          ?   emp_increment_details?: Employee_increment_detailsListRelationFilter,\n          ?   emp_promotion_details?: Employee_promotion_detailsListRelationFilter,\n          ?   emp_transfer_details?: Employee_transfer_detailsListRelationFilter,\n          ?   emp_timebound_details?: Employee_timebound_detailsListRelationFilter,\n          ?   emp_join_details?: Employee_join_detailsRelationFilter | employee_join_detailsWhereInput,\n          ?   emp_education_details?: Employee_education_detailsListRelationFilter,\n          ?   emp_training_details?: Employee_training_detailsListRelationFilter,\n          ?   emp_loan_details?: Employee_loan_detailsRelationFilter | employee_loan_detailsWhereInput,\n          ?   emp_salary_details?: Employee_salary_detailsRelationFilter | employee_salary_detailsWhereInput,\n          ?   emp_attendance?: Employee_attendance_historyListRelationFilter,\n          ?   emp_hierarchy?: Employee_hierarchyListRelationFilter,\n          ?   emp_leave_details?: Employee_leave_detailsListRelationFilter,\n          ?   emp_leave_chart?: Employee_leave_chartListRelationFilter,\n          ?   emp_daily_attendance?: Employee_daily_attendanceListRelationFilter,\n          ?   emp_claim?: Employee_claimListRelationFilter,\n          ?   leave_encashment?: Leave_encashmentListRelationFilter,\n          ?   pension_master?: Pension_masterListRelationFilter,\n          ?   payroll_master?: Payroll_masterListRelationFilter,\n          ?   fileUpload?: FileUploadListRelationFilter,\n          ?   fileUploadEmp?: FileUploadEmpListRelationFilter\n            },\n            select: {\n              emp_join_details: {\n                select: {\n                  acc_number: true,\n                  ifsc: true,\n                  task: true,\n                  pf_category: true,\n                  department: {\n                    select: {\n                      name: true\n                    }\n                  },\n                  designation: {\n                    select: {\n                      name: true\n                    }\n                  }\n                }\n              },\n              emp_basic_details: {\n                select: {\n                  pan_no: true\n                }\n              }\n            }\n          })\n\nArgument `where` of type employeesWhereUniqueInput needs at least one of `emp_id` or `emp_id` arguments. Available options are marked with ?. "}
{"level":"error","message":"Date & Time:- 2024-10-14T11:31:39.546Z GET 1.8717999999935273 /api/hrms/v1/employee/attendance/count-daily status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T11:31:40.042Z GET 0.7875000000058208 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T11:32:53.443Z GET 0.7859999999636784 /api/hrms/v1/employee/attendance/count-daily status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T11:32:53.800Z GET 0.8203000000212342 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T11:34:25.526Z GET 0.5819999999948777 /api/hrms/v1/employee/attendance/count-daily status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T11:34:25.930Z GET 0.5846000000019558 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T11:35:44.793Z GET 0.8371000000042841 /api/hrms/v1/employee/attendance/count-daily status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T11:35:45.150Z GET 0.991199999989476 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T11:47:24.277Z GET 13.408699999999953 /api/hrms/v1/employee/attendance/count-daily status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T11:47:24.868Z GET 5.469900000010966 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T11:54:32.231Z GET 87.40100000000166 /api/hrms/v1/employee/attendance/count-daily status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T11:54:33.589Z GET 3.2719000000033702 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T11:55:10.289Z GET 0.8863999999884982 /api/hrms/v1/ulb/get?id= status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T11:55:10.601Z GET 0.592000000004191 /api/hrms/v1/employee/attendance/count-daily status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T11:55:10.932Z GET 0.6507000000128755 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T11:56:28.270Z GET 0.623699999996461 /api/hrms/v1/employee/attendance/count-daily status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-14T11:56:28.635Z GET 0.5295999999798369 /api/hrms/v1/ulb/get?id=2 status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"Date & Time:- 2024-10-15T04:59:55.013Z POST 23.197600000014063 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (780, null, 2024-10-15, 2024-10-15 10:29:54.238, null, 0, 1, 2024-10-15 10:29:54.768, 2024-10-15 10:29:54.768).` "}
{"level":"error","message":"Date & Time:- 2024-10-15T08:35:12.335Z POST 0.5804999999236315 /api/hrms/v1/employee/create status = false, err = \"district\" must be a string "}
{"level":"error","message":"Date & Time:- 2024-10-15T09:11:23.890Z POST 8.554000000003725 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (781, null, 2024-10-15, 2024-10-15 14:41:23.444, null, 0, 1, 2024-10-15 14:41:23.839, 2024-10-15 14:41:23.839).` "}
{"level":"error","message":"Date & Time:- 2024-10-15T09:26:37.656Z POST 0.583199999993667 /api/hrms/v1/employee/create status = false, err = \"district\" must be a string "}
{"level":"error","message":"Date & Time:- 2024-10-15T09:33:48.740Z POST 1.4475999999849591 /api/hrms/v1/employee/create status = false, err = \"district\" must be a string "}
{"level":"error","message":"Date & Time:- 2024-10-15T09:51:59.485Z POST 2.25789999999688 /api/hrms/v1/employee/create status = false, err = \"district\" must be a string "}
{"level":"error","message":"Date & Time:- 2024-10-15T09:56:50.943Z POST 1.0552999999999884 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\empOnBoard.dao.ts:85:34\n\n  82 if (isMany) {\n  83   return await tx[tableName].createMany({ data });\n  84 } else {\n→ 85   return await tx[tableName].create({\n         data: {\n           emp_type: 1,\n           office_name: \"CIVILCOURTBERMOATTENUGHAT\",\n           office_code: \"CIVILCOURTBERMOATTENUGHAT\",\n           ddo_code: \"BKRADJ001\",\n           ddo_designation: \"JUDGE-IN-CHARGE(ACCOUNTS)\",\n           district: 4748\n                     ~~~~\n         }\n       })\n\nArgument `district`: Invalid value provided. Expected String, provided Int. "}
{"level":"error","message":"Date & Time:- 2024-10-15T10:14:48.043Z POST 0.5726999999023974 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\empOnBoard.dao.ts:85:34\n\n  82 if (isMany) {\n  83   return await tx[tableName].createMany({ data });\n  84 } else {\n→ 85   return await tx[tableName].create({\n         data: {\n           emp_type: 1,\n           office_name: \"CIVILCOURTBERMOATTENUGHAT\",\n           office_code: \"CIVILCOURTBERMOATTENUGHAT\",\n           ddo_code: \"BKRADJ001\",\n           ddo_designation: \"JUDGE-IN-CHARGE(ACCOUNTS)\",\n           district: 4748\n                     ~~~~\n         }\n       })\n\nArgument `district`: Invalid value provided. Expected String, provided Int. "}
{"level":"error","message":"Date & Time:- 2024-10-15T10:16:23.657Z POST 0.934099999954924 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\empOnBoard.dao.ts:85:34\n\n  82 if (isMany) {\n  83   return await tx[tableName].createMany({ data });\n  84 } else {\n→ 85   return await tx[tableName].create({\n         data: {\n           emp_type: 1,\n           office_name: \"CIVILCOURTBERMOATTENUGHAT\",\n           office_code: \"CIVILCOURTBERMOATTENUGHAT\",\n           ddo_code: \"BKRADJ001\",\n           ddo_designation: \"JUDGE-IN-CHARGE(ACCOUNTS)\",\n           district: 4748\n                     ~~~~\n         }\n       })\n\nArgument `district`: Invalid value provided. Expected String, provided Int. "}
{"level":"error","message":"Date & Time:- 2024-10-15T10:29:40.225Z POST 0.7565000001341105 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\empOnBoard.dao.ts:85:34\n\n  82 if (isMany) {\n  83   return await tx[tableName].createMany({ data });\n  84 } else {\n→ 85   return await tx[tableName].create({\n         data: {\n           emp_type: 1,\n           office_name: null,\n           office_code: null,\n           ddo_code: \"BKRADJ001\",\n           ddo_designation: null,\n           district: 265\n                     ~~~\n         }\n       })\n\nArgument `district`: Invalid value provided. Expected String, provided Int. "}
{"level":"error","message":"Date & Time:- 2024-10-15T11:18:27.061Z POST 1.191400000010617 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\empOnBoard.dao.ts:85:34\n\n  82 if (isMany) {\n  83   return await tx[tableName].createMany({ data });\n  84 } else {\n→ 85   return await tx[tableName].create({\n         data: {\n           emp_type: 1,\n           office_name: null,\n           office_code: null,\n           ddo_code: \"BKRADJ001\",\n           ddo_designation: null,\n           district: \"4002\"\n                     ~~~~~~\n         }\n       })\n\nArgument `district`: Invalid value provided. Expected Int or Null, provided String. "}
{"level":"error","message":"Date & Time:- 2024-10-15T11:34:18.170Z POST 2.346900000004098 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (782, null, 2024-10-15, 2024-10-15 17:04:17.899, null, 0, 1, 2024-10-15 17:04:17.959, 2024-10-15 17:04:17.959).` "}
{"level":"error","message":"Date & Time:- 2024-10-15T11:42:26.475Z POST 0.6412000000709668 /api/hrms/v1/employee/create status = false, err = \"district\" must be a string "}
{"level":"error","message":"Date & Time:- 2024-10-15T11:42:48.304Z POST 1.2800000000279397 /api/hrms/v1/employee/create status = false, err = \"district\" must be a string "}
{"level":"error","message":"Date & Time:- 2024-10-15T12:00:42.917Z POST 0.7332000000169501 /api/hrms/v1/employee/create status = false, err = \"emp_type\" is not allowed "}
{"level":"error","message":"Date & Time:- 2024-10-15T12:11:01.661Z POST 11.1021999999939 /api/hrms/v1/employee/create status = false, err = \"emp_id\" must be a string "}
{"level":"error","message":"Date & Time:- 2024-10-15T12:19:18.097Z POST 1.7620000000024447 /api/hrms/v1/employee/create status = false, err = \"emp_id\" must be a string "}
{"level":"error","message":"Date & Time:- 2024-10-15T12:21:55.215Z POST 14.855100000000675 /api/hrms/v1/employee/create status = false, err = \"emp_id\" must be a string "}
{"level":"error","message":"Date & Time:- 2024-10-15T12:23:07.903Z POST 9.800600000002305 /api/hrms/v1/employee/create status = false, err = \"married_status\" must be a number "}
{"level":"error","message":"Date & Time:- 2024-10-15T12:24:51.462Z POST 7.181500000002416 /api/hrms/v1/employee/create status = false, err = \"religion\" must be a number "}
{"level":"error","message":"Date & Time:- 2024-10-15T12:26:08.204Z POST 3.089299999999639 /api/hrms/v1/employee/create status = false, err = \"emp_categories\" must be a number "}
{"level":"error","message":"Date & Time:- 2024-10-15T12:27:01.431Z POST 9.113699999998062 /api/hrms/v1/employee/create status = false, err = \"emp_blood_group\" must be a number "}
{"level":"error","message":"Date & Time:- 2024-10-15T12:28:20.026Z POST 0.7132999999994354 /api/hrms/v1/employee/create status = false, err = \"emp_family\" must be a number "}
{"level":"error","message":"Date & Time:- 2024-10-15T12:29:27.579Z POST 7.420200000000477 /api/hrms/v1/employee/create status = false, err = \"emp_lang\" must be a string "}
{"level":"error","message":"Date & Time:- 2024-10-15T12:31:29.217Z POST 3.050199999997858 /api/hrms/v1/employee/create status = false, err = \"emp_lang\" must be a number "}
{"level":"error","message":"Date & Time:- 2024-10-15T12:33:50.600Z POST 9.78979999999865 /api/hrms/v1/employee/create status = false, err = \"emp_lang\" must be a string "}
{"level":"error","message":"Date & Time:- 2024-10-15T12:34:45.668Z POST 9.005799999998999 /api/hrms/v1/employee/create status = false, err = \"district\" must be a string "}
{"level":"error","message":"Date & Time:- 2024-10-15T12:36:41.042Z POST 8.766299999995681 /api/hrms/v1/employee/create status = false, err = \"address_primary_permanent\" is not allowed "}
{"level":"error","message":"Date & Time:- 2024-10-15T12:46:02.559Z POST 7.133300000001327 /api/hrms/v1/employee/create status = false, err = \"emp_address_same_permanent\" is not allowed "}
{"level":"error","message":"Date & Time:- 2024-10-16T06:24:18.368Z POST 6.7845999999844935 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (783, null, 2024-10-16, 2024-10-16 11:54:17.205, null, 0, 1, 2024-10-16 11:54:18.112, 2024-10-16 11:54:18.112).` "}
{"level":"error","message":"Date & Time:- 2024-10-16T09:22:51.383Z POST 1.1304999999701977 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (784, null, 2024-10-16, 2024-10-16 14:52:47.125, null, 0, 1, 2024-10-16 14:52:47.601, 2024-10-16 14:52:47.601).` "}
{"level":"error","message":"Date & Time:- 2024-10-16T09:29:07.569Z POST 0.8185999998822808 /api/hrms/v1/employee/create status = false, err = \"emp_id\" must be a string "}
{"level":"error","message":"Date & Time:- 2024-10-16T09:41:30.045Z POST 0.7547999999951571 /api/hrms/v1/employee/create status = false, err = \"emp_id\" is not allowed "}
{"level":"error","message":"Date & Time:- 2024-10-16T09:44:15.725Z POST 0.8626000000076601 /api/hrms/v1/employee/create status = false, err = \"address_primary_permanent\" is not allowed "}
{"level":"error","message":"Date & Time:- 2024-10-16T09:52:08.456Z POST 0.7115999999950873 /api/hrms/v1/employee/create status = false, err = \"emp_address_same_permanent\" is not allowed "}
{"level":"error","message":"Date & Time:- 2024-10-16T09:55:28.163Z POST 0.7031000000024505 /api/hrms/v1/employee/create status = false, err = Cannot read properties of undefined (reading 'emp_loan') "}
{"level":"error","message":"Date & Time:- 2024-10-16T09:56:30.227Z POST 0.885999999998603 /api/hrms/v1/employee/create status = false, err = Cannot read properties of undefined (reading 'emp_loan') "}
{"level":"error","message":"Date & Time:- 2024-11-04T07:08:58.365Z GET 12.548900000285357 /api/hrms/v1/pay/payslip?emp_id=55555 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\employee\\payslip.dao.ts:82:49\n\n  79 //       AND EXTRACT(YEAR FROM date) = EXTRACT(YEAR FROM ${date})\n  80 //   AND EXTRACT(MONTH FROM date) = EXTRACT(MONTH FROM ${date});\n  81 //     `;\n→ 82 const payroll = await prisma.payroll_master.findMany({\n       where: {\n         emp_id: \"55555\",\n         AND: [\n           {\n             date: {\n               gte: new Date(\"Invalid Date\")\n                    ~~~~~~~~~~~~~~~~~~~~~~~~\n             }\n           },\n           {\n             date: {\n               lt: new Date(\"Invalid Date\")\n             }\n           }\n         ]\n       }\n     })\n\nInvalid value for argument `gte`: Provided Date object is invalid. Expected Date. "}
{"level":"error","message":"Date & Time:- 2024-11-04T07:09:48.652Z GET 1.0700000002980232 /api/hrms/v1/pay/payslip?emp_id=55555&date=2024-11-04 status = false, err = Cannot set properties of null (setting 'total') "}
{"level":"error","message":"Date & Time:- 2024-11-04T07:46:51.323Z GET 2.095499999821186 /api/hrms/v1/pay/payroll?emp_id=RM-456&date=2024-02-01 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:749:29\n\n  746 }\n  747 \n  748 const [data, count] = await prisma.$transaction([\n→ 749   prisma.payroll_master.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true,\n            month: true,\n            year: true,\n            basic_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n          where: {\n            month: 10,\n            year: 2024\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"Date & Time:- 2024-11-04T07:47:31.710Z GET 0.7648000000044703 /api/hrms/v1/pay/payroll?emp_id=RM-456&date=2024-02-01?take=1 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:749:29\n\n  746 }\n  747 \n  748 const [data, count] = await prisma.$transaction([\n→ 749   prisma.payroll_master.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true,\n            month: true,\n            year: true,\n            basic_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n          where: {\n            month: 10,\n            year: 2024\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"Date & Time:- 2024-11-04T07:47:56.110Z GET 1.1666999999433756 /api/hrms/v1/pay/payroll?emp_id=RM-456&date=2024-02-01&take=1 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:749:29\n\n  746 }\n  747 \n  748 const [data, count] = await prisma.$transaction([\n→ 749   prisma.payroll_master.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true,\n            month: true,\n            year: true,\n            basic_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n          where: {\n            month: 10,\n            year: 2024\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"Date & Time:- 2024-11-04T09:28:44.123Z POST 74.0187999997288 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (786, null, 2024-11-04, 2024-11-04 14:58:42.39, null, 0, 1, 2024-11-04 14:58:43.631, 2024-11-04 14:58:43.631).` "}
{"level":"error","message":"Date & Time:- 2024-11-04T09:58:06.360Z POST 0.7417000001296401 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (791, null, 2024-11-04, 2024-11-04 15:28:06.135, null, 0, 1, 2024-11-04 15:28:06.219, 2024-11-04 15:28:06.219).` "}
{"level":"error","message":"Date & Time:- 2024-11-04T11:23:30.481Z GET 0.6149000000441447 /api/hrms/v1/pay/payroll status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:749:29\n\n  746 }\n  747 \n  748 const [data, count] = await prisma.$transaction([\n→ 749   prisma.payroll_master.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true,\n            month: true,\n            year: true,\n            basic_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n          where: {\n            month: 10,\n            year: 2024\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"Date & Time:- 2024-11-04T11:24:06.376Z GET 0.6341000000247732 /api/hrms/v1/pay/payroll?take=10 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:749:29\n\n  746 }\n  747 \n  748 const [data, count] = await prisma.$transaction([\n→ 749   prisma.payroll_master.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true,\n            month: true,\n            year: true,\n            basic_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n          where: {\n            month: 10,\n            year: 2024\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"Date & Time:- 2024-11-04T11:25:32.977Z GET 2.15210000006482 /api/hrms/v1/pay/payroll?emp_id=RM-456&date=2024-02-01&take=20 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:749:29\n\n  746 }\n  747 \n  748 const [data, count] = await prisma.$transaction([\n→ 749   prisma.payroll_master.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true,\n            month: true,\n            year: true,\n            basic_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n          where: {\n            month: 10,\n            year: 2024\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"Date & Time:- 2024-11-04T11:27:54.481Z GET 0.4952000000048429 /api/hrms/v1/pay/payroll?emp_id=RM-456&date=2024-02-01&take=20&sup_id=1 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:749:29\n\n  746 }\n  747 \n  748 const [data, count] = await prisma.$transaction([\n→ 749   prisma.payroll_master.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true,\n            month: true,\n            year: true,\n            basic_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n          where: {\n            month: 10,\n            year: 2024\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"Date & Time:- 2024-11-04T11:28:53.489Z GET 0.5736000000033528 /api/hrms/v1/pay/payroll?sup_id=1 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:749:29\n\n  746 }\n  747 \n  748 const [data, count] = await prisma.$transaction([\n→ 749   prisma.payroll_master.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true,\n            month: true,\n            year: true,\n            basic_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n          where: {\n            month: 10,\n            year: 2024\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"Date & Time:- 2024-11-04T11:28:58.798Z GET 0.6609999999636784 /api/hrms/v1/pay/payroll?take=20&sup_id=1 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:749:29\n\n  746 }\n  747 \n  748 const [data, count] = await prisma.$transaction([\n→ 749   prisma.payroll_master.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true,\n            month: true,\n            year: true,\n            basic_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n          where: {\n            month: 10,\n            year: 2024\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"Date & Time:- 2024-11-04T11:29:08.309Z GET 0.8270999999949709 /api/hrms/v1/pay/payroll?take=20&sup_id=4 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:749:29\n\n  746 }\n  747 \n  748 const [data, count] = await prisma.$transaction([\n→ 749   prisma.payroll_master.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true,\n            month: true,\n            year: true,\n            basic_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n          where: {\n            month: 10,\n            year: 2024\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"Date & Time:- 2024-11-04T11:29:32.996Z GET 0.5608000000938773 /api/hrms/v1/pay/payroll?emp_id=EMP912e46&take=20&sup_id=4 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\payroll\\payroll.dao.ts:749:29\n\n  746 }\n  747 \n  748 const [data, count] = await prisma.$transaction([\n→ 749   prisma.payroll_master.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_name: true,\n            gross_pay: true,\n            leave_days: true,\n            working_hour: true,\n            total_allowance: true,\n            total_deductions: true,\n            non_billable: true,\n            present_days: true,\n            lwp_days: true,\n            salary_deducted: true,\n            status: true,\n            net_pay: true,\n            month: true,\n            year: true,\n            basic_pay: true\n          },\n          orderBy: {\n            emp_id: \"asc\"\n          },\n          where: {\n            month: 10,\n            year: 2024\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"Date & Time:- 2024-11-04T11:30:15.480Z POST 6.937799999956042 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (792, null, 2024-11-04, 2024-11-04 17:00:15.288, null, 0, 1, 2024-11-04 17:00:15.365, 2024-11-04 17:00:15.365).` "}
{"level":"error","message":"Date & Time:- 2024-11-04T12:26:01.400Z POST 2.2489000000059605 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (793, null, 2024-11-04, 2024-11-04 17:56:00.7, null, 0, 1, 2024-11-04 17:56:00.997, 2024-11-04 17:56:00.997).` "}
{"level":"error","message":"Date & Time:- 2024-11-04T12:44:58.281Z GET 0.7467999998480082 /api/hrms/v1/pay/payslip?emp_id=55555&date=2024-02-01 status = false, err = Cannot set properties of null (setting 'total') "}
{"level":"error","message":"Date & Time:- 2024-11-04T12:46:05.953Z GET 0.5012999996542931 /api/hrms/v1/pay/payslip?emp_id=RM-1450&date=2024-02-01 status = false, err = Cannot set properties of null (setting 'total') "}
{"level":"error","message":"Date & Time:- 2024-11-04T12:46:42.876Z GET 0.4779000002890825 /api/hrms/v1/pay/payslip?emp_id=RM-1450&date=2024-11-01 status = false, err = Cannot set properties of null (setting 'total') "}
{"level":"error","message":"Date & Time:- 2024-11-04T12:46:48.960Z GET 1.5778000000864267 /api/hrms/v1/pay/payslip?emp_id=RM-1450 status = false, err = \nInvalid `prisma.payroll_master.findMany()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\employee\\payslip.dao.ts:83:49\n\n  80 //       AND EXTRACT(YEAR FROM date) = EXTRACT(YEAR FROM ${date})\n  81 //   AND EXTRACT(MONTH FROM date) = EXTRACT(MONTH FROM ${date});\n  82 //     `;\n→ 83 const payroll = await prisma.payroll_master.findMany({\n       where: {\n         emp_id: \"RM-1450\",\n         AND: [\n           {\n             date: {\n               gte: new Date(\"Invalid Date\")\n                    ~~~~~~~~~~~~~~~~~~~~~~~~\n             }\n           },\n           {\n             date: {\n               lt: new Date(\"Invalid Date\")\n             }\n           }\n         ]\n       }\n     })\n\nInvalid value for argument `gte`: Provided Date object is invalid. Expected Date. "}
{"level":"error","message":"Date & Time:- 2024-11-04T12:48:37.844Z GET 0.5768999997526407 /api/hrms/v1/pay/payslip?emp_id=RM-1450&date=2024-02-01 status = false, err = Cannot set properties of null (setting 'total') "}
{"level":"error","message":"Date & Time:- 2024-11-04T12:54:40.557Z GET 1.3901000004261732 /api/hrms/v1/pay/payslip?emp_id=RM-897&date=2024-05-04 status = false, err = Cannot set properties of null (setting 'total') "}
{"level":"error","message":"Date & Time:- 2024-11-05T05:32:36.091Z POST 6.8312000000005355 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (173531, null, 2024-11-05, 2024-11-05 11:02:35.575, null, 0, 1, 2024-11-05 11:02:35.952, 2024-11-05 11:02:35.952).` "}
{"level":"error","message":"Date & Time:- 2024-11-06T07:16:37.814Z POST 10.289400000008754 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (1, null, 2024-11-06, 2024-11-06 12:46:37.282, null, 0, 1, 2024-11-06 12:46:37.684, 2024-11-06 12:46:37.684).` "}
{"level":"error","message":"Date & Time:- 2024-11-06T07:17:38.406Z GET 9.190299999987474 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-11-06T07:17:39.995Z GET 0.7362000000139233 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-11-06T07:19:35.406Z GET 0.5741999999736436 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"ulb_masters\" does not exist` "}
{"level":"error","message":"Date & Time:- 2024-11-06T09:55:09.958Z POST 0.8843000000342727 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (2, null, 2024-11-06, 2024-11-06 15:25:09.629, null, 0, 1, 2024-11-06 15:25:09.705, 2024-11-06 15:25:09.705).` "}
{"level":"error","message":"Date & Time:- 2024-11-06T10:37:40.613Z POST 8.533600000024308 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (3, null, 2024-11-06, 2024-11-06 16:07:40.093, null, 0, 1, 2024-11-06 16:07:40.496, 2024-11-06 16:07:40.496).` "}
{"level":"error","message":"Date & Time:- 2024-11-06T11:16:23.977Z POST 0.8086999999941327 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (4, null, 2024-11-06, 2024-11-06 16:46:23.405, null, 0, 1, 2024-11-06 16:46:23.47, 2024-11-06 16:46:23.47).` "}
{"level":"error","message":"Date & Time:- 2024-11-06T11:44:55.976Z POST 17.646299999963958 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (5, null, 2024-11-06, 2024-11-06 17:14:54.781, null, 0, 1, 2024-11-06 17:14:55.586, 2024-11-06 17:14:55.586).` "}
{"level":"error","message":"Date & Time:- 2024-11-06T12:20:48.037Z POST 6.960500000001048 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (1, null, 2024-11-06, 2024-11-06 17:50:47.474, null, 0, 1, 2024-11-06 17:50:47.952, 2024-11-06 17:50:47.952).` "}
{"level":"error","message":"Date & Time:- 2024-11-11T05:40:24.067Z POST 5.998399999982212 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (2, null, 2024-11-11, 2024-11-11 11:10:22.714, null, 0, 1, 2024-11-11 11:10:23.584, 2024-11-11 11:10:23.584).` "}
{"level":"error","message":"Date & Time:- 2024-11-11T06:02:23.504Z GET 0.6759000001475215 /api/hrms/v1/pay/payslip?emp_id=55555&date=2024-11-11 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\employee\\payslip.dao.ts:215:46\n\n  212   },\n  213 };\n  214 \n→ 215 const data: any = await prisma.employees.findFirst(\nThe column `employee_increment_details.esic_deduct_for_current_year` does not exist in the current database. "}
{"level":"error","message":"Date & Time:- 2024-11-11T06:02:33.531Z GET 0.46059999987483025 /api/hrms/v1/pay/payslip?emp_id=EMP912e40&date=2024-11-11 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\employee\\payslip.dao.ts:215:46\n\n  212   },\n  213 };\n  214 \n→ 215 const data: any = await prisma.employees.findFirst(\nThe column `employee_increment_details.esic_deduct_for_current_year` does not exist in the current database. "}
{"level":"error","message":"Date & Time:- 2024-11-11T06:03:11.360Z GET 1.5010999999940395 /api/hrms/v1/pay/payslip?emp_id=EMP912e41&date=2024-11-11 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\employee\\payslip.dao.ts:215:46\n\n  212   },\n  213 };\n  214 \n→ 215 const data: any = await prisma.employees.findFirst(\nThe column `employee_increment_details.esic_deduct_for_current_year` does not exist in the current database. "}
{"level":"error","message":"Date & Time:- 2024-11-11T06:03:30.164Z GET 0.5138000000733882 /api/hrms/v1/pay/payslip?emp_id=EMP912e41&date=2024-11-11 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\employee\\payslip.dao.ts:215:46\n\n  212   },\n  213 };\n  214 \n→ 215 const data: any = await prisma.employees.findFirst(\nThe column `employee_increment_details.esic_deduct_for_current_year` does not exist in the current database. "}
{"level":"error","message":"Date & Time:- 2024-11-11T06:05:03.022Z GET 15.088999999919906 /api/hrms/v1/pay/payslip?emp_id=EMP912e41&date=2024-11-11 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\employee\\payslip.dao.ts:215:46\n\n  212   },\n  213 };\n  214 \n→ 215 const data: any = await prisma.employees.findFirst(\nThe column `employee_increment_details.esic_deduct_for_current_year` does not exist in the current database. "}
{"level":"error","message":"Date & Time:- 2024-11-11T06:06:50.224Z GET 0.5583999999798834 /api/hrms/v1/pay/payslip?emp_id=EMP912e41&date=2024-11-11 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\employee\\payslip.dao.ts:215:46\n\n  212   },\n  213 };\n  214 \n→ 215 const data: any = await prisma.employees.findFirst(\nThe column `employee_increment_details.esic_deduct_for_current_year` does not exist in the current database. "}
{"level":"error","message":"Date & Time:- 2024-11-11T06:08:14.967Z GET 0.6561000000219792 /api/hrms/v1/pay/payslip?emp_id=EMP912e41&date=2024-11-11 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\nD:\\judico_hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\employee\\payslip.dao.ts:215:46\n\n  212   },\n  213 };\n  214 \n→ 215 const data: any = await prisma.employees.findFirst(\nThe column `employee_increment_details.esic_deduct_for_current_year` does not exist in the current database. "}
{"level":"error","message":"Date & Time:- 2024-11-12T07:26:36.641Z POST 16.130199999985052 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (175921, null, 2024-11-12, 2024-11-12 12:56:31.515, null, 0, 1, 2024-11-12 12:56:35.977, 2024-11-12 12:56:35.977).` "}
{"level":"error","message":"Date & Time:- 2024-11-12T12:46:04.204Z POST 7.377399999997579 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (15, null, 2024-11-12, 2024-11-12 18:16:02.864, null, 0, 1, 2024-11-12 18:16:04.124, 2024-11-12 18:16:04.124).` "}
{"level":"error","message":"Date & Time:- 2024-11-12T12:46:28.192Z GET 3.412300000025425 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-12T12:46:31.103Z GET 1.7273000000277534 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-12T12:48:52.300Z GET 1.1169999999692664 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-12T12:49:03.204Z GET 0.7077000000281259 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-12T12:49:03.897Z GET 0.5365999999921769 /api/hrms/v1/pay/payslip?emp_id=EMP912e41&date=2024-11-12 status = false, err = Cannot set properties of null (setting 'total') "}
{"level":"error","message":"Date & Time:- 2024-11-12T12:49:05.528Z GET 0.5987999999779277 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-12T12:59:43.333Z GET 1.0474999998696148 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-12T12:59:48.856Z GET 0.7701000000815839 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-12T13:00:46.301Z GET 0.7697000000625849 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-18T06:19:21.947Z GET 41.37089999997988 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-18T06:19:29.986Z GET 1.0758999999961816 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-18T06:22:27.165Z GET 0.8917999999830499 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-18T06:24:27.348Z GET 0.9648000000743195 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-18T06:30:55.553Z GET 1.2864000000990927 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-18T10:35:37.186Z GET 22.72709999998915 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T15:55:04.785Z GET 23.073399998247623 /api/hrms/v1/employee/attendance/count-daily status = false, err = Cannot destructure property 'ulb_id' of 'req.body.auth' as it is undefined. "}
{"level":"error","message":"Date & Time:- 2024-11-19T15:55:05.044Z GET 2.115200001746416 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T15:55:05.051Z GET 1.7430000007152557 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T15:55:37.291Z GET 1.9605999998748302 /api/hrms/v1/employee/attendance/count-daily status = false, err = Cannot destructure property 'ulb_id' of 'req.body.auth' as it is undefined. "}
{"level":"error","message":"Date & Time:- 2024-11-19T15:55:37.369Z GET 1.234299998730421 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T15:55:37.425Z GET 2.944200001657009 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T15:56:44.870Z GET 0.8755999989807606 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T15:56:45.029Z GET 0.5849999971687794 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T17:26:47.005Z GET 1.4668000005185604 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T17:45:37.330Z GET 0.5402000024914742 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T17:52:18.686Z GET 1.754900000989437 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T17:56:55.175Z GET 0.830900002270937 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T17:58:42.204Z GET 0.888399999588728 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T18:02:54.973Z GET 1.353999998420477 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T18:06:48.403Z GET 6.529800001531839 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T18:10:48.525Z GET 1.3770000003278255 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T18:12:05.381Z GET 1.3580000028014183 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T18:14:06.450Z GET 0.7198999971151352 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T18:19:03.500Z GET 1.8991999998688698 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T18:40:04.041Z GET 3.192799996584654 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T18:43:02.918Z GET 0.7532999999821186 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T18:56:57.165Z GET 1.9151000007987022 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T18:58:17.000Z GET 1.0537000000476837 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T19:00:15.182Z GET 1.65990000218153 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T19:02:13.119Z GET 1.2325000017881393 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T19:05:22.923Z GET 0.7755000032484531 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T19:06:26.972Z GET 6.599200002849102 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T19:54:23.320Z GET 1.8624999970197678 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T19:55:59.412Z GET 1.3222000002861023 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T19:57:29.997Z GET 1.2947999984025955 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-19T19:59:08.706Z GET 1.4880999997258186 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T05:24:10.324Z GET 5.156100004911423 /api/hrms/v1/employee/attendance/count-daily status = false, err = Cannot destructure property 'ulb_id' of 'req.body.auth' as it is undefined. "}
{"level":"error","message":"Date & Time:- 2024-11-20T05:24:10.473Z GET 8.694499999284744 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T05:24:10.475Z GET 0.7104000002145767 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T05:31:55.388Z GET 6.415999993681908 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T10:52:29.942Z GET 3.215499997138977 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T10:52:57.916Z GET 4.4450999945402145 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T10:52:57.988Z GET 1.6347000002861023 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T10:54:54.987Z GET 0.9795999974012375 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T10:55:04.593Z GET 0.9229999929666519 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T10:55:04.722Z GET 1.6336999982595444 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:04:24.224Z GET 1.0478000044822693 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:09:46.263Z GET 1.242599993944168 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:12:37.639Z GET 0.9136999994516373 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:15:06.685Z GET 1.5337000042200089 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:15:06.812Z GET 1.3228999972343445 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:15:51.990Z GET 0.7549000084400177 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:15:52.240Z GET 0.9790000021457672 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:21:03.371Z GET 1.230100005865097 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:22:33.438Z GET 0.7202000021934509 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:25:27.725Z GET 0.8910000026226044 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:33:47.173Z GET 2.8797999918460846 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:34:53.622Z GET 0.6228999942541122 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:36:11.820Z GET 0.4854000061750412 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:38:06.101Z GET 0.6976000070571899 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:38:20.106Z GET 0.6418000012636185 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:38:20.296Z GET 0.41439999639987946 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:40:07.816Z GET 0.47669999301433563 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:40:16.222Z GET 0.9413999915122986 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:40:16.477Z GET 0.6525000035762787 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:42:10.337Z GET 3.2541000097990036 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:42:10.426Z GET 0.531700000166893 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:47:24.310Z GET 0.7593999952077866 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:47:33.473Z GET 0.9226000010967255 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:47:33.705Z GET 1.4197999984025955 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:48:56.782Z GET 1.3650999963283539 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:55:55.473Z GET 1.3013000041246414 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T11:57:58.956Z GET 0.7543999999761581 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:02:15.298Z GET 1.1480000019073486 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:03:23.616Z GET 0.6845999956130981 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:06:48.998Z GET 1.1859999895095825 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:09:08.447Z GET 1.2447999864816666 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:09:14.460Z GET 1.8540000021457672 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:09:14.887Z GET 1.4825000017881393 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:12:01.618Z GET 1.025199994444847 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:12:43.660Z GET 2.7749000042676926 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:13:08.153Z GET 0.6026999950408936 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:14:05.620Z GET 0.8532000035047531 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:14:43.331Z GET 0.7895999997854233 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:15:35.888Z GET 8.543999999761581 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:18:55.748Z GET 0.43709999322891235 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:21:00.254Z GET 0.6325999945402145 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:22:27.879Z GET 0.7567999958992004 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:27:17.311Z GET 2.571600005030632 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:28:27.485Z GET 0.7041999995708466 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:28:36.406Z GET 2.3285000026226044 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:28:36.579Z GET 0.8327000141143799 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:31:53.037Z GET 4.212699994444847 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:32:54.145Z GET 0.8877000063657761 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:35:49.497Z GET 1.0712999999523163 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:36:05.049Z GET 0.6299000084400177 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:36:05.273Z GET 0.5347999930381775 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:37:32.440Z GET 2.1314999908208847 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:37:41.078Z GET 3.795200005173683 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:37:59.558Z GET 1.414900004863739 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:37:59.687Z GET 3.908600002527237 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:40:51.351Z GET 1.7107999920845032 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:40:51.401Z GET 1.5948999971151352 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:42:58.376Z GET 0.8499999940395355 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:42:58.408Z GET 0.7976000010967255 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:45:23.101Z GET 1.3035999983549118 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:45:23.161Z GET 0.6739999949932098 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:48:40.159Z GET 0.8417999893426895 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:48:43.856Z GET 0.708199992775917 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:49:01.615Z GET 1.9053000062704086 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:49:01.728Z GET 0.7160999923944473 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:50:26.972Z GET 0.6898999959230423 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:52:43.507Z GET 0.4708999991416931 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:55:14.294Z GET 2.351300001144409 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:55:14.403Z GET 1.4240999966859818 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:56:26.521Z GET 0.7223999947309494 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:56:34.853Z GET 1.0370000004768372 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T12:56:35.126Z GET 1.891500011086464 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T13:00:06.693Z GET 2.115799993276596 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T13:00:06.785Z GET 1.048200011253357 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T13:00:17.776Z GET 1.4736000001430511 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T13:00:17.934Z GET 0.8000999987125397 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T13:00:37.105Z GET 0.8942999988794327 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T13:00:37.380Z GET 0.7675999999046326 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T13:00:42.431Z GET 1.0627000033855438 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-20T13:00:42.678Z GET 1.1124999970197678 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T05:14:44.983Z GET 1.3510999998543411 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T05:14:45.007Z GET 1.3283999999985099 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T05:15:45.494Z GET 0.7693999998737127 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T05:15:45.537Z GET 0.7662999997846782 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T05:15:58.754Z GET 0.7842000001110137 /api/hrms/v1/employee/attendance/count-daily status = false, err = Cannot destructure property 'ulb_id' of 'req.body.auth' as it is undefined. "}
{"level":"error","message":"Date & Time:- 2024-11-21T05:16:49.560Z GET 0.5825000000186265 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T05:16:49.627Z GET 0.6001000001560897 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T05:19:05.149Z GET 0.8541999999433756 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T05:19:18.417Z GET 0.8119999999180436 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T05:19:18.626Z GET 1.4032999998889863 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T05:31:16.322Z GET 0.9958999999798834 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T05:36:41.379Z GET 0.6647000000812113 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T05:38:07.179Z GET 0.6089999997057021 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T05:38:17.581Z GET 2.3393000001087785 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T05:38:25.638Z GET 0.630899999756366 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T05:38:25.823Z GET 0.9766999999992549 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T05:43:47.420Z GET 0.5071999998763204 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T05:52:25.924Z GET 0.43099999986588955 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T05:52:53.767Z GET 0.6742000002413988 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T05:52:57.044Z GET 1.1348999999463558 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T05:52:57.096Z GET 0.557899999897927 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T05:53:40.893Z GET 0.6230999999679625 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T05:53:41.153Z GET 0.8219999996945262 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T05:54:48.128Z GET 0.690500000026077 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T05:56:15.463Z GET 0.6285000001080334 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T06:03:35.382Z GET 0.5927999997511506 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T06:06:16.433Z GET 0.5762000000104308 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T06:07:43.889Z GET 0.6282999999821186 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T06:07:52.352Z GET 1.4130999995395541 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T06:07:58.662Z GET 1.714100000448525 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T06:07:58.820Z GET 1.2401000000536442 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T06:09:09.614Z GET 0.5809000004082918 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T06:09:09.728Z GET 0.8344999998807907 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T06:09:54.854Z GET 0.595100000500679 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T06:09:55.042Z GET 0.8701999997720122 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T06:12:45.526Z GET 1.0382000003010035 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T06:14:10.050Z GET 4.348100000061095 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T06:14:10.285Z GET 0.4630999993532896 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T06:15:15.137Z GET 0.7839000001549721 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T06:15:38.286Z GET 0.697099999524653 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T06:15:38.297Z GET 1.788799999281764 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T06:33:14.600Z GET 2.7086000004783273 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T06:35:19.623Z GET 0.7724999999627471 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T06:42:52.337Z GET 0.6318999994546175 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T06:47:23.529Z GET 0.8889999995008111 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T06:48:39.589Z GET 0.7248999997973442 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T06:50:47.073Z GET 0.6022999994456768 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T06:53:58.952Z GET 4.149500000290573 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T06:55:36.979Z GET 0.771900000050664 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T06:56:37.902Z GET 0.6242000004276633 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T06:57:41.136Z GET 2.8314999993890524 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T07:02:15.967Z GET 0.6993999993428588 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T07:04:04.517Z GET 0.821000000461936 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T07:05:24.938Z GET 0.6298000002279878 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T07:07:07.139Z GET 1.380400000140071 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T07:08:15.334Z GET 0.49239999987185 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T07:08:43.385Z GET 7.1762999994680285 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T07:10:12.457Z GET 0.5142000000923872 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T07:18:31.811Z GET 19.962499998509884 /api/hrms/v1/employee/attendance/count-daily status = false, err = Cannot destructure property 'ulb_id' of 'req.body.auth' as it is undefined. "}
{"level":"error","message":"Date & Time:- 2024-11-21T07:18:31.989Z GET 1.691499998793006 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T07:18:31.993Z GET 0.7431000005453825 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T07:19:41.147Z GET 0.8074000012129545 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T07:21:20.920Z GET 1.682599999010563 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T07:22:52.109Z GET 1.331300001591444 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T07:23:55.020Z GET 1.2747999988496304 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T07:44:49.371Z GET 15.744199998676777 /api/hrms/v1/employee/attendance/count-daily status = false, err = Cannot destructure property 'ulb_id' of 'req.body.auth' as it is undefined. "}
{"level":"error","message":"Date & Time:- 2024-11-21T07:44:50.571Z GET 2.050799999386072 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T07:44:50.580Z GET 1.7697000000625849 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T07:46:05.529Z GET 0.8112000003457069 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T07:46:10.450Z GET 0.9586999993771315 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T07:46:55.080Z GET 1.0307000000029802 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T07:46:55.191Z GET 0.8672000002115965 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T07:49:45.178Z GET 0.7971999999135733 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T08:06:47.465Z GET 1.976800000295043 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T09:30:18.563Z GET 0.7805000022053719 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T09:31:25.747Z GET 1.0273999981582165 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T09:33:01.365Z GET 0.8205000013113022 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T09:34:08.545Z GET 0.6812999993562698 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T09:35:57.235Z GET 0.6920999996364117 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T09:36:10.567Z GET 1.6008000001311302 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T09:37:17.493Z GET 1.4614000022411346 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T09:37:21.981Z GET 0.946799997240305 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T09:38:18.337Z GET 2.60359999909997 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T09:40:21.654Z GET 0.5336000025272369 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T09:40:29.575Z GET 1.0467000007629395 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T09:40:29.764Z GET 0.9789000004529953 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T09:41:31.316Z GET 0.9749999977648258 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T09:41:31.431Z GET 0.8524000011384487 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T09:43:53.662Z GET 0.545099999755621 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T09:44:06.963Z GET 0.8051999993622303 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T09:44:07.050Z GET 1.2303000018000603 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T09:45:09.399Z GET 0.49729999899864197 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T09:45:45.137Z GET 0.7591000013053417 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T09:45:45.201Z GET 0.4748999997973442 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T09:46:34.497Z GET 0.8304999992251396 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T09:46:34.565Z GET 0.5697000026702881 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T09:47:36.278Z GET 1.0509999990463257 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T09:49:10.964Z GET 0.7663000002503395 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T09:53:27.330Z GET 0.46939999982714653 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T10:24:54.102Z GET 3.4580999985337257 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T10:24:54.160Z GET 1.3689999990165234 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T10:25:57.811Z GET 1.5938999988138676 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T10:25:57.936Z GET 2.6636999994516373 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T10:29:28.837Z GET 0.8410000018775463 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T10:37:06.676Z GET 1.2421999983489513 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T10:40:29.317Z GET 0.982599999755621 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T10:41:11.838Z GET 1.8513999991118908 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T10:42:14.574Z GET 0.8671000003814697 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T10:42:22.244Z GET 0.8245999999344349 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T10:42:22.342Z GET 0.735300000756979 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T10:45:09.048Z GET 0.922800000756979 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T10:46:14.238Z GET 1.0577999986708164 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T10:46:19.647Z GET 1.3495000004768372 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T10:46:19.773Z GET 0.8973000012338161 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T10:47:46.151Z GET 1.2928999997675419 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T10:48:48.483Z GET 0.9184000007808208 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T10:58:34.277Z GET 0.924600001424551 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T11:00:25.253Z GET 0.5788999982178211 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T11:00:41.156Z GET 2.190099999308586 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T11:01:04.003Z GET 0.6063000001013279 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T11:01:04.190Z GET 1.1901999972760677 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T11:01:55.075Z GET 0.7656000033020973 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-21T11:01:55.149Z GET 1.3719999976456165 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-22T05:26:11.041Z GET 1.7485999999917112 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-22T05:26:12.547Z GET 0.7974999999860302 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (::1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-23T07:02:41.590Z GET 3.979700000025332 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"\nconnection to server at \"localhost\" (127.0.0.1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-23T07:02:43.886Z GET 0.6648000000277534 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"\nconnection to server at \"localhost\" (127.0.0.1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-23T07:11:15.510Z GET 0.6278000000165775 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"\nconnection to server at \"localhost\" (127.0.0.1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-23T09:40:04.914Z GET 4.59419999999227 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"\nconnection to server at \"localhost\" (127.0.0.1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-23T09:40:06.609Z GET 3.1692999999795575 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"\nconnection to server at \"localhost\" (127.0.0.1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-23T09:41:10.297Z GET 1.9069000000017695 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"\nconnection to server at \"localhost\" (127.0.0.1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-23T09:42:21.102Z GET 0.6481999999959953 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"\nconnection to server at \"localhost\" (127.0.0.1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-23T09:44:24.545Z GET 1.0020999999833293 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"\nconnection to server at \"localhost\" (127.0.0.1), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"` "}
{"level":"error","message":"Date & Time:- 2024-11-23T11:06:26.939Z GET 0.6390533447265625 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-23T11:16:19.843Z POST 5.0329437255859375 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (3016, null, 2024-11-23, 2024-11-23 11:16:19.728, null, 0, 1, 2024-11-23 11:16:19.823, 2024-11-23 11:16:19.823).` "}
{"level":"error","message":"Date & Time:- 2024-11-23T11:17:12.820Z POST 0.5429763793945312 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (3017, null, 2024-11-23, 2024-11-23 11:17:12.817, null, 0, 1, 2024-11-23 11:17:12.819, 2024-11-23 11:17:12.819).` "}
{"level":"error","message":"Date & Time:- 2024-11-23T11:18:31.925Z GET 1.6848182678222656 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-23T11:18:31.928Z GET 1.1906814575195312 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-23T11:19:23.123Z GET 0.9337997436523438 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-23T11:19:23.125Z GET 0.8965988159179688 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-23T11:21:48.532Z GET 1.3031806945800781 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-23T11:24:07.795Z GET 0.6569976806640625 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-23T11:26:06.992Z POST 1.2363433837890625 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (3018, null, 2024-11-23, 2024-11-23 11:26:06.986, null, 0, 1, 2024-11-23 11:26:06.988, 2024-11-23 11:26:06.988).` "}
{"level":"error","message":"Date & Time:- 2024-11-23T11:26:18.868Z GET 1.1574821472167969 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-23T11:27:51.026Z GET 0.6049728393554688 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-23T11:28:09.460Z GET 1.14154052734375 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-23T11:28:09.463Z GET 1.0107650756835938 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-23T11:28:17.652Z GET 1.142425537109375 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-23T11:28:17.654Z GET 1.0880012512207031 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-26T09:12:40.641Z POST 6.56829833984375 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (3090, null, 2024-11-26, 2024-11-26 09:12:40.532, null, 0, 1, 2024-11-26 09:12:40.623, 2024-11-26 09:12:40.623).` "}
{"level":"error","message":"Date & Time:- 2024-11-26T09:14:50.995Z GET 0.8272476196289062 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-26T09:14:50.996Z GET 0.4659996032714844 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-27T12:04:32.425Z POST 5.542449951171875 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (3115, null, 2024-11-27, 2024-11-27 12:04:32.326, null, 0, 1, 2024-11-27 12:04:32.409, 2024-11-27 12:04:32.409).` "}
{"level":"error","message":"Date & Time:- 2024-11-27T12:06:43.701Z GET 1.5963630676269531 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-27T12:06:43.705Z GET 1.2764968872070312 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-27T12:09:09.109Z GET 1.2547035217285156 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-27T12:09:09.112Z GET 0.7901992797851562 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-27T12:09:13.204Z GET 1.5112876892089844 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-27T12:09:13.206Z GET 0.77392578125 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-27T12:21:42.771Z GET 0.6337661743164062 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-27T12:24:16.372Z GET 1.483795166015625 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-30T05:26:02.393Z POST 5.571094512939453 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (3527, null, 2024-11-30, 2024-11-30 05:26:02.304, null, 0, 1, 2024-11-30 05:26:02.38, 2024-11-30 05:26:02.38).` "}
{"level":"error","message":"Date & Time:- 2024-11-30T05:28:14.325Z GET 1.6434669494628906 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-30T05:28:14.327Z GET 0.9030342102050781 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-30T05:30:17.204Z GET 1.8039016723632812 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-30T05:30:19.252Z GET 1.1148567199707031 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-30T05:32:54.899Z GET 1.036163330078125 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-30T05:38:24.628Z GET 1.1434097290039062 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-11-30T05:38:30.772Z GET 1.4149360656738281 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-12-28T07:45:10.824Z POST 5.999664306640625 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (67292, null, 2024-12-28, 2024-12-28 07:45:10.719, null, 0, 1, 2024-12-28 07:45:10.804, 2024-12-28 07:45:10.804).` "}
{"level":"error","message":"Date & Time:- 2024-12-28T07:47:24.022Z GET 1.562744140625 /api/hrms/v1/ulb/get?id= status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-12-28T07:47:24.023Z GET 0.49744415283203125 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2024-12-28T07:50:24.244Z GET 1.3109245300292969 /api/hrms/v1/ulb/get?id=2 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `08001`. Message: `ERROR: could not connect to server \"master_fdw\"\nDETAIL: connection to server at \"172.18.1.55\", port 5432 failed: Connection timed out\n\tIs the server running on that host and accepting TCP/IP connections?` "}
{"level":"error","message":"Date & Time:- 2025-03-25T11:41:28.820Z POST 1.939168930053711 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (119187, null, 2025-03-25, 2025-03-25 17:11:28.802, null, 0, 1, 2025-03-25 17:11:28.804, 2025-03-25 17:11:28.804).` "}
<<<<<<< HEAD
{"level":"error","message":"Date & Time:- 2025-03-27T10:09:35.765Z POST 0.8559303283691406 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (121060, null, 2025-03-27, 2025-03-27 10:09:35.748, null, 0, 1, 2025-03-27 10:09:35.736, 2025-03-27 10:09:35.736).` "}
{"level":"error","message":"Date & Time:- 2025-03-27T10:10:40.384Z POST 0.8548622131347656 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (121061, null, 2025-03-27, 2025-03-27 10:10:40.379, null, 0, 1, 2025-03-27 10:10:40.365, 2025-03-27 10:10:40.365).` "}
{"level":"error","message":"Date & Time:- 2025-03-27T10:11:26.632Z POST 0.8440036773681641 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (121062, null, 2025-03-27, 2025-03-27 10:11:26.627, null, 0, 1, 2025-03-27 10:11:26.612, 2025-03-27 10:11:26.612).` "}
{"level":"error","message":"Date & Time:- 2025-03-28T07:22:39.412Z POST 0.8607101440429688 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (122683, null, 2025-03-28, 2025-03-28 07:22:39.094, null, 0, 1, 2025-03-28 07:22:39.299, 2025-03-28 07:22:39.299).` "}
{"level":"error","message":"Date & Time:- 2025-03-28T12:32:04.073Z POST 0.9510650634765625 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (122709, null, 2025-03-28, 2025-03-28 12:32:04.063, null, 0, 1, 2025-03-28 12:32:04.054, 2025-03-28 12:32:04.054).` "}
{"level":"error","message":"Date & Time:- 2025-03-28T12:38:20.614Z POST 0.7958049774169922 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (122710, null, 2025-03-28, 2025-03-28 12:38:20.61, null, 0, 1, 2025-03-28 12:38:20.618, 2025-03-28 12:38:20.618).` "}
{"level":"error","message":"Date & Time:- 2025-03-28T12:38:41.683Z POST 0.9560737609863281 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (122711, null, 2025-03-28, 2025-03-28 12:38:41.679, null, 0, 1, 2025-03-28 12:38:41.688, 2025-03-28 12:38:41.688).` "}
{"level":"error","message":"Date & Time:- 2025-03-28T12:39:29.633Z POST 0.8251438140869141 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (122712, null, 2025-03-28, 2025-03-28 12:39:29.629, null, 0, 1, 2025-03-28 12:39:29.64, 2025-03-28 12:39:29.64).` "}
{"level":"error","message":"Date & Time:- 2025-03-28T12:42:51.085Z POST 0.8005008697509766 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (122713, null, 2025-03-28, 2025-03-28 12:42:51.081, null, 0, 1, 2025-03-28 12:42:51.098, 2025-03-28 12:42:51.098).` "}
{"level":"error","message":"Date & Time:- 2025-03-28T12:44:27.651Z POST 0.8135814666748047 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (122714, null, 2025-03-28, 2025-03-28 12:44:27.647, null, 0, 1, 2025-03-28 12:44:27.668, 2025-03-28 12:44:27.668).` "}
{"level":"error","message":"Date & Time:- 2025-03-28T12:48:56.350Z POST 0.9440212249755859 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (122715, null, 2025-03-28, 2025-03-28 12:48:56.346, null, 0, 1, 2025-03-28 12:48:56.374, 2025-03-28 12:48:56.374).` "}
{"level":"error","message":"Date & Time:- 2025-04-01T16:35:29.557Z POST 14.475955963134766 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (127893, null, 2025-04-01, 2025-04-01 16:35:29.391, null, 0, 1, 2025-04-01 16:35:29.524, 2025-04-01 16:35:29.524).` "}
{"level":"error","message":"Date & Time:- 2025-04-01T16:35:37.432Z POST 6.5455169677734375 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (127894, null, 2025-04-01, 2025-04-01 16:35:37.421, null, 0, 1, 2025-04-01 16:35:37.421, 2025-04-01 16:35:37.421).` "}
{"level":"error","message":"Date & Time:- 2025-04-02T06:40:42.377Z POST 1.459939956665039 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (129635, null, 2025-04-02, 2025-04-02 06:40:42.241, null, 0, 1, 2025-04-02 06:40:42.356, 2025-04-02 06:40:42.356).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T16:29:00.998Z POST 0.9178695678710938 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (131376, null, 2025-04-03, 2025-04-03 16:29:00.777, null, 0, 1, 2025-04-03 16:29:00.954, 2025-04-03 16:29:00.954).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T16:45:13.903Z POST 1.1850624084472656 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (131377, null, 2025-04-03, 2025-04-03 16:45:13.797, null, 0, 1, 2025-04-03 16:45:13.892, 2025-04-03 16:45:13.892).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T16:46:38.921Z POST 0.9124832153320312 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (131378, null, 2025-04-03, 2025-04-03 16:46:38.916, null, 0, 1, 2025-04-03 16:46:38.911, 2025-04-03 16:46:38.911).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T16:55:55.637Z POST 0.8731193542480469 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (131379, null, 2025-04-03, 2025-04-03 16:55:55.507, null, 0, 1, 2025-04-03 16:55:55.616, 2025-04-03 16:55:55.616).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T16:56:40.150Z POST 0.8242988586425781 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (131380, null, 2025-04-03, 2025-04-03 16:56:40.145, null, 0, 1, 2025-04-03 16:56:40.129, 2025-04-03 16:56:40.129).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T16:57:54.647Z POST 0.828094482421875 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (131381, null, 2025-04-03, 2025-04-03 16:57:54.642, null, 0, 1, 2025-04-03 16:57:54.625, 2025-04-03 16:57:54.625).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T17:01:34.203Z POST 0.8605918884277344 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (131382, null, 2025-04-03, 2025-04-03 17:01:34.198, null, 0, 1, 2025-04-03 17:01:34.179, 2025-04-03 17:01:34.179).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T17:08:29.371Z POST 0.8315029144287109 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (131383, null, 2025-04-03, 2025-04-03 17:08:29.233, null, 0, 1, 2025-04-03 17:08:29.345, 2025-04-03 17:08:29.345).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T17:09:52.432Z POST 0.8441257476806641 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (131384, null, 2025-04-03, 2025-04-03 17:09:52.427, null, 0, 1, 2025-04-03 17:09:52.406, 2025-04-03 17:09:52.406).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T17:13:21.110Z POST 0.8761253356933594 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (131385, null, 2025-04-03, 2025-04-03 17:13:21.105, null, 0, 1, 2025-04-03 17:13:21.082, 2025-04-03 17:13:21.082).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T17:15:53.525Z POST 0.9586124420166016 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (131386, null, 2025-04-03, 2025-04-03 17:15:53.52, null, 0, 1, 2025-04-03 17:15:53.496, 2025-04-03 17:15:53.496).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T17:18:02.940Z POST 0.8358039855957031 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (131387, null, 2025-04-03, 2025-04-03 17:18:02.935, null, 0, 1, 2025-04-03 17:18:02.91, 2025-04-03 17:18:02.91).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T17:34:34.862Z POST 0.8238162994384766 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (131388, null, 2025-04-03, 2025-04-03 17:34:34.725, null, 0, 1, 2025-04-03 17:34:34.834, 2025-04-03 17:34:34.834).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T17:39:56.289Z POST 0.8348827362060547 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (131389, null, 2025-04-03, 2025-04-03 17:39:56.152, null, 0, 1, 2025-04-03 17:39:56.261, 2025-04-03 17:39:56.261).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T17:41:12.522Z POST 0.8079357147216797 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (131390, null, 2025-04-03, 2025-04-03 17:41:12.517, null, 0, 1, 2025-04-03 17:41:12.494, 2025-04-03 17:41:12.494).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T17:43:52.632Z POST 0.8336772918701172 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (131391, null, 2025-04-03, 2025-04-03 17:43:52.627, null, 0, 1, 2025-04-03 17:43:52.604, 2025-04-03 17:43:52.604).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T17:49:02.466Z POST 0.4378929138183594 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (131392, null, 2025-04-03, 2025-04-03 17:49:02.331, null, 0, 1, 2025-04-03 17:49:02.44, 2025-04-03 17:49:02.44).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T17:52:14.597Z POST 0.8549060821533203 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (131393, null, 2025-04-03, 2025-04-03 17:52:14.592, null, 0, 1, 2025-04-03 17:52:14.571, 2025-04-03 17:52:14.571).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T17:58:46.156Z POST 0.8604316711425781 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (131394, null, 2025-04-03, 2025-04-03 17:58:46.034, null, 0, 1, 2025-04-03 17:58:46.133, 2025-04-03 17:58:46.133).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T17:58:47.076Z POST 0.8854331970214844 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (131395, null, 2025-04-03, 2025-04-03 17:58:47.072, null, 0, 1, 2025-04-03 17:58:47.053, 2025-04-03 17:58:47.053).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T18:00:06.848Z POST 0.9366588592529297 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (131396, null, 2025-04-03, 2025-04-03 18:00:06.844, null, 0, 1, 2025-04-03 18:00:06.826, 2025-04-03 18:00:06.826).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T18:14:59.076Z POST 0.9008102416992188 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (131397, null, 2025-04-03, 2025-04-03 18:14:58.939, null, 0, 1, 2025-04-03 18:14:59.058, 2025-04-03 18:14:59.058).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T18:19:20.777Z POST 0.8045768737792969 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (131398, null, 2025-04-03, 2025-04-03 18:19:20.773, null, 0, 1, 2025-04-03 18:19:20.761, 2025-04-03 18:19:20.761).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T18:40:41.611Z POST 0.8584213256835938 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (133139, null, 2025-04-03, 2025-04-03 18:40:41.492, null, 0, 1, 2025-04-03 18:40:41.597, 2025-04-03 18:40:41.597).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T18:55:03.813Z POST 0.8363494873046875 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (133140, null, 2025-04-03, 2025-04-03 18:55:03.676, null, 0, 1, 2025-04-03 18:55:03.8, 2025-04-03 18:55:03.8).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T18:56:42.851Z POST 0.7908172607421875 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (133141, null, 2025-04-03, 2025-04-03 18:56:42.846, null, 0, 1, 2025-04-03 18:56:42.839, 2025-04-03 18:56:42.839).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T18:59:45.080Z POST 0.8963336944580078 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (133142, null, 2025-04-03, 2025-04-03 18:59:45.075, null, 0, 1, 2025-04-03 18:59:45.068, 2025-04-03 18:59:45.068).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T19:01:26.583Z POST 0.8002510070800781 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (133143, null, 2025-04-03, 2025-04-03 19:01:26.579, null, 0, 1, 2025-04-03 19:01:26.572, 2025-04-03 19:01:26.572).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T19:03:03.886Z POST 0.7923698425292969 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (133144, null, 2025-04-03, 2025-04-03 19:03:03.882, null, 0, 1, 2025-04-03 19:03:03.874, 2025-04-03 19:03:03.874).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T19:05:20.035Z POST 0.8685398101806641 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (133145, null, 2025-04-03, 2025-04-03 19:05:20.031, null, 0, 1, 2025-04-03 19:05:20.023, 2025-04-03 19:05:20.023).` "}
{"level":"error","message":"Date & Time:- 2025-04-03T19:08:30.692Z POST 0.7940902709960938 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (133146, null, 2025-04-03, 2025-04-03 19:08:30.688, null, 0, 1, 2025-04-03 19:08:30.678, 2025-04-03 19:08:30.678).` "}
{"level":"error","message":"Date & Time:- 2025-04-04T08:50:54.795Z POST 0.8431320190429688 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (133148, null, 2025-04-04, 2025-04-04 08:50:54.658, null, 0, 1, 2025-04-04 08:50:55.026, 2025-04-04 08:50:55.026).` "}
{"level":"error","message":"Date & Time:- 2025-04-04T09:04:25.766Z POST 1.9012908935546875 /api/hrms/v1/employee/create status = false, err = \"emp_image\" must be a string "}
{"level":"error","message":"Date & Time:- 2025-04-04T09:48:21.400Z POST 1.171243667602539 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (133149, null, 2025-04-04, 2025-04-04 09:48:21.263, null, 0, 1, 2025-04-04 09:48:21.321, 2025-04-04 09:48:21.321).` "}
{"level":"error","message":"Date & Time:- 2025-04-04T15:25:19.101Z POST 0.8911495208740234 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (133150, null, 2025-04-04, 2025-04-04 15:25:18.985, null, 0, 1, 2025-04-04 15:25:19.08, 2025-04-04 15:25:19.08).` "}
{"level":"error","message":"Date & Time:- 2025-04-04T15:25:28.917Z POST 0.8233470916748047 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (133151, null, 2025-04-04, 2025-04-04 15:25:28.913, null, 0, 1, 2025-04-04 15:25:28.896, 2025-04-04 15:25:28.896).` "}
{"level":"error","message":"Date & Time:- 2025-04-04T15:26:15.944Z POST 0.29504966735839844 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (133152, null, 2025-04-04, 2025-04-04 15:26:15.941, null, 0, 1, 2025-04-04 15:26:15.925, 2025-04-04 15:26:15.925).` "}
{"level":"error","message":"Date & Time:- 2025-04-04T15:26:27.286Z POST 0.9489231109619141 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (133153, null, 2025-04-04, 2025-04-04 15:26:27.282, null, 0, 1, 2025-04-04 15:26:27.265, 2025-04-04 15:26:27.265).` "}
{"level":"error","message":"Date & Time:- 2025-04-08T07:04:19.414Z POST 14.55543401837349 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (138622, null, 2025-04-08, 2025-04-08 07:04:19.248, null, 0, 1, 2025-04-08 07:04:19.39, 2025-04-08 07:04:19.39).` "}
{"level":"error","message":"Date & Time:- 2025-04-09T05:45:12.385Z POST 1.05800199508667 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (140423, null, 2025-04-09, 2025-04-09 05:45:12.245, null, 0, 1, 2025-04-09 05:45:12.392, 2025-04-09 05:45:12.392).` "}
{"level":"error","message":"Date & Time:- 2025-04-09T10:23:47.481Z POST 0.9248649775981903 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (140424, null, 2025-04-09, 2025-04-09 10:23:47.344, null, 0, 1, 2025-04-09 10:23:47.496, 2025-04-09 10:23:47.496).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T05:10:50.734Z POST 14.405471995472908 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149425, null, 2025-04-14, 2025-04-14 05:10:50.566, null, 0, 1, 2025-04-14 05:10:50.72, 2025-04-14 05:10:50.72).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T05:41:58.113Z POST 0.40180298686027527 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149426, null, 2025-04-14, 2025-04-14 05:41:57.979, null, 0, 1, 2025-04-14 05:41:58.112, 2025-04-14 05:41:58.112).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T08:13:48.227Z POST 0.8396150022745132 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149427, null, 2025-04-14, 2025-04-14 08:13:48.109, null, 0, 1, 2025-04-14 08:13:48.223, 2025-04-14 08:13:48.223).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T08:17:38.209Z POST 0.8517560064792633 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149428, null, 2025-04-14, 2025-04-14 08:17:38.204, null, 0, 1, 2025-04-14 08:17:38.203, 2025-04-14 08:17:38.203).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T08:20:37.177Z POST 0.8640909940004349 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149429, null, 2025-04-14, 2025-04-14 08:20:37.171, null, 0, 1, 2025-04-14 08:20:37.168, 2025-04-14 08:20:37.168).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T08:23:08.736Z POST 0.8229160010814667 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149430, null, 2025-04-14, 2025-04-14 08:23:08.731, null, 0, 1, 2025-04-14 08:23:08.726, 2025-04-14 08:23:08.726).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T08:28:29.897Z POST 0.8648469895124435 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149431, null, 2025-04-14, 2025-04-14 08:28:29.761, null, 0, 1, 2025-04-14 08:28:29.887, 2025-04-14 08:28:29.887).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T08:30:35.984Z POST 0.8350300043821335 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149432, null, 2025-04-14, 2025-04-14 08:30:35.979, null, 0, 1, 2025-04-14 08:30:35.974, 2025-04-14 08:30:35.974).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T09:17:54.717Z POST 1.1994370073080063 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149433, null, 2025-04-14, 2025-04-14 09:17:54.58, null, 0, 1, 2025-04-14 09:17:54.698, 2025-04-14 09:17:54.698).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T09:24:34.967Z POST 0.8303139954805374 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149434, null, 2025-04-14, 2025-04-14 09:24:34.963, null, 0, 1, 2025-04-14 09:24:34.936, 2025-04-14 09:24:34.936).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T09:25:24.104Z POST 0.8269159942865372 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149435, null, 2025-04-14, 2025-04-14 09:25:24.1, null, 0, 1, 2025-04-14 09:25:24.072, 2025-04-14 09:25:24.072).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T09:26:09.472Z POST 0.8101449906826019 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149436, null, 2025-04-14, 2025-04-14 09:26:09.467, null, 0, 1, 2025-04-14 09:26:09.439, 2025-04-14 09:26:09.439).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T09:26:33.400Z POST 0.8283260017633438 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149437, null, 2025-04-14, 2025-04-14 09:26:33.396, null, 0, 1, 2025-04-14 09:26:33.367, 2025-04-14 09:26:33.367).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T09:27:28.597Z POST 0.8067160099744797 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149438, null, 2025-04-14, 2025-04-14 09:27:28.593, null, 0, 1, 2025-04-14 09:27:28.563, 2025-04-14 09:27:28.563).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T09:29:02.268Z POST 0.7967929989099503 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149439, null, 2025-04-14, 2025-04-14 09:29:02.264, null, 0, 1, 2025-04-14 09:29:02.232, 2025-04-14 09:29:02.232).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T09:31:24.552Z POST 0.7914340049028397 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149440, null, 2025-04-14, 2025-04-14 09:31:24.547, null, 0, 1, 2025-04-14 09:31:24.513, 2025-04-14 09:31:24.513).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T09:35:02.227Z POST 0.8243180066347122 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149441, null, 2025-04-14, 2025-04-14 09:35:02.223, null, 0, 1, 2025-04-14 09:35:02.185, 2025-04-14 09:35:02.185).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T09:43:26.217Z POST 0.9842450022697449 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149442, null, 2025-04-14, 2025-04-14 09:43:26.081, null, 0, 1, 2025-04-14 09:43:26.171, 2025-04-14 09:43:26.171).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T09:48:19.645Z POST 0.9014620035886765 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149443, null, 2025-04-14, 2025-04-14 09:48:19.641, null, 0, 1, 2025-04-14 09:48:19.597, 2025-04-14 09:48:19.597).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T09:50:27.014Z POST 0.8123589903116226 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149444, null, 2025-04-14, 2025-04-14 09:50:27.01, null, 0, 1, 2025-04-14 09:50:26.965, 2025-04-14 09:50:26.965).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T09:51:31.522Z POST 0.8235799968242645 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149445, null, 2025-04-14, 2025-04-14 09:51:31.517, null, 0, 1, 2025-04-14 09:51:31.472, 2025-04-14 09:51:31.472).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T09:57:14.392Z POST 0.8413479924201965 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149446, null, 2025-04-14, 2025-04-14 09:57:14.255, null, 0, 1, 2025-04-14 09:57:14.339, 2025-04-14 09:57:14.339).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T10:02:40.409Z POST 1.0273029953241348 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149447, null, 2025-04-14, 2025-04-14 10:02:40.271, null, 0, 1, 2025-04-14 10:02:40.353, 2025-04-14 10:02:40.353).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T10:07:43.532Z POST 0.9229760020971298 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149448, null, 2025-04-14, 2025-04-14 10:07:43.41, null, 0, 1, 2025-04-14 10:07:43.474, 2025-04-14 10:07:43.474).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T10:15:00.434Z POST 0.8334950059652328 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149449, null, 2025-04-14, 2025-04-14 10:15:00.325, null, 0, 1, 2025-04-14 10:15:00.418, 2025-04-14 10:15:00.418).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T10:22:08.954Z POST 0.8330250084400177 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149450, null, 2025-04-14, 2025-04-14 10:22:08.823, null, 0, 1, 2025-04-14 10:22:08.968, 2025-04-14 10:22:08.968).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T10:28:08.244Z POST 0.8291249871253967 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149451, null, 2025-04-14, 2025-04-14 10:28:08.143, null, 0, 1, 2025-04-14 10:28:08.307, 2025-04-14 10:28:08.307).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T10:37:28.420Z POST 0.8234640061855316 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149452, null, 2025-04-14, 2025-04-14 10:37:28.35, null, 0, 1, 2025-04-14 10:37:28.526, 2025-04-14 10:37:28.526).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T10:46:07.377Z POST 0.862640991806984 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149453, null, 2025-04-14, 2025-04-14 10:46:07.248, null, 0, 1, 2025-04-14 10:46:07.507, 2025-04-14 10:46:07.507).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T10:52:40.669Z POST 0.8423529863357544 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149454, null, 2025-04-14, 2025-04-14 10:52:40.535, null, 0, 1, 2025-04-14 10:52:40.815, 2025-04-14 10:52:40.815).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T10:58:27.702Z POST 0.3667210042476654 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149455, null, 2025-04-14, 2025-04-14 10:58:27.568, null, 0, 1, 2025-04-14 10:58:27.856, 2025-04-14 10:58:27.856).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T11:06:12.870Z POST 0.31396299600601196 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149456, null, 2025-04-14, 2025-04-14 11:06:12.734, null, 0, 1, 2025-04-14 11:06:12.908, 2025-04-14 11:06:12.908).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T11:12:27.472Z POST 0.834319993853569 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149457, null, 2025-04-14, 2025-04-14 11:12:27.401, null, 0, 1, 2025-04-14 11:12:27.468, 2025-04-14 11:12:27.468).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T11:42:25.501Z POST 0.8350619971752167 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149458, null, 2025-04-14, 2025-04-14 11:42:25.378, null, 0, 1, 2025-04-14 11:42:25.442, 2025-04-14 11:42:25.442).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T11:49:09.371Z POST 0.8071680068969727 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149459, null, 2025-04-14, 2025-04-14 11:49:09.257, null, 0, 1, 2025-04-14 11:49:09.296, 2025-04-14 11:49:09.296).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T12:04:03.549Z POST 0.9193270057439804 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149460, null, 2025-04-14, 2025-04-14 12:04:03.413, null, 0, 1, 2025-04-14 12:04:03.521, 2025-04-14 12:04:03.521).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T12:11:55.423Z POST 0.8920329958200455 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149461, null, 2025-04-14, 2025-04-14 12:11:55.287, null, 0, 1, 2025-04-14 12:11:55.395, 2025-04-14 12:11:55.395).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T12:23:13.926Z POST 0.9284479916095734 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149462, null, 2025-04-14, 2025-04-14 12:23:13.791, null, 0, 1, 2025-04-14 12:23:13.889, 2025-04-14 12:23:13.889).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T12:30:44.515Z POST 0.7874599993228912 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149463, null, 2025-04-14, 2025-04-14 12:30:44.39, null, 0, 1, 2025-04-14 12:30:44.492, 2025-04-14 12:30:44.492).` "}
{"level":"error","message":"Date & Time:- 2025-04-14T12:41:03.149Z POST 0.9160269945859909 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (149464, null, 2025-04-14, 2025-04-14 12:41:03.012, null, 0, 1, 2025-04-14 12:41:03.133, 2025-04-14 12:41:03.133).` "}
{"level":"error","message":"Date & Time:- 2025-04-15T05:11:01.459Z POST 0.8800920248031616 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (151385, null, 2025-04-15, 2025-04-15 05:11:01.321, null, 0, 1, 2025-04-15 05:11:01.458, 2025-04-15 05:11:01.458).` "}
{"level":"error","message":"Date & Time:- 2025-04-15T05:30:41.849Z POST 0.858814001083374 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (151386, null, 2025-04-15, 2025-04-15 05:30:41.715, null, 0, 1, 2025-04-15 05:30:41.847, 2025-04-15 05:30:41.847).` "}
{"level":"error","message":"Date & Time:- 2025-04-15T05:37:14.426Z POST 0.5194610059261322 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (151387, null, 2025-04-15, 2025-04-15 05:37:14.421, null, 0, 1, 2025-04-15 05:37:14.426, 2025-04-15 05:37:14.426).` "}
{"level":"error","message":"Date & Time:- 2025-04-15T05:44:29.987Z POST 0.7813380062580109 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (151388, null, 2025-04-15, 2025-04-15 05:44:29.982, null, 0, 1, 2025-04-15 05:44:29.988, 2025-04-15 05:44:29.988).` "}
{"level":"error","message":"Date & Time:- 2025-04-15T05:44:58.395Z POST 0.771776020526886 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (151389, null, 2025-04-15, 2025-04-15 05:44:58.39, null, 0, 1, 2025-04-15 05:44:58.396, 2025-04-15 05:44:58.396).` "}
{"level":"error","message":"Date & Time:- 2025-04-15T05:48:21.358Z POST 0.782831996679306 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (151390, null, 2025-04-15, 2025-04-15 05:48:21.354, null, 0, 1, 2025-04-15 05:48:21.361, 2025-04-15 05:48:21.361).` "}
{"level":"error","message":"Date & Time:- 2025-04-15T05:51:14.847Z POST 0.7741909921169281 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (151391, null, 2025-04-15, 2025-04-15 05:51:14.843, null, 0, 1, 2025-04-15 05:51:14.85, 2025-04-15 05:51:14.85).` "}
{"level":"error","message":"Date & Time:- 2025-04-15T05:59:46.105Z POST 0.8112930059432983 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (151392, null, 2025-04-15, 2025-04-15 05:59:46.1, null, 0, 1, 2025-04-15 05:59:46.108, 2025-04-15 05:59:46.108).` "}
{"level":"error","message":"Date & Time:- 2025-04-15T07:50:17.819Z POST 0.35928499698638916 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (151393, null, 2025-04-15, 2025-04-15 07:50:17.693, null, 0, 1, 2025-04-15 07:50:17.804, 2025-04-15 07:50:17.804).` "}
{"level":"error","message":"Date & Time:- 2025-04-15T09:38:34.656Z POST 0.80799800157547 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (151394, null, 2025-04-15, 2025-04-15 09:38:34.65, null, 0, 1, 2025-04-15 09:38:34.651, 2025-04-15 09:38:34.651).` "}
{"level":"error","message":"Date & Time:- 2025-04-15T11:24:28.639Z POST 0.781821995973587 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (151395, null, 2025-04-15, 2025-04-15 11:24:28.585, null, 0, 1, 2025-04-15 11:24:28.615, 2025-04-15 11:24:28.615).` "}
{"level":"error","message":"Date & Time:- 2025-04-15T11:25:34.167Z POST 0.7590039968490601 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (151396, null, 2025-04-15, 2025-04-15 11:25:34.163, null, 0, 1, 2025-04-15 11:25:34.186, 2025-04-15 11:25:34.186).` "}
{"level":"error","message":"Date & Time:- 2025-04-15T11:42:16.197Z POST 0.8004159927368164 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (151397, null, 2025-04-15, 2025-04-15 11:42:16.192, null, 0, 1, 2025-04-15 11:42:16.218, 2025-04-15 11:42:16.218).` "}
{"level":"error","message":"Date & Time:- 2025-04-15T11:51:57.114Z POST 0.8095180094242096 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (151398, null, 2025-04-15, 2025-04-15 11:51:56.977, null, 0, 1, 2025-04-15 11:51:57.123, 2025-04-15 11:51:57.123).` "}
{"level":"error","message":"Date & Time:- 2025-04-15T12:00:20.688Z POST 0.3502810001373291 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (151399, null, 2025-04-15, 2025-04-15 12:00:20.553, null, 0, 1, 2025-04-15 12:00:20.693, 2025-04-15 12:00:20.693).` "}
{"level":"error","message":"Date & Time:- 2025-04-15T12:18:30.513Z POST 0.8120450079441071 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (151400, null, 2025-04-15, 2025-04-15 12:18:30.378, null, 0, 1, 2025-04-15 12:18:30.5, 2025-04-15 12:18:30.5).` "}
{"level":"error","message":"Date & Time:- 2025-04-15T12:26:16.236Z POST 0.7637979984283447 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (151401, null, 2025-04-15, 2025-04-15 12:26:16.23, null, 0, 1, 2025-04-15 12:26:16.201, 2025-04-15 12:26:16.201).` "}
{"level":"error","message":"Date & Time:- 2025-04-15T12:35:35.502Z POST 0.7674210071563721 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (151402, null, 2025-04-15, 2025-04-15 12:35:35.495, null, 0, 1, 2025-04-15 12:35:35.451, 2025-04-15 12:35:35.451).` "}
{"level":"error","message":"Date & Time:- 2025-04-15T12:42:35.068Z POST 0.7563610076904297 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (151403, null, 2025-04-15, 2025-04-15 12:42:35.062, null, 0, 1, 2025-04-15 12:42:35.011, 2025-04-15 12:42:35.011).` "}
{"level":"error","message":"Date & Time:- 2025-04-16T06:17:56.821Z POST 0.8446939885616302 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (154284, null, 2025-04-16, 2025-04-16 06:17:56.683, null, 0, 1, 2025-04-16 06:17:56.839, 2025-04-16 06:17:56.839).` "}
{"level":"error","message":"Date & Time:- 2025-04-16T12:08:09.350Z POST 0.5993630290031433 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (154285, null, 2025-04-16, 2025-04-16 12:08:09.213, null, 0, 1, 2025-04-16 12:08:09.345, 2025-04-16 12:08:09.345).` "}
{"level":"error","message":"Date & Time:- 2025-04-23T16:51:49.068Z POST 0.8093339204788208 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (174398, null, 2025-04-23, 2025-04-23 16:51:48.931, null, 0, 1, 2025-04-23 16:51:49.056, 2025-04-23 16:51:49.056).` "}
{"level":"error","message":"Date & Time:- 2025-04-23T16:53:39.793Z POST 0.8343019485473633 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (174400, null, 2025-04-23, 2025-04-23 16:53:39.787, null, 0, 1, 2025-04-23 16:53:39.782, 2025-04-23 16:53:39.782).` "}
{"level":"error","message":"Date & Time:- 2025-04-25T10:56:09.887Z POST 0.8732689619064331 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (180101, null, 2025-04-25, 2025-04-25 10:56:09.751, null, 0, 1, 2025-04-25 10:56:09.891, 2025-04-25 10:56:09.891).` "}
{"level":"error","message":"Date & Time:- 2025-04-29T06:06:31.600Z POST 0.8770837783813477 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (191574, null, 2025-04-29, 2025-04-29 06:06:31.463, null, 0, 1, 2025-04-29 06:06:31.612, 2025-04-29 06:06:31.612).` "}
{"level":"error","message":"Date & Time:- 2025-04-29T06:16:11.952Z POST 2.2749481201171875 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/var/www/html/JuidcoHrms/backend/build/src/component/juidcoHrms/dao/empOnBoard.dao.js:57:40\n\n  54     return await tx[tableName].createMany({ data });\n  55 }\n  56 else {\n→ 57     return await tx[tableName].create({\n           data: {\n             address_primary: \"Tech Park\",\n             address_secondary: \"Mmtec,namkum\",\n             village: \"Namkum\",\n             post_office: \"Namkum\",\n             state: \"Jharkhand\",\n             district: 1000,\n             block_ulb: \"Ranchi (Nagar Nigam)\",\n             pin_code: \"834001\",\n             police_station: \"Namkum\",\n             emp_address_same: \"yes\",\n             address_primary_permanent: \"Bar\",\n             address_secondary_permanent: \"Flat\",\n             block_ulb_permanent: \"Ranchi (Nagar Nigam)\",\n             district_permanent: 1013,\n                                 ~~~~\n             pin_code_permanent: \"834001\",\n             police_station_permanent: \"Bar\",\n             post_office_permanent: \"Bar\",\n             state_permanent: null,\n             village_permanent: \"Jamshedpur\"\n           }\n         })\n\nArgument `district_permanent`: Invalid value provided. Expected String or Null, provided Int. "}
{"level":"error","message":"Date & Time:- 2025-04-29T06:17:04.110Z POST 0.32317113876342773 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (191575, null, 2025-04-29, 2025-04-29 06:17:04.005, null, 0, 1, 2025-04-29 06:17:04.133, 2025-04-29 06:17:04.133).` "}
{"level":"error","message":"Date & Time:- 2025-04-29T06:26:43.607Z POST 2.763826847076416 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/var/www/html/JuidcoHrms/backend/build/src/component/juidcoHrms/dao/empOnBoard.dao.js:57:40\n\n  54     return await tx[tableName].createMany({ data });\n  55 }\n  56 else {\n→ 57     return await tx[tableName].create({\n           data: {\n             address_primary: \"Tech Park\",\n             address_secondary: \"Mmtec,namkum\",\n             village: \"Namkum\",\n             post_office: \"Namkum\",\n             state: \"Jharkhand\",\n             district: 1000,\n             block_ulb: \"Ranchi (Nagar Nigam)\",\n             pin_code: \"834001\",\n             police_station: \"Namkum\",\n             emp_address_same: \"yes\",\n             address_primary_permanent: \"Bar\",\n             address_secondary_permanent: \"Flat\",\n             block_ulb_permanent: \"Ranchi (Nagar Nigam)\",\n             district_permanent: 1013,\n                                 ~~~~\n             pin_code_permanent: \"834001\",\n             police_station_permanent: \"Bar\",\n             post_office_permanent: \"Bar\",\n             state_permanent: null,\n             village_permanent: \"Jamshedpur\"\n           }\n         })\n\nArgument `district_permanent`: Invalid value provided. Expected String or Null, provided Int. "}
{"level":"error","message":"Date & Time:- 2025-04-29T06:43:17.835Z POST 0.8155560493469238 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (191576, null, 2025-04-29, 2025-04-29 06:43:17.697, null, 0, 1, 2025-04-29 06:43:17.873, 2025-04-29 06:43:17.873).` "}
{"level":"error","message":"Date & Time:- 2025-04-29T06:52:58.463Z POST 1.8647308349609375 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/var/www/html/JuidcoHrms/backend/build/src/component/juidcoHrms/dao/empOnBoard.dao.js:57:40\n\n  54     return await tx[tableName].createMany({ data });\n  55 }\n  56 else {\n→ 57     return await tx[tableName].create({\n           data: {\n             address_primary: \"Tech Park\",\n             address_secondary: \"Mmtec,namkum\",\n             village: \"Namkum\",\n             post_office: \"Namkum\",\n             state: \"Jharkhand\",\n             district: 1000,\n             block_ulb: \"Ranchi (Nagar Nigam)\",\n             pin_code: \"834001\",\n             police_station: \"Namkum\",\n             emp_address_same: \"yes\",\n             address_primary_permanent: \"Bar\",\n             address_secondary_permanent: \"Flat\",\n             block_ulb_permanent: \"Ranchi (Nagar Nigam)\",\n             district_permanent: 1013,\n                                 ~~~~\n             pin_code_permanent: \"834001\",\n             police_station_permanent: \"Bar\",\n             post_office_permanent: \"Bar\",\n             state_permanent: null,\n             village_permanent: \"Jamshedpur\"\n           }\n         })\n\nArgument `district_permanent`: Invalid value provided. Expected String or Null, provided Int. "}
{"level":"error","message":"Date & Time:- 2025-04-29T06:56:20.460Z POST 0.7945029735565186 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (191577, null, 2025-04-29, 2025-04-29 06:56:20.326, null, 0, 1, 2025-04-29 06:56:20.481, 2025-04-29 06:56:20.481).` "}
{"level":"error","message":"Date & Time:- 2025-04-29T07:06:00.296Z POST 2.015720844268799 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/var/www/html/JuidcoHrms/backend/build/src/component/juidcoHrms/dao/empOnBoard.dao.js:57:40\n\n  54     return await tx[tableName].createMany({ data });\n  55 }\n  56 else {\n→ 57     return await tx[tableName].create({\n           data: {\n             address_primary: \"Tech Park\",\n             address_secondary: \"Mmtec,namkum\",\n             village: \"Namkum\",\n             post_office: \"Namkum\",\n             state: \"Jharkhand\",\n             district: 1000,\n             block_ulb: \"Ranchi (Nagar Nigam)\",\n             pin_code: \"834001\",\n             police_station: \"Namkum\",\n             emp_address_same: \"yes\",\n             address_primary_permanent: \"Bar\",\n             address_secondary_permanent: \"Flat\",\n             block_ulb_permanent: \"Ranchi (Nagar Nigam)\",\n             district_permanent: 1013,\n                                 ~~~~\n             pin_code_permanent: \"834001\",\n             police_station_permanent: \"Bar\",\n             post_office_permanent: \"Bar\",\n             state_permanent: null,\n             village_permanent: \"Jamshedpur\"\n           }\n         })\n\nArgument `district_permanent`: Invalid value provided. Expected String or Null, provided Int. "}
{"level":"error","message":"Date & Time:- 2025-04-29T07:15:36.148Z POST 0.9716179370880127 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (191578, null, 2025-04-29, 2025-04-29 07:15:36.017, null, 0, 1, 2025-04-29 07:15:36.143, 2025-04-29 07:15:36.143).` "}
{"level":"error","message":"Date & Time:- 2025-04-29T07:25:15.413Z POST 1.9562900066375732 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/var/www/html/JuidcoHrms/backend/build/src/component/juidcoHrms/dao/empOnBoard.dao.js:57:40\n\n  54     return await tx[tableName].createMany({ data });\n  55 }\n  56 else {\n→ 57     return await tx[tableName].create({\n           data: {\n             address_primary: \"Tech Park\",\n             address_secondary: \"Mmtec,namkum\",\n             village: \"Namkum\",\n             post_office: \"Namkum\",\n             state: \"Jharkhand\",\n             district: 1000,\n             block_ulb: \"Ranchi (Nagar Nigam)\",\n             pin_code: \"834001\",\n             police_station: \"Namkum\",\n             emp_address_same: \"yes\",\n             address_primary_permanent: \"Bar\",\n             address_secondary_permanent: \"Flat\",\n             block_ulb_permanent: \"Ranchi (Nagar Nigam)\",\n             district_permanent: 1013,\n                                 ~~~~\n             pin_code_permanent: \"834001\",\n             police_station_permanent: \"Bar\",\n             post_office_permanent: \"Bar\",\n             state_permanent: null,\n             village_permanent: \"Jamshedpur\"\n           }\n         })\n\nArgument `district_permanent`: Invalid value provided. Expected String or Null, provided Int. "}
{"level":"error","message":"Date & Time:- 2025-04-29T07:27:24.413Z POST 0.8748009204864502 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (191579, null, 2025-04-29, 2025-04-29 07:27:24.275, null, 0, 1, 2025-04-29 07:27:24.372, 2025-04-29 07:27:24.372).` "}
{"level":"error","message":"Date & Time:- 2025-04-29T07:37:03.818Z POST 2.076119899749756 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/var/www/html/JuidcoHrms/backend/build/src/component/juidcoHrms/dao/empOnBoard.dao.js:57:40\n\n  54     return await tx[tableName].createMany({ data });\n  55 }\n  56 else {\n→ 57     return await tx[tableName].create({\n           data: {\n             address_primary: \"Tech Park\",\n             address_secondary: \"Mmtec,namkum\",\n             village: \"Namkum\",\n             post_office: \"Namkum\",\n             state: \"Jharkhand\",\n             district: 1000,\n             block_ulb: \"Ranchi (Nagar Nigam)\",\n             pin_code: \"834001\",\n             police_station: \"Namkum\",\n             emp_address_same: \"yes\",\n             address_primary_permanent: \"Bar\",\n             address_secondary_permanent: \"Flat\",\n             block_ulb_permanent: \"Ranchi (Nagar Nigam)\",\n             district_permanent: 1013,\n                                 ~~~~\n             pin_code_permanent: \"834001\",\n             police_station_permanent: \"Bar\",\n             post_office_permanent: \"Bar\",\n             state_permanent: null,\n             village_permanent: \"Jamshedpur\"\n           }\n         })\n\nArgument `district_permanent`: Invalid value provided. Expected String or Null, provided Int. "}
{"level":"error","message":"Date & Time:- 2025-04-29T07:46:02.364Z POST 0.7757670879364014 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (191580, null, 2025-04-29, 2025-04-29 07:46:02.279, null, 0, 1, 2025-04-29 07:46:02.194, 2025-04-29 07:46:02.194).` "}
{"level":"error","message":"Date & Time:- 2025-04-29T07:55:46.692Z POST 1.8103489875793457 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/var/www/html/JuidcoHrms/backend/build/src/component/juidcoHrms/dao/empOnBoard.dao.js:57:40\n\n  54     return await tx[tableName].createMany({ data });\n  55 }\n  56 else {\n→ 57     return await tx[tableName].create({\n           data: {\n             address_primary: \"Tech Park\",\n             address_secondary: \"Mmtec,namkum\",\n             village: \"Namkum\",\n             post_office: \"Namkum\",\n             state: \"Jharkhand\",\n             district: 1000,\n             block_ulb: \"Ranchi (Nagar Nigam)\",\n             pin_code: \"834001\",\n             police_station: \"Namkum\",\n             emp_address_same: \"yes\",\n             address_primary_permanent: \"Bar\",\n             address_secondary_permanent: \"Flat\",\n             block_ulb_permanent: \"Ranchi (Nagar Nigam)\",\n             district_permanent: 1013,\n                                 ~~~~\n             pin_code_permanent: \"834001\",\n             police_station_permanent: \"Bar\",\n             post_office_permanent: \"Bar\",\n             state_permanent: null,\n             village_permanent: \"Jamshedpur\"\n           }\n         })\n\nArgument `district_permanent`: Invalid value provided. Expected String or Null, provided Int. "}
{"level":"error","message":"Date & Time:- 2025-04-29T08:13:20.089Z POST 1.8188860416412354 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/var/www/html/JuidcoHrms/backend/build/src/component/juidcoHrms/dao/empOnBoard.dao.js:57:40\n\n  54     return await tx[tableName].createMany({ data });\n  55 }\n  56 else {\n→ 57     return await tx[tableName].create({\n           data: {\n             address_primary: \"Tech Park\",\n             address_secondary: \"Mmtec,namkum\",\n             village: \"Namkum\",\n             post_office: \"Namkum\",\n             state: \"Jharkhand\",\n             district: 1000,\n             block_ulb: \"Ranchi (Nagar Nigam)\",\n             pin_code: \"834001\",\n             police_station: \"Namkum\",\n             emp_address_same: \"yes\",\n             address_primary_permanent: \"Bar\",\n             address_secondary_permanent: \"Flat\",\n             block_ulb_permanent: \"Ranchi (Nagar Nigam)\",\n             district_permanent: 1013,\n                                 ~~~~\n             pin_code_permanent: \"834001\",\n             police_station_permanent: \"Bar\",\n             post_office_permanent: \"Bar\",\n             state_permanent: null,\n             village_permanent: \"Jamshedpur\"\n           }\n         })\n\nArgument `district_permanent`: Invalid value provided. Expected String or Null, provided Int. "}
{"level":"error","message":"Date & Time:- 2025-04-29T08:13:33.721Z POST 1.8200771808624268 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/var/www/html/JuidcoHrms/backend/build/src/component/juidcoHrms/dao/empOnBoard.dao.js:57:40\n\n  54     return await tx[tableName].createMany({ data });\n  55 }\n  56 else {\n→ 57     return await tx[tableName].create({\n           data: {\n             address_primary: \"Tech Park\",\n             address_secondary: \"Mmtec,namkum\",\n             village: \"Namkum\",\n             post_office: \"Namkum\",\n             state: \"Jharkhand\",\n             district: 1000,\n             block_ulb: \"Ranchi (Nagar Nigam)\",\n             pin_code: \"834001\",\n             police_station: \"Namkum\",\n             emp_address_same: \"yes\",\n             address_primary_permanent: \"Bar\",\n             address_secondary_permanent: \"Flat\",\n             block_ulb_permanent: \"Ranchi (Nagar Nigam)\",\n             district_permanent: 1013,\n                                 ~~~~\n             pin_code_permanent: \"834001\",\n             police_station_permanent: \"Bar\",\n             post_office_permanent: \"Bar\",\n             state_permanent: null,\n             village_permanent: \"Jamshedpur\"\n           }\n         })\n\nArgument `district_permanent`: Invalid value provided. Expected String or Null, provided Int. "}
{"level":"error","message":"Date & Time:- 2025-06-04T11:31:46.946Z POST 18.527386903762817 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (277912, null, 2025-06-04, 2025-06-04 11:31:46.777, null, 0, 1, 2025-06-04 11:31:46.908, 2025-06-04 11:31:46.908).` "}
{"level":"error","message":"Date & Time:- 2025-06-04T11:34:37.172Z POST 6.609669923782349 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (277913, null, 2025-06-04, 2025-06-04 11:34:37.161, null, 0, 1, 2025-06-04 11:34:37.159, 2025-06-04 11:34:37.159).` "}
=======
{"level":"error","message":"Date & Time:- 2025-04-02T08:20:57.751Z POST 80.47579997777939 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (124203, null, 2025-04-02, 2025-04-02 13:50:56.429, null, 0, 1, 2025-04-02 13:50:57.494, 2025-04-02 13:50:57.494).` "}
{"level":"error","message":"Date & Time:- 2025-04-02T08:25:54.284Z POST 5.910599946975708 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (124204, null, 2025-04-02, 2025-04-02 13:55:54.241, null, 0, 1, 2025-04-02 13:55:54.271, 2025-04-02 13:55:54.271).` "}
{"level":"error","message":"Date & Time:- 2025-04-16T08:19:02.194Z POST 0.6992999911308289 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (124206, null, 2025-04-16, 2025-04-16 13:49:01.988, null, 0, 1, 2025-04-16 13:49:01.992, 2025-04-16 13:49:01.992).` "}
>>>>>>> refs/remotes/origin/main
{"level":"error","message":"Date & Time:- 2025-06-24T12:13:21.033Z GET 5.573400000001129 /api/hrms/v1/employee/attendance/count-daily status = false, err = Cannot destructure property 'ulb_id' of 'req.body.auth' as it is undefined. "}
{"level":"error","message":"Date & Time:- 2025-06-24T12:15:34.911Z GET 5.933299999996962 /api/hrms/v1/employee/attendance/count-daily status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nThe provided database string is invalid. Error parsing connection string: invalid port number in database URL. Please refer to the documentation in https://www.prisma.io/docs/reference/database-reference/connection-urls for constructing a correct connection string. In some cases, certain characters must be escaped. Please check the string for any illegal characters. "}
{"level":"error","message":"Date & Time:- 2025-06-24T12:16:34.164Z GET 3.1261000000085915 /api/hrms/v1/master/district status = false, err = \nInvalid `prisma.district.findMany()` invocation in\nD:\\hrms\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\master\\district.dao.ts:8:40\n\n  5 \n  6 class DistrictDao {\n  7   get = async () => {\n→ 8     const data = await prisma.district.findMany(\nThe provided database string is invalid. Error parsing connection string: invalid port number in database URL. Please refer to the documentation in https://www.prisma.io/docs/reference/database-reference/connection-urls for constructing a correct connection string. In some cases, certain characters must be escaped. Please check the string for any illegal characters. "}
{"level":"error","message":"Date & Time:- 2025-07-02T11:13:23.048Z POST 13.914199999999255 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (16, null, 2025-07-02, 2025-07-02 16:43:22.513, null, 0, 1, 2025-07-02 16:43:23.022, 2025-07-02 16:43:23.022).` "}
{"level":"error","message":"Date & Time:- 2025-07-03T08:07:30.572Z POST 13.223200000007637 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (5, null, 2025-07-03, 2025-07-03 13:37:29.696, null, 0, 1, 2025-07-03 13:37:30.467, 2025-07-03 13:37:30.467).` "}
{"level":"error","message":"Date & Time:- 2025-07-04T10:19:51.541Z POST 0.5511999999871477 /api/hrms/v1/employee/leave-update status = false, err = \nInvalid `tx.employee_leave_type.findFirst()` invocation in\nC:\\Users\\aadrika\\Desktop\\HRMS\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\employee\\empLeave.dao.ts:260:59\n\n  257 if (leave_status === 1) {\n  258   let updateFields = `tot_bal_leave_year = tot_leave_allow_year - ${`(tot_prev_leave_approv + ${total_days})`} , tot_prev_leave_approv = tot_prev_leave_approv + ${total_days}`;\n  259   if (leave_type) {\n→ 260     const leave: any = await tx.employee_leave_type.findFirst({\n            where: {\n              id: \"Sick Leave\"\n                  ~~~~~~~~~~~~\n            }\n          })\n\nArgument `id`: Invalid value provided. Expected IntFilter or Int, provided String. "}
{"level":"error","message":"Date & Time:- 2025-07-04T10:22:47.227Z POST 0.6117999999551103 /api/hrms/v1/employee/leave-update status = false, err = \nInvalid `tx.employee_leave_type.findFirst()` invocation in\nC:\\Users\\aadrika\\Desktop\\HRMS\\JuidcoHrms\\backend\\src\\component\\juidcoHrms\\dao\\employee\\empLeave.dao.ts:260:59\n\n  257 if (leave_status === 1) {\n  258   let updateFields = `tot_bal_leave_year = tot_leave_allow_year - ${`(tot_prev_leave_approv + ${total_days})`} , tot_prev_leave_approv = tot_prev_leave_approv + ${total_days}`;\n  259   if (leave_type) {\n→ 260     const leave: any = await tx.employee_leave_type.findFirst({\n            where: {\n              id: \"Sick Leave\"\n                  ~~~~~~~~~~~~\n            }\n          })\n\nArgument `id`: Invalid value provided. Expected IntFilter or Int, provided String. "}
