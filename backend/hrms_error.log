{"level":"error","message":"POST 0.5199629999988247 /api/v1/hrms/employee/create status = false, err = Cannot read properties of undefined (reading 'married_status') "}
{"level":"error","message":"POST 0.9226820000039879 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:42:34\n\n  39 if (isMany) {\n  40   return await tx[tableName].createMany({ data });\n  41 } else {\n→ 42   return await tx[tableName].create({\n         data: {\n           married_status: \"cw\",\n           identification_marks: \"Mole on left arm\",\n           emp_categories: \"we\",\n           emp_home_state: \"New York\",\n           emp_district: \"wce\",\n           emp_blood_group: \"cw\",\n           emp_health_status: \"cwe\",\n           emp_ltc_home_town: \"New York City\",\n           emp_nearest_railway_station: \"Grand Central Terminal\",\n           emp_phy_health_type: \"cwe\",\n           emp_family: \"cwe\",\n           emp_family_name: \"Smith\",\n           emp_office_name: \"XYZ Corporation\",\n           emp_org_name: \"ABC Corp\",\n           emp_lang: [\n             {\n               language: \"Hindi\",\n               emp_lang_do: [\n                 \"read\",\n                 \"write\",\n                 \"speak\"\n               ]\n             }\n           ],\n       +   religion: String\n         }\n       })\n\nArgument `religion` is missing. "}
{"level":"error","message":"GET 3.44422300000042 /api/v1/hrms/employee/get status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:268:24\n\n  265 }\n  266 \n  267 const [data, count] = await prisma.$transaction([\n→ 268   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            }\n          },\n          where: {\n            OR: [\n              {\n                emp_id: {\n                  equals: undefined,\n                  mode: \"insensitive\"\n                }\n              }\n            ]\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.6200150000004214 /api/v1/hrms/employee/get?page=1 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:268:24\n\n  265 }\n  266 \n  267 const [data, count] = await prisma.$transaction([\n→ 268   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            }\n          },\n          where: {\n            OR: [\n              {\n                emp_id: {\n                  equals: undefined,\n                  mode: \"insensitive\"\n                }\n              }\n            ]\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 3.657976000000417 /api/v1/hrms/employee/get?page=1 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_id: {\n                  equals: undefined,\n                  mode: \"insensitive\"\n                }\n              }\n            ]\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.6273360000050161 /api/v1/hrms/employee/get?page=1 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_id: {\n                  equals: undefined,\n                  mode: \"insensitive\"\n                }\n              }\n            ]\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.5864789999905042 /api/v1/hrms/employee/get?page=1&search=ad status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_id: {\n                  equals: undefined,\n                  mode: \"insensitive\"\n                }\n              }\n            ]\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.55528799998865 /api/v1/hrms/employee/get?page=1&search=ad&limit=10 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_id: {\n                  equals: undefined,\n                  mode: \"insensitive\"\n                }\n              }\n            ]\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 1.0686829999995098 /api/v1/hrms/employee/get?limit=10 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_id: {\n                  equals: undefined,\n                  mode: \"insensitive\"\n                }\n              }\n            ]\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"GET 0.6871499999979278 /api/v1/hrms/employee/get?limit=10&page=0 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -10\") "}
{"level":"error","message":"GET 3.9424279999993814 /api/v1/hrms/employee/get status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_id: {\n                  equals: undefined,\n                  mode: \"insensitive\"\n                }\n              }\n            ]\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 3.5851820000000316 /api/v1/hrms/employee/get status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.7983090000002449 /api/v1/hrms/employee/get status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"POST 0.6066739999987476 /api/v1/hrms/employee/create status = false, err = Cannot destructure property 'emp_education' of 'emp_education_details' as it is undefined. "}
{"level":"error","message":"GET 3.462735000000066 /api/v1/hrms/employee/count status = false, err = All elements of the array need to be Prisma Client promises. Hint: Please make sure you are not awaiting the Prisma client calls you intended to pass in the $transaction function. "}
{"level":"error","message":"POST 4.081206000000748 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:43:34\n\n  40 if (isMany) {\n  41   return await tx[tableName].createMany({ data });\n  42 } else {\n→ 43   return await tx[tableName].create({\n         data: {\n           office_name: \"XYZ123\",\n           office_code: \"XYZ123\",\n           ddo_code: \"DDO456\",\n           ddo_designation: \"Chief Officer\",\n           district: \"adc\",\n       +   emp_type: Int\n         }\n       })\n\nArgument `emp_type` is missing. "}
{"level":"error","message":"POST 0.6930579999971087 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:43:34\n\n  40 if (isMany) {\n  41   return await tx[tableName].createMany({ data });\n  42 } else {\n→ 43   return await tx[tableName].create({\n         data: {\n           office_name: \"XYZ123\",\n           office_code: \"XYZ123\",\n           ddo_code: \"DDO456\",\n           ddo_designation: \"Chief Officer\",\n           district: \"adc\",\n       +   emp_type: Int\n         }\n       })\n\nArgument `emp_type` is missing. "}
{"level":"error","message":"POST 0.587256000002526 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:43:34\n\n  40 if (isMany) {\n  41   return await tx[tableName].createMany({ data });\n  42 } else {\n→ 43   return await tx[tableName].create({\n         data: {\n           office_name: \"XYZ123\",\n           office_code: \"XYZ123\",\n           ddo_code: \"DDO456\",\n           ddo_designation: \"Chief Officer\",\n           district: \"adc\",\n       +   emp_type: Int\n         }\n       })\n\nArgument `emp_type` is missing. "}
{"level":"error","message":"POST 0.5084759999881499 /api/v1/hrms/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"POST 0.8433439999935217 /api/v1/hrms/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"POST 0.6224830000137445 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:43:34\n\n  40 if (isMany) {\n  41   return await tx[tableName].createMany({ data });\n  42 } else {\n→ 43   return await tx[tableName].create({\n         data: {\n           emp_image: \"path/to/image.jpg\",\n           emp_name: \"John Doe\",\n           mode_of_recruitment: \"casd\",\n           contact_no: \"123456789065\",\n           emg_contact_no: \"9876543210\",\n           aadhar_no: \"123456789012\",\n           epic_no: \"24233\",\n           gender: \"casd\",\n           pran: \"123456789012\",\n           emp_type: \"csdc\",\n           weight: \"70\",\n           height: \"175\",\n           cps: \"525\",\n           gps: \"5325\",\n           dob: \"1990-01-01T00:00:00.000Z\",\n       +   emp_id: String\n         }\n       })\n\nArgument `emp_id` is missing. "}
{"level":"error","message":"POST 0.40372199995908886 /api/v1/hrms/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"POST 0.37175299995578825 /api/v1/hrms/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"POST 0.8263690000021597 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:43:34\n\n  40 if (isMany) {\n  41   return await tx[tableName].createMany({ data });\n  42 } else {\n→ 43   return await tx[tableName].create({\n         data: {\n           department: \"software development\",\n                       ~~~~~~~~~~~~~~~~~~~~~~\n           designation: \"cwe\",\n           task: \"Project Management\",\n           class: null,\n           doj: \"2022-03-01\",\n           effective_pay_commision: \"cwe\",\n           confirmation_order: null,\n           pay_scale: 987,\n           pay_band: 98765,\n           grade_pay: 9876,\n           doc: null,\n           basic_pay: 4564,\n           conf_order_number: null,\n           deduction_type: \"cwe\",\n           conf_order_date: null,\n           member_gis: null,\n           appoint_authority: null,\n           gis_account: null,\n           ulb: null,\n           last_inc_order: null,\n           name_of_service: null,\n           last_inc_order_date: null,\n           bank_name: null,\n           wef_date: null,\n           branch_name: null,\n           pf_category: null,\n           acc_no: undefined,\n           ifsc: null,\n           sen_grade_list: null\n         }\n       })\n\nArgument `department`: Invalid value provided. Expected departmentCreateNestedOneWithoutEmp_join_detailsInput, provided String. "}
{"level":"error","message":"POST 0.6080939999956172 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:43:34\n\n  40 if (isMany) {\n  41   return await tx[tableName].createMany({ data });\n  42 } else {\n→ 43   return await tx[tableName].create({\n         data: {\n           department: 1,\n                       ~\n           designation: 2,\n           task: \"Project Management\",\n           class: null,\n           doj: \"2022-03-01\",\n           effective_pay_commision: \"cwe\",\n           confirmation_order: null,\n           pay_scale: 987,\n           pay_band: 98765,\n           grade_pay: 9876,\n           doc: null,\n           basic_pay: 4564,\n           conf_order_number: null,\n           deduction_type: \"cwe\",\n           conf_order_date: null,\n           member_gis: null,\n           appoint_authority: null,\n           gis_account: null,\n           ulb: null,\n           last_inc_order: null,\n           name_of_service: null,\n           last_inc_order_date: null,\n           bank_name: null,\n           wef_date: null,\n           branch_name: null,\n           pf_category: null,\n           acc_no: undefined,\n           ifsc: null,\n           sen_grade_list: null\n         }\n       })\n\nArgument `department`: Invalid value provided. Expected departmentCreateNestedOneWithoutEmp_join_detailsInput, provided Int. "}
{"level":"error","message":"GET 3.5158380000066245 /api/v1/hrms/employee/get status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.6977229999974952 /api/v1/hrms/employee/get?limit=1 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany({\n          take: 1,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"GET 0.6021560000081081 /api/v1/hrms/employee/get?limit=10 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"GET 0.48275700001977384 /api/v1/hrms/employee/get?limit=10%2Fpage status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.6251290000218432 /api/v1/hrms/employee/get?limit=10%2Fpage%3D status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.587201999995159 /api/v1/hrms/employee/get?limit=10%2Fpage%3D1 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.5373970000073314 /api/v1/hrms/employee/get?limit=10&page=undefined&department=null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"GET 0.43745299987494946 /api/v1/hrms/employee/get?limit=10&page=undefined&department=null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"GET 0.43243400007486343 /api/v1/hrms/employee/get?limit=2&page=0&department=null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -2\") "}
{"level":"error","message":"GET 0.5897249998524785 /api/v1/hrms/employee/get?limit=2&page=0&department=null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -2\") "}
{"level":"error","message":"GET 0.39031399972736835 /api/v1/hrms/employee/get?limit=1&page=0&department=null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -1\") "}
{"level":"error","message":"GET 0.39583299960941076 /api/v1/hrms/employee/get?limit=1&page=0&department=null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -1\") "}
{"level":"error","message":"GET 0.3618350001052022 /api/v1/hrms/employee/get?limit=1&page=0&department=null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -1\") "}
{"level":"error","message":"GET 0.36490199994295835 /api/v1/hrms/employee/get?limit=1&page=0&department=null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -1\") "}
{"level":"error","message":"PATCH 0.7925370000011753 /api/v1/hrms/employee/update status = false, err = \nInvalid `prisma.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:331:40\n\n  328   pay_scale,\n  329 } = req.body as EditEmpList;\n  330 \n→ 331 const emp = await prisma.employees.update({\n        where: {\n      +   id: Int\n        },\n        data: {\n          emp_id: undefined\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.5353189999877941 /api/v1/hrms/employee/update status = false, err = \nInvalid `prisma.employee_join_details.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:349:62\n\n  346   },\n  347 });\n  348 \n→ 349 const updateEmpJoin = await prisma.employee_join_details.update({\n        where: {\n          id: 1\n        },\n        data: {\n          department_id: \"2\",\n                         ~~~\n          designation_id: 2,\n          grade_pay: 212,\n          task: \"software dev\",\n          basic_pay: \"23\",\n          pay_band: 212,\n          pay_scale: 1212\n        }\n      })\n\nArgument `department_id`: Invalid value provided. Expected Int, NullableIntFieldUpdateOperationsInput or Null, provided String. "}
{"level":"error","message":"PATCH 0.7317759999987175 /api/v1/hrms/employee/update status = false, err = \nInvalid `prisma.employee_join_details.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:349:62\n\n  346   },\n  347 });\n  348 \n→ 349 const updateEmpJoin = await prisma.employee_join_details.update({\n        where: {\n          id: 1\n        },\n        data: {\n          department_id: \"2\",\n                         ~~~\n          designation_id: 2,\n          grade_pay: 212,\n          task: \"software dev\",\n          basic_pay: \"23\",\n          pay_band: 212,\n          pay_scale: 1212\n        }\n      })\n\nArgument `department_id`: Invalid value provided. Expected Int, NullableIntFieldUpdateOperationsInput or Null, provided String. "}
{"level":"error","message":"PATCH 3.135957999999846 /api/v1/hrms/employee/update status = false, err = \nInvalid `tx.employee_basic_details.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:343:39\n\n  340   },\n  341 });\n  342 \n→ 343 await tx.employee_basic_details.create({\n      + data: employee_basic_detailsCreateInput | employee_basic_detailsUncheckedCreateInput\n      })\n\nArgument `data` is missing. "}
{"level":"error","message":"PATCH 3.2380359999951907 /api/v1/hrms/employee/update status = false, err = \nInvalid `tx.employee_basic_details.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:343:39\n\n  340   },\n  341 });\n  342 \n→ 343 await tx.employee_basic_details.create({\n      + data: employee_basic_detailsCreateInput | employee_basic_detailsUncheckedCreateInput\n      })\n\nArgument `data` is missing. "}
{"level":"error","message":"PATCH 0.6187219999847002 /api/v1/hrms/employee/update status = false, err = \nInvalid `tx.employee_basic_details.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:343:39\n\n  340   },\n  341 });\n  342 \n→ 343 await tx.employee_basic_details.create({\n      + data: employee_basic_detailsCreateInput | employee_basic_detailsUncheckedCreateInput\n      })\n\nArgument `data` is missing. "}
{"level":"error","message":"PATCH 3.2309470000000147 /api/v1/hrms/employee/update status = false, err = \nInvalid `tx.employee_basic_details.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:343:39\n\n  340   },\n  341 });\n  342 \n→ 343 await tx.employee_basic_details.create({\n      + data: employee_basic_detailsCreateInput | employee_basic_detailsUncheckedCreateInput\n      })\n\nArgument `data` is missing. "}
{"level":"error","message":"PATCH 5.451187000000573 /api/v1/hrms/employee/update status = false, err = \nInvalid `tx.employee_basic_details.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:343:39\n\n  340   },\n  341 });\n  342 \n→ 343 await tx.employee_basic_details.create({\n      + data: employee_basic_detailsCreateInput | employee_basic_detailsUncheckedCreateInput\n      })\n\nArgument `data` is missing. "}
{"level":"error","message":"PATCH 3.1980389999998806 /api/v1/hrms/employee/update status = false, err = \nInvalid `tx.employee_basic_details.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:343:39\n\n  340   },\n  341 });\n  342 \n→ 343 await tx.employee_basic_details.create({\n      + data: employee_basic_detailsCreateInput | employee_basic_detailsUncheckedCreateInput\n      })\n\nArgument `data` is missing. "}
{"level":"error","message":"PATCH 3.343109000000368 /api/v1/hrms/employee/update status = false, err = \nInvalid `tx.employee_basic_details.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:343:39\n\n  340   },\n  341 });\n  342 \n→ 343 await tx.employee_basic_details.create({\n      + data: employee_basic_detailsCreateInput | employee_basic_detailsUncheckedCreateInput\n      })\n\nArgument `data` is missing. "}
{"level":"error","message":"PATCH 4.760357000000113 /api/v1/hrms/employee/update status = false, err = \nInvalid `tx.employee_basic_details.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:343:39\n\n  340   },\n  341 });\n  342 \n→ 343 await tx.employee_basic_details.create({\n      + data: employee_basic_detailsCreateInput | employee_basic_detailsUncheckedCreateInput\n      })\n\nArgument `data` is missing. "}
{"level":"error","message":"PATCH 0.889246999999159 /api/v1/hrms/employee/update status = false, err = \nInvalid `tx.employee_basic_details.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:343:39\n\n  340   },\n  341 });\n  342 \n→ 343 await tx.employee_basic_details.create({\n      + data: employee_basic_detailsCreateInput | employee_basic_detailsUncheckedCreateInput\n      })\n\nArgument `data` is missing. "}
{"level":"error","message":"PATCH 3.2200000000002547 /api/v1/hrms/employee/update status = false, err = \nInvalid `tx.employee_basic_details.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:343:39\n\n  340   },\n  341 });\n  342 \n→ 343 await tx.employee_basic_details.create({\n      + data: employee_basic_detailsCreateInput | employee_basic_detailsUncheckedCreateInput\n      })\n\nArgument `data` is missing. "}
{"level":"error","message":"PATCH 2.2330519999995886 /api/v1/hrms/employee/update status = false, err = \nInvalid `tx.employee_basic_details.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:343:39\n\n  340   },\n  341 });\n  342 \n→ 343 await tx.employee_basic_details.create({\n      + data: employee_basic_detailsCreateInput | employee_basic_detailsUncheckedCreateInput\n      })\n\nArgument `data` is missing. "}
{"level":"error","message":"PATCH 0.3516620000009425 /api/v1/hrms/employee/update status = false, err = \nInvalid `tx.employee_join_details.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:350:38\n\n  347   },\n  348 });\n  349 \n→ 350 await tx.employee_join_details.update({\n        where: {\n          id: 1\n        },\n        data: {\n          department_id: \"2\",\n                         ~~~\n          designation_id: 2,\n          grade_pay: 212,\n          task: \"software dev\",\n          basic_pay: 23,\n          pay_band: 212,\n          pay_scale: 1212\n        }\n      })\n\nArgument `department_id`: Invalid value provided. Expected Int, NullableIntFieldUpdateOperationsInput or Null, provided String. "}
{"level":"error","message":"PATCH 0.36703900003340095 /api/v1/hrms/employee/update status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:332:38\n\n  329 } = req.body as EditEmpList;\n  330 \n  331 const trans = await prisma.$transaction(async (tx) => {\n→ 332   const emp = await tx.employees.update({\n          where: {\n            id: 1\n          },\n          data: {\n            emp_id: 2\n                    ~\n          }\n        })\n\nArgument `emp_id`: Invalid value provided. Expected String or StringFieldUpdateOperationsInput, provided Int. "}
{"level":"error","message":"GET 0.5914769999981218 /api/v1/hrms/employee/get-single?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:368:38\n\n  365 } = req.body as EditEmpList;\n  366 \n  367 const trans = await prisma.$transaction(async (tx) => {\n→ 368   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.4003850000008242 /api/v1/hrms/employee/get-single?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:368:38\n\n  365 } = req.body as EditEmpList;\n  366 \n  367 const trans = await prisma.$transaction(async (tx) => {\n→ 368   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 2.539841999999908 /api/v1/hrms/employee/get-single/1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:344:41\n\n  341   },\n  342 };\n  343 \n→ 344 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n      ?       id?: true,\n      ?       department_id?: true,\n      ?       designation_id?: true,\n      ?       task?: true,\n      ?       class?: true,\n      ?       doj?: true,\n      ?       effective_pay_commision?: true,\n      ?       confirmation_order?: true,\n      ?       pay_scale?: true,\n      ?       pay_band?: true,\n      ?       grade_pay?: true,\n      ?       doc?: true,\n      ?       basic_pay?: true,\n      ?       conf_order_number?: true,\n      ?       deduction_type?: true,\n      ?       conf_order_date?: true,\n      ?       member_gis?: true,\n      ?       appoint_authority?: true,\n      ?       gis_account?: true,\n      ?       ulb?: true,\n      ?       last_inc_order?: true,\n      ?       name_of_service?: true,\n      ?       last_inc_order_date?: true,\n      ?       bank_name?: true,\n      ?       wef_date?: true,\n      ?       branch_name?: true,\n      ?       pf_category?: true,\n      ?       acc_number?: true,\n      ?       ifsc?: true,\n      ?       sen_grade_list?: true,\n      ?       created_at?: true,\n      ?       updated_at?: true,\n      ?       department?: true,\n      ?       designation?: true,\n      ?       employee?: true,\n      ?       _count?: true\n            }\n          }\n        },\n        where: {\n          id: 1\n        }\n      })\n\nThe `select` statement for type employee_join_details must not be empty. Available options are marked with ?. "}
{"level":"error","message":"GET 2.3592760000001363 /api/v1/hrms/employee/get-single/1 status = false, err = Do not know how to serialize a BigInt "}
{"level":"error","message":"POST 0.41422199993394315 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:56:34\n\n  53 if (isMany) {\n  54   return await tx[tableName].createMany({ data });\n  55 } else {\n→ 56   return await tx[tableName].create({\n         data: {\n           department_id: 3,\n           designation_id: 2,\n           task: \"Project Management\",\n           class: null,\n           doj: \"2022-03-01\",\n           effective_pay_commision: \"cwe\",\n           confirmation_order: null,\n           pay_scale: 987.32,\n                      ~~~~~~\n           pay_band: 98765,\n           grade_pay: 9876,\n           doc: null,\n           basic_pay: 4564,\n           conf_order_number: null,\n           deduction_type: \"cwe\",\n           conf_order_date: null,\n           member_gis: null,\n           appoint_authority: null,\n           gis_account: null,\n           ulb: null,\n           last_inc_order: null,\n           name_of_service: null,\n           last_inc_order_date: null,\n           bank_name: null,\n           wef_date: null,\n           branch_name: null,\n           pf_category: null,\n           acc_no: undefined,\n           ifsc: null,\n           sen_grade_list: null\n         }\n       })\n\nArgument `pay_scale`: Invalid value provided. Expected BigInt or Null, provided Float. "}
{"level":"error","message":"POST 0.8270510000002105 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:56:34\n\n  53 if (isMany) {\n  54   return await tx[tableName].createMany({ data });\n  55 } else {\n→ 56   return await tx[tableName].create({\n         data: {\n           emp_loan: {\n             create: [\n               {\n                 loan_name_det: \"fear\",\n                 loan_account_num: \"123456789\",\n                 sanc_order_num: \"S123\",\n                 dos: \"2022-03-01\",\n                 san_authority: \"John Doe\",\n                 dod: \"2022-12-31\",\n                 dis_treasury_name: \"State Treasury\",\n                 voucher_date: \"2022-03-02\",\n                 treasury_voc_num: \" 322\"\n               }\n             ]\n           },\n           emp_loan_Principal: {\n             create: [\n               {\n                 loan_name_principal: \"faav\",\n                 tot_amt_released: \"50000\",\n                 total_install: \"12\",\n                 monthly_install: \"4000\",\n                 last_paid_install: \"6\",\n                 month_last_install: \"2022-08-01\",\n                 total_amnt: \"24000\"\n               }\n             ]\n           },\n           emp_loan_recovery: {\n             create: [\n               {\n                 loan_name_recovery: \"ofiae\",\n                 total_int_amount: \"2000\",\n                 total_install_recovery: \"24\",\n                 monthly_install_recovery: \"100\",\n                 last_paid_install_recovery: \"12\",\n                 month_last_install_recovery: \"2023-02-01\",\n                 total_amnt_recovery: \"2400\"\n               }\n             ]\n           }\n         }\n       })\n\nArgument `total_amnt`: Invalid value provided. Expected Float, provided String. "}
{"level":"error","message":"POST 0.5983379999961471 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:56:34\n\n  53 if (isMany) {\n  54   return await tx[tableName].createMany({ data });\n  55 } else {\n→ 56   return await tx[tableName].create({\n         data: {\n           emp_loan: {\n             create: [\n               {\n                 loan_name_det: \"fear\",\n                 loan_account_num: \"123456789\",\n                 sanc_order_num: \"S123\",\n                 dos: \"2022-03-01\",\n                 san_authority: \"John Doe\",\n                 dod: \"2022-12-31\",\n                 dis_treasury_name: \"State Treasury\",\n                 voucher_date: \"2022-03-02\",\n                 treasury_voc_num: \" 322\"\n               }\n             ]\n           },\n           emp_loan_Principal: {\n             create: [\n               {\n                 loan_name_principal: \"faav\",\n                 tot_amt_released: \"50000\",\n                 total_install: \"12\",\n                 monthly_install: \"4000\",\n                 last_paid_install: \"6\",\n                 month_last_install: \"2022-08-01\",\n                 total_amnt: \"24000\"\n               }\n             ]\n           },\n           emp_loan_recovery: {\n             create: [\n               {\n                 loan_name_recovery: \"ofiae\",\n                 total_int_amount: \"2000\",\n                 total_install_recovery: \"24\",\n                 monthly_install_recovery: \"100\",\n                 last_paid_install_recovery: \"12\",\n                 month_last_install_recovery: \"2023-02-01\",\n                 total_amnt_recovery: \"2400\"\n               }\n             ]\n           }\n         }\n       })\n\nArgument `total_amnt`: Invalid value provided. Expected Float, provided String. "}
{"level":"error","message":"GET 0.365496999991592 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 1.0895280000404455 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.31472299998858944 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2711819999967702 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2843779999529943 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2539649999816902 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2935909999650903 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.3587770000449382 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.3089489999692887 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2390350000350736 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2916049999766983 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.33747199998470023 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.312750999990385 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.256065999972634 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2813880000030622 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.36351499997545034 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.40680200001224875 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2665280000073835 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2592990000266582 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2345070000155829 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.36322699999436736 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.7301040000165813 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2367460000095889 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.24957899993751198 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.3143019999843091 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2886329999892041 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.24769400001969188 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.24259799998253584 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.31802800006698817 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.3620769999688491 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.38008099992293864 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2451720000244677 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2405909999506548 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2992490000324324 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.24118399992585182 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2884880000492558 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2504969999426976 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.24563500005751848 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.28365500003565103 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"POST 0.45693300000129966 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           department_id: 4,\n           designation_id: 5,\n           task: \"dvasdv\",\n           class: \"3\",\n           doj: undefined,\n           effective_pay_commision: \"5\",\n           confirmation_order: \"yes\",\n           pay_scale: undefined,\n           pay_band: undefined,\n           grade_pay: \"23423\",\n                      ~~~~~~~\n           doc: undefined,\n           basic_pay: \"324\",\n           conf_order_number: undefined,\n           deduction_type: \"GPF\",\n           conf_order_date: undefined,\n           member_gis: \"\",\n           appoint_authority: undefined,\n           gis_account: undefined,\n           ulb: undefined,\n           last_inc_order: undefined,\n           name_of_service: undefined,\n           last_inc_order_date: undefined,\n           bank_name: undefined,\n           wef_date: undefined,\n           branch_name: undefined,\n           pf_category: undefined,\n           acc_no: undefined,\n           ifsc: undefined,\n           sen_grade_list: undefined\n         }\n       })\n\nArgument `grade_pay`: Invalid value provided. Expected Float or Null, provided String. "}
{"level":"error","message":"PATCH 0.4980409999843687 /api/v1/hrms/employee/update?1= status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.5415650000795722 /api/v1/hrms/employee/update?1= status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.27534699998795986 /api/v1/hrms/employee/update?1= status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.32205099996645004 /api/v1/hrms/employee/update?i1= status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.38458800001535565 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.26378300006035715 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.2573199999751523 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.24765400006435812 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.38827500003390014 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.2809690000722185 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.24619600002188236 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.34283700003288686 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.24564899993129075 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.23992600000929087 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.24202599993441254 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.6465640000533313 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.4346110000042245 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.23598300002049655 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.26187000004574656 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.2743600000394508 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.2377140000462532 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.29498500004410744 /api/v1/hrms/employee/update?id=2 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: \"EMP42342342\"\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"POST 0.3235140014439821 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           department_id: 4,\n           designation_id: 5,\n           task: \"dvasdv\",\n           class: \"3\",\n           doj: undefined,\n           effective_pay_commision: \"5\",\n           confirmation_order: \"\",\n           pay_scale: undefined,\n           pay_band: undefined,\n           grade_pay: \"23423\",\n                      ~~~~~~~\n           doc: undefined,\n           basic_pay: \"324\",\n           conf_order_number: undefined,\n           deduction_type: \"GPF\",\n           conf_order_date: undefined,\n           member_gis: \"\",\n           appoint_authority: undefined,\n           gis_account: undefined,\n           ulb: undefined,\n           last_inc_order: undefined,\n           name_of_service: undefined,\n           last_inc_order_date: undefined,\n           bank_name: undefined,\n           wef_date: undefined,\n           branch_name: undefined,\n           pf_category: undefined,\n           acc_no: undefined,\n           ifsc: undefined,\n           sen_grade_list: undefined\n         }\n       })\n\nArgument `grade_pay`: Invalid value provided. Expected Float or Null, provided String. "}
{"level":"error","message":"POST 0.32649399898946285 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           department_id: 4,\n           designation_id: 5,\n           task: \"dvasdv\",\n           class: \"3\",\n           doj: undefined,\n           effective_pay_commision: \"5\",\n           confirmation_order: \"\",\n           pay_scale: undefined,\n           pay_band: undefined,\n           grade_pay: \"23423\",\n                      ~~~~~~~\n           doc: undefined,\n           basic_pay: \"324\",\n           conf_order_number: undefined,\n           deduction_type: \"GPF\",\n           conf_order_date: undefined,\n           member_gis: \"\",\n           appoint_authority: undefined,\n           gis_account: undefined,\n           ulb: undefined,\n           last_inc_order: undefined,\n           name_of_service: undefined,\n           last_inc_order_date: undefined,\n           bank_name: undefined,\n           wef_date: undefined,\n           branch_name: undefined,\n           pf_category: undefined,\n           acc_no: undefined,\n           ifsc: undefined,\n           sen_grade_list: undefined\n         }\n       })\n\nArgument `grade_pay`: Invalid value provided. Expected Float or Null, provided String. "}
{"level":"error","message":"POST 1.1224680000450462 /api/hrms/v1/employee/remove status = false, err = Record to update not found. "}
{"level":"error","message":"POST 0.6198579999618232 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_loan: {\n             create: [\n               {\n                 loan_account_num: \"5345\",\n                 sanc_order_num: \"345\",\n                 loan_name_det: \"Motor Cycle Adv.\"\n               }\n             ]\n           },\n           emp_loan_Principal: {\n             create: []\n           },\n           emp_loan_recovery: {\n             create: []\n           }\n         }\n       })\n\nArgument `dos` is missing. "}
