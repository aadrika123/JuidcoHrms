{"level":"error","message":"POST 0.5199629999988247 /api/v1/hrms/employee/create status = false, err = Cannot read properties of undefined (reading 'married_status') "}
{"level":"error","message":"POST 0.9226820000039879 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:42:34\n\n  39 if (isMany) {\n  40   return await tx[tableName].createMany({ data });\n  41 } else {\n→ 42   return await tx[tableName].create({\n         data: {\n           married_status: \"cw\",\n           identification_marks: \"Mole on left arm\",\n           emp_categories: \"we\",\n           emp_home_state: \"New York\",\n           emp_district: \"wce\",\n           emp_blood_group: \"cw\",\n           emp_health_status: \"cwe\",\n           emp_ltc_home_town: \"New York City\",\n           emp_nearest_railway_station: \"Grand Central Terminal\",\n           emp_phy_health_type: \"cwe\",\n           emp_family: \"cwe\",\n           emp_family_name: \"Smith\",\n           emp_office_name: \"XYZ Corporation\",\n           emp_org_name: \"ABC Corp\",\n           emp_lang: [\n             {\n               language: \"Hindi\",\n               emp_lang_do: [\n                 \"read\",\n                 \"write\",\n                 \"speak\"\n               ]\n             }\n           ],\n       +   religion: String\n         }\n       })\n\nArgument `religion` is missing. "}
{"level":"error","message":"GET 3.44422300000042 /api/v1/hrms/employee/get status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:268:24\n\n  265 }\n  266 \n  267 const [data, count] = await prisma.$transaction([\n→ 268   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            }\n          },\n          where: {\n            OR: [\n              {\n                emp_id: {\n                  equals: undefined,\n                  mode: \"insensitive\"\n                }\n              }\n            ]\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.6200150000004214 /api/v1/hrms/employee/get?page=1 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:268:24\n\n  265 }\n  266 \n  267 const [data, count] = await prisma.$transaction([\n→ 268   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            }\n          },\n          where: {\n            OR: [\n              {\n                emp_id: {\n                  equals: undefined,\n                  mode: \"insensitive\"\n                }\n              }\n            ]\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 3.657976000000417 /api/v1/hrms/employee/get?page=1 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_id: {\n                  equals: undefined,\n                  mode: \"insensitive\"\n                }\n              }\n            ]\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.6273360000050161 /api/v1/hrms/employee/get?page=1 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_id: {\n                  equals: undefined,\n                  mode: \"insensitive\"\n                }\n              }\n            ]\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.5864789999905042 /api/v1/hrms/employee/get?page=1&search=ad status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_id: {\n                  equals: undefined,\n                  mode: \"insensitive\"\n                }\n              }\n            ]\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.55528799998865 /api/v1/hrms/employee/get?page=1&search=ad&limit=10 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_id: {\n                  equals: undefined,\n                  mode: \"insensitive\"\n                }\n              }\n            ]\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 1.0686829999995098 /api/v1/hrms/employee/get?limit=10 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_id: {\n                  equals: undefined,\n                  mode: \"insensitive\"\n                }\n              }\n            ]\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"GET 0.6871499999979278 /api/v1/hrms/employee/get?limit=10&page=0 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -10\") "}
{"level":"error","message":"GET 3.9424279999993814 /api/v1/hrms/employee/get status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            OR: [\n              {\n                emp_id: {\n                  equals: undefined,\n                  mode: \"insensitive\"\n                }\n              }\n            ]\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 3.5851820000000316 /api/v1/hrms/employee/get status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.7983090000002449 /api/v1/hrms/employee/get status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:271:24\n\n  268 }\n  269 \n  270 const [data, count] = await prisma.$transaction([\n→ 271   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"POST 0.6066739999987476 /api/v1/hrms/employee/create status = false, err = Cannot destructure property 'emp_education' of 'emp_education_details' as it is undefined. "}
{"level":"error","message":"GET 3.462735000000066 /api/v1/hrms/employee/count status = false, err = All elements of the array need to be Prisma Client promises. Hint: Please make sure you are not awaiting the Prisma client calls you intended to pass in the $transaction function. "}
{"level":"error","message":"POST 4.081206000000748 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:43:34\n\n  40 if (isMany) {\n  41   return await tx[tableName].createMany({ data });\n  42 } else {\n→ 43   return await tx[tableName].create({\n         data: {\n           office_name: \"XYZ123\",\n           office_code: \"XYZ123\",\n           ddo_code: \"DDO456\",\n           ddo_designation: \"Chief Officer\",\n           district: \"adc\",\n       +   emp_type: Int\n         }\n       })\n\nArgument `emp_type` is missing. "}
{"level":"error","message":"POST 0.6930579999971087 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:43:34\n\n  40 if (isMany) {\n  41   return await tx[tableName].createMany({ data });\n  42 } else {\n→ 43   return await tx[tableName].create({\n         data: {\n           office_name: \"XYZ123\",\n           office_code: \"XYZ123\",\n           ddo_code: \"DDO456\",\n           ddo_designation: \"Chief Officer\",\n           district: \"adc\",\n       +   emp_type: Int\n         }\n       })\n\nArgument `emp_type` is missing. "}
{"level":"error","message":"POST 0.587256000002526 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:43:34\n\n  40 if (isMany) {\n  41   return await tx[tableName].createMany({ data });\n  42 } else {\n→ 43   return await tx[tableName].create({\n         data: {\n           office_name: \"XYZ123\",\n           office_code: \"XYZ123\",\n           ddo_code: \"DDO456\",\n           ddo_designation: \"Chief Officer\",\n           district: \"adc\",\n       +   emp_type: Int\n         }\n       })\n\nArgument `emp_type` is missing. "}
{"level":"error","message":"POST 0.5084759999881499 /api/v1/hrms/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"POST 0.8433439999935217 /api/v1/hrms/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"POST 0.6224830000137445 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:43:34\n\n  40 if (isMany) {\n  41   return await tx[tableName].createMany({ data });\n  42 } else {\n→ 43   return await tx[tableName].create({\n         data: {\n           emp_image: \"path/to/image.jpg\",\n           emp_name: \"John Doe\",\n           mode_of_recruitment: \"casd\",\n           contact_no: \"123456789065\",\n           emg_contact_no: \"9876543210\",\n           aadhar_no: \"123456789012\",\n           epic_no: \"24233\",\n           gender: \"casd\",\n           pran: \"123456789012\",\n           emp_type: \"csdc\",\n           weight: \"70\",\n           height: \"175\",\n           cps: \"525\",\n           gps: \"5325\",\n           dob: \"1990-01-01T00:00:00.000Z\",\n       +   emp_id: String\n         }\n       })\n\nArgument `emp_id` is missing. "}
{"level":"error","message":"POST 0.40372199995908886 /api/v1/hrms/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"POST 0.37175299995578825 /api/v1/hrms/employee/create status = false, err = Cannot read properties of undefined (reading 'length') "}
{"level":"error","message":"POST 0.8263690000021597 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:43:34\n\n  40 if (isMany) {\n  41   return await tx[tableName].createMany({ data });\n  42 } else {\n→ 43   return await tx[tableName].create({\n         data: {\n           department: \"software development\",\n                       ~~~~~~~~~~~~~~~~~~~~~~\n           designation: \"cwe\",\n           task: \"Project Management\",\n           class: null,\n           doj: \"2022-03-01\",\n           effective_pay_commision: \"cwe\",\n           confirmation_order: null,\n           pay_scale: 987,\n           pay_band: 98765,\n           grade_pay: 9876,\n           doc: null,\n           basic_pay: 4564,\n           conf_order_number: null,\n           deduction_type: \"cwe\",\n           conf_order_date: null,\n           member_gis: null,\n           appoint_authority: null,\n           gis_account: null,\n           ulb: null,\n           last_inc_order: null,\n           name_of_service: null,\n           last_inc_order_date: null,\n           bank_name: null,\n           wef_date: null,\n           branch_name: null,\n           pf_category: null,\n           acc_no: undefined,\n           ifsc: null,\n           sen_grade_list: null\n         }\n       })\n\nArgument `department`: Invalid value provided. Expected departmentCreateNestedOneWithoutEmp_join_detailsInput, provided String. "}
{"level":"error","message":"POST 0.6080939999956172 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:43:34\n\n  40 if (isMany) {\n  41   return await tx[tableName].createMany({ data });\n  42 } else {\n→ 43   return await tx[tableName].create({\n         data: {\n           department: 1,\n                       ~\n           designation: 2,\n           task: \"Project Management\",\n           class: null,\n           doj: \"2022-03-01\",\n           effective_pay_commision: \"cwe\",\n           confirmation_order: null,\n           pay_scale: 987,\n           pay_band: 98765,\n           grade_pay: 9876,\n           doc: null,\n           basic_pay: 4564,\n           conf_order_number: null,\n           deduction_type: \"cwe\",\n           conf_order_date: null,\n           member_gis: null,\n           appoint_authority: null,\n           gis_account: null,\n           ulb: null,\n           last_inc_order: null,\n           name_of_service: null,\n           last_inc_order_date: null,\n           bank_name: null,\n           wef_date: null,\n           branch_name: null,\n           pf_category: null,\n           acc_no: undefined,\n           ifsc: null,\n           sen_grade_list: null\n         }\n       })\n\nArgument `department`: Invalid value provided. Expected departmentCreateNestedOneWithoutEmp_join_detailsInput, provided Int. "}
{"level":"error","message":"GET 3.5158380000066245 /api/v1/hrms/employee/get status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.6977229999974952 /api/v1/hrms/employee/get?limit=1 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany({\n          take: 1,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"GET 0.6021560000081081 /api/v1/hrms/employee/get?limit=10 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"GET 0.48275700001977384 /api/v1/hrms/employee/get?limit=10%2Fpage status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.6251290000218432 /api/v1/hrms/employee/get?limit=10%2Fpage%3D status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.587201999995159 /api/v1/hrms/employee/get?limit=10%2Fpage%3D1 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.5373970000073314 /api/v1/hrms/employee/get?limit=10&page=undefined&department=null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"GET 0.43745299987494946 /api/v1/hrms/employee/get?limit=10&page=undefined&department=null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany({\n          take: 10,\n          select: {\n            id: true,\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"GET 0.43243400007486343 /api/v1/hrms/employee/get?limit=2&page=0&department=null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -2\") "}
{"level":"error","message":"GET 0.5897249998524785 /api/v1/hrms/employee/get?limit=2&page=0&department=null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -2\") "}
{"level":"error","message":"GET 0.39031399972736835 /api/v1/hrms/employee/get?limit=1&page=0&department=null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -1\") "}
{"level":"error","message":"GET 0.39583299960941076 /api/v1/hrms/employee/get?limit=1&page=0&department=null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -1\") "}
{"level":"error","message":"GET 0.3618350001052022 /api/v1/hrms/employee/get?limit=1&page=0&department=null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -1\") "}
{"level":"error","message":"GET 0.36490199994295835 /api/v1/hrms/employee/get?limit=1&page=0&department=null status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:273:24\n\n  270 }\n  271 \n  272 const [data, count] = await prisma.$transaction([\n→ 273   prisma.employees.findMany(\nError in query graph construction: AssertionError(\"Invalid value for skip argument: Value can only be positive, found: -1\") "}
{"level":"error","message":"PATCH 0.7925370000011753 /api/v1/hrms/employee/update status = false, err = \nInvalid `prisma.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:331:40\n\n  328   pay_scale,\n  329 } = req.body as EditEmpList;\n  330 \n→ 331 const emp = await prisma.employees.update({\n        where: {\n      +   id: Int\n        },\n        data: {\n          emp_id: undefined\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.5353189999877941 /api/v1/hrms/employee/update status = false, err = \nInvalid `prisma.employee_join_details.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:349:62\n\n  346   },\n  347 });\n  348 \n→ 349 const updateEmpJoin = await prisma.employee_join_details.update({\n        where: {\n          id: 1\n        },\n        data: {\n          department_id: \"2\",\n                         ~~~\n          designation_id: 2,\n          grade_pay: 212,\n          task: \"software dev\",\n          basic_pay: \"23\",\n          pay_band: 212,\n          pay_scale: 1212\n        }\n      })\n\nArgument `department_id`: Invalid value provided. Expected Int, NullableIntFieldUpdateOperationsInput or Null, provided String. "}
{"level":"error","message":"PATCH 0.7317759999987175 /api/v1/hrms/employee/update status = false, err = \nInvalid `prisma.employee_join_details.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:349:62\n\n  346   },\n  347 });\n  348 \n→ 349 const updateEmpJoin = await prisma.employee_join_details.update({\n        where: {\n          id: 1\n        },\n        data: {\n          department_id: \"2\",\n                         ~~~\n          designation_id: 2,\n          grade_pay: 212,\n          task: \"software dev\",\n          basic_pay: \"23\",\n          pay_band: 212,\n          pay_scale: 1212\n        }\n      })\n\nArgument `department_id`: Invalid value provided. Expected Int, NullableIntFieldUpdateOperationsInput or Null, provided String. "}
{"level":"error","message":"PATCH 3.135957999999846 /api/v1/hrms/employee/update status = false, err = \nInvalid `tx.employee_basic_details.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:343:39\n\n  340   },\n  341 });\n  342 \n→ 343 await tx.employee_basic_details.create({\n      + data: employee_basic_detailsCreateInput | employee_basic_detailsUncheckedCreateInput\n      })\n\nArgument `data` is missing. "}
{"level":"error","message":"PATCH 3.2380359999951907 /api/v1/hrms/employee/update status = false, err = \nInvalid `tx.employee_basic_details.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:343:39\n\n  340   },\n  341 });\n  342 \n→ 343 await tx.employee_basic_details.create({\n      + data: employee_basic_detailsCreateInput | employee_basic_detailsUncheckedCreateInput\n      })\n\nArgument `data` is missing. "}
{"level":"error","message":"PATCH 0.6187219999847002 /api/v1/hrms/employee/update status = false, err = \nInvalid `tx.employee_basic_details.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:343:39\n\n  340   },\n  341 });\n  342 \n→ 343 await tx.employee_basic_details.create({\n      + data: employee_basic_detailsCreateInput | employee_basic_detailsUncheckedCreateInput\n      })\n\nArgument `data` is missing. "}
{"level":"error","message":"PATCH 3.2309470000000147 /api/v1/hrms/employee/update status = false, err = \nInvalid `tx.employee_basic_details.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:343:39\n\n  340   },\n  341 });\n  342 \n→ 343 await tx.employee_basic_details.create({\n      + data: employee_basic_detailsCreateInput | employee_basic_detailsUncheckedCreateInput\n      })\n\nArgument `data` is missing. "}
{"level":"error","message":"PATCH 5.451187000000573 /api/v1/hrms/employee/update status = false, err = \nInvalid `tx.employee_basic_details.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:343:39\n\n  340   },\n  341 });\n  342 \n→ 343 await tx.employee_basic_details.create({\n      + data: employee_basic_detailsCreateInput | employee_basic_detailsUncheckedCreateInput\n      })\n\nArgument `data` is missing. "}
{"level":"error","message":"PATCH 3.1980389999998806 /api/v1/hrms/employee/update status = false, err = \nInvalid `tx.employee_basic_details.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:343:39\n\n  340   },\n  341 });\n  342 \n→ 343 await tx.employee_basic_details.create({\n      + data: employee_basic_detailsCreateInput | employee_basic_detailsUncheckedCreateInput\n      })\n\nArgument `data` is missing. "}
{"level":"error","message":"PATCH 3.343109000000368 /api/v1/hrms/employee/update status = false, err = \nInvalid `tx.employee_basic_details.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:343:39\n\n  340   },\n  341 });\n  342 \n→ 343 await tx.employee_basic_details.create({\n      + data: employee_basic_detailsCreateInput | employee_basic_detailsUncheckedCreateInput\n      })\n\nArgument `data` is missing. "}
{"level":"error","message":"PATCH 4.760357000000113 /api/v1/hrms/employee/update status = false, err = \nInvalid `tx.employee_basic_details.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:343:39\n\n  340   },\n  341 });\n  342 \n→ 343 await tx.employee_basic_details.create({\n      + data: employee_basic_detailsCreateInput | employee_basic_detailsUncheckedCreateInput\n      })\n\nArgument `data` is missing. "}
{"level":"error","message":"PATCH 0.889246999999159 /api/v1/hrms/employee/update status = false, err = \nInvalid `tx.employee_basic_details.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:343:39\n\n  340   },\n  341 });\n  342 \n→ 343 await tx.employee_basic_details.create({\n      + data: employee_basic_detailsCreateInput | employee_basic_detailsUncheckedCreateInput\n      })\n\nArgument `data` is missing. "}
{"level":"error","message":"PATCH 3.2200000000002547 /api/v1/hrms/employee/update status = false, err = \nInvalid `tx.employee_basic_details.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:343:39\n\n  340   },\n  341 });\n  342 \n→ 343 await tx.employee_basic_details.create({\n      + data: employee_basic_detailsCreateInput | employee_basic_detailsUncheckedCreateInput\n      })\n\nArgument `data` is missing. "}
{"level":"error","message":"PATCH 2.2330519999995886 /api/v1/hrms/employee/update status = false, err = \nInvalid `tx.employee_basic_details.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:343:39\n\n  340   },\n  341 });\n  342 \n→ 343 await tx.employee_basic_details.create({\n      + data: employee_basic_detailsCreateInput | employee_basic_detailsUncheckedCreateInput\n      })\n\nArgument `data` is missing. "}
{"level":"error","message":"PATCH 0.3516620000009425 /api/v1/hrms/employee/update status = false, err = \nInvalid `tx.employee_join_details.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:350:38\n\n  347   },\n  348 });\n  349 \n→ 350 await tx.employee_join_details.update({\n        where: {\n          id: 1\n        },\n        data: {\n          department_id: \"2\",\n                         ~~~\n          designation_id: 2,\n          grade_pay: 212,\n          task: \"software dev\",\n          basic_pay: 23,\n          pay_band: 212,\n          pay_scale: 1212\n        }\n      })\n\nArgument `department_id`: Invalid value provided. Expected Int, NullableIntFieldUpdateOperationsInput or Null, provided String. "}
{"level":"error","message":"PATCH 0.36703900003340095 /api/v1/hrms/employee/update status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:332:38\n\n  329 } = req.body as EditEmpList;\n  330 \n  331 const trans = await prisma.$transaction(async (tx) => {\n→ 332   const emp = await tx.employees.update({\n          where: {\n            id: 1\n          },\n          data: {\n            emp_id: 2\n                    ~\n          }\n        })\n\nArgument `emp_id`: Invalid value provided. Expected String or StringFieldUpdateOperationsInput, provided Int. "}
{"level":"error","message":"GET 0.5914769999981218 /api/v1/hrms/employee/get-single?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:368:38\n\n  365 } = req.body as EditEmpList;\n  366 \n  367 const trans = await prisma.$transaction(async (tx) => {\n→ 368   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.4003850000008242 /api/v1/hrms/employee/get-single?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:368:38\n\n  365 } = req.body as EditEmpList;\n  366 \n  367 const trans = await prisma.$transaction(async (tx) => {\n→ 368   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 2.539841999999908 /api/v1/hrms/employee/get-single/1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:344:41\n\n  341   },\n  342 };\n  343 \n→ 344 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n      ?       id?: true,\n      ?       department_id?: true,\n      ?       designation_id?: true,\n      ?       task?: true,\n      ?       class?: true,\n      ?       doj?: true,\n      ?       effective_pay_commision?: true,\n      ?       confirmation_order?: true,\n      ?       pay_scale?: true,\n      ?       pay_band?: true,\n      ?       grade_pay?: true,\n      ?       doc?: true,\n      ?       basic_pay?: true,\n      ?       conf_order_number?: true,\n      ?       deduction_type?: true,\n      ?       conf_order_date?: true,\n      ?       member_gis?: true,\n      ?       appoint_authority?: true,\n      ?       gis_account?: true,\n      ?       ulb?: true,\n      ?       last_inc_order?: true,\n      ?       name_of_service?: true,\n      ?       last_inc_order_date?: true,\n      ?       bank_name?: true,\n      ?       wef_date?: true,\n      ?       branch_name?: true,\n      ?       pf_category?: true,\n      ?       acc_number?: true,\n      ?       ifsc?: true,\n      ?       sen_grade_list?: true,\n      ?       created_at?: true,\n      ?       updated_at?: true,\n      ?       department?: true,\n      ?       designation?: true,\n      ?       employee?: true,\n      ?       _count?: true\n            }\n          }\n        },\n        where: {\n          id: 1\n        }\n      })\n\nThe `select` statement for type employee_join_details must not be empty. Available options are marked with ?. "}
{"level":"error","message":"GET 2.3592760000001363 /api/v1/hrms/employee/get-single/1 status = false, err = Do not know how to serialize a BigInt "}
{"level":"error","message":"POST 0.41422199993394315 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:56:34\n\n  53 if (isMany) {\n  54   return await tx[tableName].createMany({ data });\n  55 } else {\n→ 56   return await tx[tableName].create({\n         data: {\n           department_id: 3,\n           designation_id: 2,\n           task: \"Project Management\",\n           class: null,\n           doj: \"2022-03-01\",\n           effective_pay_commision: \"cwe\",\n           confirmation_order: null,\n           pay_scale: 987.32,\n                      ~~~~~~\n           pay_band: 98765,\n           grade_pay: 9876,\n           doc: null,\n           basic_pay: 4564,\n           conf_order_number: null,\n           deduction_type: \"cwe\",\n           conf_order_date: null,\n           member_gis: null,\n           appoint_authority: null,\n           gis_account: null,\n           ulb: null,\n           last_inc_order: null,\n           name_of_service: null,\n           last_inc_order_date: null,\n           bank_name: null,\n           wef_date: null,\n           branch_name: null,\n           pf_category: null,\n           acc_no: undefined,\n           ifsc: null,\n           sen_grade_list: null\n         }\n       })\n\nArgument `pay_scale`: Invalid value provided. Expected BigInt or Null, provided Float. "}
{"level":"error","message":"POST 0.8270510000002105 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:56:34\n\n  53 if (isMany) {\n  54   return await tx[tableName].createMany({ data });\n  55 } else {\n→ 56   return await tx[tableName].create({\n         data: {\n           emp_loan: {\n             create: [\n               {\n                 loan_name_det: \"fear\",\n                 loan_account_num: \"123456789\",\n                 sanc_order_num: \"S123\",\n                 dos: \"2022-03-01\",\n                 san_authority: \"John Doe\",\n                 dod: \"2022-12-31\",\n                 dis_treasury_name: \"State Treasury\",\n                 voucher_date: \"2022-03-02\",\n                 treasury_voc_num: \" 322\"\n               }\n             ]\n           },\n           emp_loan_Principal: {\n             create: [\n               {\n                 loan_name_principal: \"faav\",\n                 tot_amt_released: \"50000\",\n                 total_install: \"12\",\n                 monthly_install: \"4000\",\n                 last_paid_install: \"6\",\n                 month_last_install: \"2022-08-01\",\n                 total_amnt: \"24000\"\n               }\n             ]\n           },\n           emp_loan_recovery: {\n             create: [\n               {\n                 loan_name_recovery: \"ofiae\",\n                 total_int_amount: \"2000\",\n                 total_install_recovery: \"24\",\n                 monthly_install_recovery: \"100\",\n                 last_paid_install_recovery: \"12\",\n                 month_last_install_recovery: \"2023-02-01\",\n                 total_amnt_recovery: \"2400\"\n               }\n             ]\n           }\n         }\n       })\n\nArgument `total_amnt`: Invalid value provided. Expected Float, provided String. "}
{"level":"error","message":"POST 0.5983379999961471 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:56:34\n\n  53 if (isMany) {\n  54   return await tx[tableName].createMany({ data });\n  55 } else {\n→ 56   return await tx[tableName].create({\n         data: {\n           emp_loan: {\n             create: [\n               {\n                 loan_name_det: \"fear\",\n                 loan_account_num: \"123456789\",\n                 sanc_order_num: \"S123\",\n                 dos: \"2022-03-01\",\n                 san_authority: \"John Doe\",\n                 dod: \"2022-12-31\",\n                 dis_treasury_name: \"State Treasury\",\n                 voucher_date: \"2022-03-02\",\n                 treasury_voc_num: \" 322\"\n               }\n             ]\n           },\n           emp_loan_Principal: {\n             create: [\n               {\n                 loan_name_principal: \"faav\",\n                 tot_amt_released: \"50000\",\n                 total_install: \"12\",\n                 monthly_install: \"4000\",\n                 last_paid_install: \"6\",\n                 month_last_install: \"2022-08-01\",\n                 total_amnt: \"24000\"\n               }\n             ]\n           },\n           emp_loan_recovery: {\n             create: [\n               {\n                 loan_name_recovery: \"ofiae\",\n                 total_int_amount: \"2000\",\n                 total_install_recovery: \"24\",\n                 monthly_install_recovery: \"100\",\n                 last_paid_install_recovery: \"12\",\n                 month_last_install_recovery: \"2023-02-01\",\n                 total_amnt_recovery: \"2400\"\n               }\n             ]\n           }\n         }\n       })\n\nArgument `total_amnt`: Invalid value provided. Expected Float, provided String. "}
{"level":"error","message":"GET 0.365496999991592 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 1.0895280000404455 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.31472299998858944 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2711819999967702 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2843779999529943 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2539649999816902 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2935909999650903 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.3587770000449382 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.3089489999692887 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2390350000350736 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2916049999766983 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.33747199998470023 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.312750999990385 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.256065999972634 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2813880000030622 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.36351499997545034 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.40680200001224875 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2665280000073835 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2592990000266582 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2345070000155829 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.36322699999436736 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.7301040000165813 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2367460000095889 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.24957899993751198 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.3143019999843091 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2886329999892041 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.24769400001969188 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.24259799998253584 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.31802800006698817 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.3620769999688491 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.38008099992293864 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2451720000244677 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2405909999506548 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2992490000324324 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.24118399992585182 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2884880000492558 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.2504969999426976 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.24563500005751848 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"GET 0.28365500003565103 /api/v1/hrms/employee/get-single/EMP1f9ce1 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:345:41\n\n  342   },\n  343 };\n  344 \n→ 345 const data = await prisma.employees.findFirst({\n        select: {\n          emp_id: true,\n          emp_basic_details: {\n            select: {\n              emp_name: true\n            }\n          },\n          emp_join_details: {\n            select: {\n              department_id: true,\n              designation_id: true,\n              grade_pay: true,\n              task: true,\n              basic_pay: true,\n              pay_band: true,\n              pay_scale: true\n            }\n          }\n        },\n        where: {\n      +   id: {\n      +     equals: Int | IntFieldRefInput,\n      +     in: Int[] | ListIntFieldRefInput,\n      +     notIn: Int[] | ListIntFieldRefInput,\n      +     lt: Int | IntFieldRefInput,\n      +     lte: Int | IntFieldRefInput,\n      +     gt: Int | IntFieldRefInput,\n      +     gte: Int | IntFieldRefInput,\n      +     not: Int | NestedIntFilter\n      +   }\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"POST 0.45693300000129966 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           department_id: 4,\n           designation_id: 5,\n           task: \"dvasdv\",\n           class: \"3\",\n           doj: undefined,\n           effective_pay_commision: \"5\",\n           confirmation_order: \"yes\",\n           pay_scale: undefined,\n           pay_band: undefined,\n           grade_pay: \"23423\",\n                      ~~~~~~~\n           doc: undefined,\n           basic_pay: \"324\",\n           conf_order_number: undefined,\n           deduction_type: \"GPF\",\n           conf_order_date: undefined,\n           member_gis: \"\",\n           appoint_authority: undefined,\n           gis_account: undefined,\n           ulb: undefined,\n           last_inc_order: undefined,\n           name_of_service: undefined,\n           last_inc_order_date: undefined,\n           bank_name: undefined,\n           wef_date: undefined,\n           branch_name: undefined,\n           pf_category: undefined,\n           acc_no: undefined,\n           ifsc: undefined,\n           sen_grade_list: undefined\n         }\n       })\n\nArgument `grade_pay`: Invalid value provided. Expected Float or Null, provided String. "}
{"level":"error","message":"PATCH 0.4980409999843687 /api/v1/hrms/employee/update?1= status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.5415650000795722 /api/v1/hrms/employee/update?1= status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.27534699998795986 /api/v1/hrms/employee/update?1= status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.32205099996645004 /api/v1/hrms/employee/update?i1= status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.38458800001535565 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.26378300006035715 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.2573199999751523 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.24765400006435812 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.38827500003390014 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.2809690000722185 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.24619600002188236 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.34283700003288686 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.24564899993129075 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.23992600000929087 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.24202599993441254 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.6465640000533313 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.4346110000042245 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.23598300002049655 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.26187000004574656 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.2743600000394508 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.2377140000462532 /api/v1/hrms/employee/update?id=1 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: undefined\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"PATCH 0.29498500004410744 /api/v1/hrms/employee/update?id=2 status = false, err = \nInvalid `tx.employees.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:401:38\n\n  398 } = req.body as EditEmpList;\n  399 \n  400 const trans = await prisma.$transaction(async (tx) => {\n→ 401   const emp = await tx.employees.update({\n          where: {\n        +   id: Int\n          },\n          data: {\n            emp_id: \"EMP42342342\"\n          }\n        })\n\nArgument `id` is missing. "}
{"level":"error","message":"POST 0.3235140014439821 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           department_id: 4,\n           designation_id: 5,\n           task: \"dvasdv\",\n           class: \"3\",\n           doj: undefined,\n           effective_pay_commision: \"5\",\n           confirmation_order: \"\",\n           pay_scale: undefined,\n           pay_band: undefined,\n           grade_pay: \"23423\",\n                      ~~~~~~~\n           doc: undefined,\n           basic_pay: \"324\",\n           conf_order_number: undefined,\n           deduction_type: \"GPF\",\n           conf_order_date: undefined,\n           member_gis: \"\",\n           appoint_authority: undefined,\n           gis_account: undefined,\n           ulb: undefined,\n           last_inc_order: undefined,\n           name_of_service: undefined,\n           last_inc_order_date: undefined,\n           bank_name: undefined,\n           wef_date: undefined,\n           branch_name: undefined,\n           pf_category: undefined,\n           acc_no: undefined,\n           ifsc: undefined,\n           sen_grade_list: undefined\n         }\n       })\n\nArgument `grade_pay`: Invalid value provided. Expected Float or Null, provided String. "}
{"level":"error","message":"POST 0.32649399898946285 /api/v1/hrms/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           department_id: 4,\n           designation_id: 5,\n           task: \"dvasdv\",\n           class: \"3\",\n           doj: undefined,\n           effective_pay_commision: \"5\",\n           confirmation_order: \"\",\n           pay_scale: undefined,\n           pay_band: undefined,\n           grade_pay: \"23423\",\n                      ~~~~~~~\n           doc: undefined,\n           basic_pay: \"324\",\n           conf_order_number: undefined,\n           deduction_type: \"GPF\",\n           conf_order_date: undefined,\n           member_gis: \"\",\n           appoint_authority: undefined,\n           gis_account: undefined,\n           ulb: undefined,\n           last_inc_order: undefined,\n           name_of_service: undefined,\n           last_inc_order_date: undefined,\n           bank_name: undefined,\n           wef_date: undefined,\n           branch_name: undefined,\n           pf_category: undefined,\n           acc_no: undefined,\n           ifsc: undefined,\n           sen_grade_list: undefined\n         }\n       })\n\nArgument `grade_pay`: Invalid value provided. Expected Float or Null, provided String. "}
{"level":"error","message":"POST 1.1224680000450462 /api/hrms/v1/employee/remove status = false, err = Record to update not found. "}
{"level":"error","message":"POST 0.6198579999618232 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_loan: {\n             create: [\n               {\n                 loan_account_num: \"5345\",\n                 sanc_order_num: \"345\",\n                 loan_name_det: \"Motor Cycle Adv.\"\n               }\n             ]\n           },\n           emp_loan_Principal: {\n             create: []\n           },\n           emp_loan_recovery: {\n             create: []\n           }\n         }\n       })\n\nArgument `dos` is missing. "}
{"level":"error","message":"POST 0.3588739996775985 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_image: \"path/to/image.jpg\",\n           emp_name: \"Johny Doe\",\n           mode_of_recruitment: \"casd\",\n           contact_no: \"123456789065\",\n           emg_contact_no: \"9876543210\",\n           aadhar_no: \"123456789012\",\n           epic_no: \"24233\",\n           gender: \"casd\",\n           pran: \"123456789012\",\n           emp_type: \"csdc\",\n           weight: \"70\",\n           height: \"175\",\n           cps: \"525\",\n           gps: \"5325\",\n           dob: \"1990-01-01T00:00:00.000Z\",\n       +   emp_id: String\n         }\n       })\n\nArgument `emp_id` must not be null. "}
{"level":"error","message":"POST 0.3160900000075344 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_image: \"path/to/image.jpg\",\n           emp_name: \"Johny Doe\",\n           mode_of_recruitment: \"casd\",\n           contact_no: \"123456789065\",\n           emg_contact_no: \"9876543210\",\n           aadhar_no: \"123456789012\",\n           epic_no: \"24233\",\n           gender: \"casd\",\n           pran: \"123456789012\",\n           emp_type: \"csdc\",\n           weight: \"70\",\n           height: \"175\",\n           cps: \"525\",\n           gps: \"5325\",\n           dob: \"1990-01-01T00:00:00.000Z\",\n       +   emp_id: String\n         }\n       })\n\nArgument `emp_id` is missing. "}
{"level":"error","message":"POST 0.3415779999922961 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_image: \"path/to/image.jpg\",\n           emp_name: \"Johny Doe\",\n           mode_of_recruitment: \"casd\",\n           contact_no: \"123456789065\",\n           emg_contact_no: \"9876543210\",\n           aadhar_no: \"123456789012\",\n           epic_no: \"24233\",\n           gender: \"casd\",\n           pran: \"123456789012\",\n           emp_type: \"csdc\",\n           weight: \"70\",\n           height: \"175\",\n           cps: \"525\",\n           gps: \"5325\",\n           dob: \"1990-01-01T00:00:00.000Z\",\n       +   emp_id: String\n         }\n       })\n\nArgument `emp_id` must not be null. "}
{"level":"error","message":"POST 1.881708000000799 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.employee_attendance_history.createMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:23:59\n\n  20   },\n  21 };\n  22 \n→ 23 const data = await prisma.employee_attendance_history.createMany({\n       data: {\n         status: true,\n     +   emp_in: DateTime\n       }\n     })\n\nArgument `emp_in` is missing. "}
{"level":"error","message":"POST 0.4613599999938742 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.employee_attendance_history.createMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:23:59\n\n  20   },\n  21 };\n  22 \n→ 23 const data = await prisma.employee_attendance_history.createMany({\n       data: {\n         emp_in: \"2024-03-30 07:10:40.928\",\n                 ~~~~~~~~~~~~~~~~~~~~~~~~~\n         status: true\n       }\n     })\n\nInvalid value for argument `emp_in`: input contains invalid characters. Expected ISO-8601 DateTime. "}
{"level":"error","message":"POST 0.41342500000610016 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_image: \"path/to/image.jpg\",\n           emp_name: \"Johny Doe\",\n           mode_of_recruitment: \"casd\",\n           contact_no: \"123456789065\",\n           emg_contact_no: \"9876543210\",\n           aadhar_no: \"123456789012\",\n           epic_no: \"24233\",\n           gender: \"casd\",\n           pran: \"123456789012\",\n           emp_type: \"csdc\",\n           weight: \"70\",\n           height: \"175\",\n           cps: \"525\",\n           gps: \"5325\",\n           dob: \"1990-01-01T00:00:00.000Z\",\n       +   emp_id: String\n         }\n       })\n\nArgument `emp_id` must not be null. "}
{"level":"error","message":"POST 0.5280560000101104 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_office_details_id: 2,\n           emp_basic_details_id: 1,\n           emp_id: \"csa\",\n           emp_type: 1,\n           emp_personal_details_id: 1,\n           emp_address_details_id: 1,\n           emp_join_details_id: 1,\n           emp_salary_details_id: 1,\n           emp_loan_details_id: 1,\n           emp_family_details: {\n             create: [\n               {\n                 name: \"g4twg\",\n                 relation: \"4g4\",\n                 dob: \"g5g\",\n                 dependent: \"yes\"\n               },\n               {\n                 name: \"g4\",\n                 relation: \"g45\",\n                 dob: \"g45\",\n                 dependent: \"no\"\n               }\n             ]\n           },\n           emp_nominee_details: {\n             create: [\n               {\n                 nominee_name: \"John Doe\",\n                 relation: \"Spouse\",\n                 percentage: 50.5,\n                 address: \"123 Main St\",\n                 minor: \"No\"\n               },\n               {\n                 nominee_name: \"Jane Doe\",\n                 relation: \"Child\",\n                 percentage: 49.5,\n                 address: \"456 Oak St\",\n                 minor: \"yes\"\n               }\n             ]\n           },\n           emp_increment_details: {\n             create: [\n               {\n                 scale: \"A\",\n                 inc_date: \"2022-02-28\",\n                 inc_amount: 5000,\n                 basic_pay_after_inc: 55000,\n                 vide_order_no: \"V123\",\n                 vide_order_date: \"2022-03-01\"\n               }\n             ]\n           },\n           emp_promotion_details: {\n             create: [\n               {\n                 designation: {\n                   from: \"Manager\",\n                   to: \"Senior\"\n                 },\n                 scale: {\n                   from: \"A\",\n                   to: \"1\"\n                 },\n                 vide_order_no: \"V456\",\n                 vide_order_date: \"2022-03-15\",\n                 transfer: \"yes\"\n               }\n             ]\n           },\n           emp_timebound_details: {\n             create: [\n               {\n                 pay_scale: {\n                   from: \"casd\",\n                   to: \"cad\"\n                 },\n                 inc_amt: \"5000\",\n                 b_after_pay: \"55000\",\n                 vide_order_no: \"V123\",\n                 vide_order_date: \"2022-03-01T12:34:56.789Z\",\n                 remarks: \"Example remark\"\n               }\n             ]\n           },\n           emp_education_details: {\n             create: [\n               {\n                 edu_level: \"Matriculation\",\n                 stream: \"vdsfv\",\n                 board: \"dfvdsf\",\n                 passing_year: \"3434\",\n                 grade: \"1st\",\n                 upload_edu: \"C:\\\\fakepath\\\\Screenshot 2024-02-14 172443.png\",\n                 marks: 100\n               },\n               {\n                 edu_level: \"Intermediate\",\n                 stream: null,\n                 board: null,\n                 passing_year: null,\n                 grade: null,\n                 upload_edu: null\n               }\n             ]\n           },\n           emp_training_details: {\n             create: [\n               {\n                 name_of_training: \"acas\",\n                 training_type: \"Basic\",\n                 name_of_inst: \"casdcasd\",\n                 starting_from: {\n                   from: \"2323-03-03\"\n                 },\n                 end_to: {\n                   to: \"2323-03-03\"\n                 },\n                 tot_day_training: \"234\",\n                 upload_edu: \"C:\\\\fakepath\\\\Screenshot 2024-02-14 172443.png\"\n               }\n             ]\n           },\n       +   emp_office_details: {\n       +     create: employee_office_detailsCreateWithoutEmployeeInput | employee_office_detailsUncheckedCreateWithoutEmployeeInput,\n       +     connectOrCreate: employee_office_detailsCreateOrConnectWithoutEmployeeInput,\n       +     connect: employee_office_detailsWhereUniqueInput\n       +   }\n         }\n       })\n\nArgument `emp_office_details` is missing. "}
{"level":"error","message":"POST 1.7882950000002893 /api/hrms/v1/employee/attendance/update status = false, err = \nInvalid `prisma.employee_attendance_history.update()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:44:59\n\n  41 if (!id && id === \"undefined\" && id === \"\") {\n  42   return generateRes({ status: \"not found\" });\n  43 }\n→ 44 const data = await prisma.employee_attendance_history.update({\n       data: {\n         emp_out: \"2024-03-30T11:12:09.257Z\",\n         status: true\n       },\n       where: {\n         id: undefined,\n     ?   AND?: employee_attendance_historyWhereInput | employee_attendance_historyWhereInput[],\n     ?   OR?: employee_attendance_historyWhereInput[],\n     ?   NOT?: employee_attendance_historyWhereInput | employee_attendance_historyWhereInput[],\n     ?   emp_in?: DateTimeFilter | DateTime,\n     ?   emp_out?: DateTimeNullableFilter | DateTime | Null,\n     ?   status?: BoolFilter | Boolean,\n     ?   employee_id?: IntFilter | Int,\n     ?   created_at?: DateTimeFilter | DateTime,\n     ?   updated_at?: DateTimeFilter | DateTime,\n     ?   employee?: EmployeesRelationFilter | employeesWhereInput\n       }\n     })\n\nArgument `where` of type employee_attendance_historyWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?. "}
{"level":"error","message":"POST 0.5897110000005341 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:86:34\n\n  83 if (isMany) {\n  84   return await tx[tableName].createMany({ data });\n  85 } else {\n→ 86   return await tx[tableName].create(\nUnique constraint failed on the fields: (`emp_id`) "}
{"level":"error","message":"POST 0.34938500000862405 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.employee_attendance_history.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:24:59\n\n  21   },\n  22 };\n  23 \n→ 24 const data = await prisma.employee_attendance_history.create({\n       data: {\n         emp_in: \"2024-03-30T12:02:06.247Z\",\n         status: true,\n         employee_id: undefined,\n     +   employee: {\n     +     create: employeesCreateWithoutEmp_attendanceInput | employeesUncheckedCreateWithoutEmp_attendanceInput,\n     +     connectOrCreate: employeesCreateOrConnectWithoutEmp_attendanceInput,\n     +     connect: employeesWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `employee` is missing. "}
{"level":"error","message":"POST 2.1751359999998385 /api/hrms/v1/employee/update status = false, err = Record to update not found. "}
{"level":"error","message":"POST 0.45594600000003993 /api/hrms/v1/employee/update status = false, err = Record to update not found. "}
{"level":"error","message":"POST 0.4284590000024764 /api/hrms/v1/employee/update status = false, err = Record to update not found. "}
{"level":"error","message":"POST 0.53291999999783 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_image: \"path/to/image.jpg\",\n           emp_name: \"Johny Doe\",\n           mode_of_recruitment: \"casd\",\n           contact_no: \"123456789065\",\n           emg_contact_no: \"9876543210\",\n           aadhar_no: \"123456789012\",\n           epic_no: \"24233\",\n           gender: \"casd\",\n           pran: \"123456789012\",\n           emp_type: \"csdc\",\n           weight: \"70\",\n           height: \"175\",\n           cps: \"525\",\n           gps: \"5325\",\n           dob: \"1990-01-01T00:00:00.000Z\",\n       +   emp_id: String\n         }\n       })\n\nArgument `emp_id` must not be null. "}
{"level":"error","message":"POST 0.382458999985829 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_image: \"path/to/image.jpg\",\n           emp_name: \"Johny Doe\",\n           mode_of_recruitment: \"casd\",\n           contact_no: \"123456789065\",\n           emg_contact_no: \"9876543210\",\n           aadhar_no: \"123456789012\",\n           epic_no: \"24233\",\n           gender: \"casd\",\n           pran: \"123456789012\",\n           emp_type: \"csdc\",\n           weight: \"70\",\n           height: \"175\",\n           cps: \"525\",\n           gps: \"5325\",\n           dob: \"1990-01-01T00:00:00.000Z\",\n       +   emp_id: String\n         }\n       })\n\nArgument `emp_id` must not be null. "}
{"level":"error","message":"POST 2.0323550000002797 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_image: \"path/to/image.jpg\",\n           emp_name: \"Johny Doe\",\n           mode_of_recruitment: \"casd\",\n           contact_no: \"123456789065\",\n           emg_contact_no: \"9876543210\",\n           aadhar_no: \"123456789012\",\n           epic_no: \"24233\",\n           gender: \"casd\",\n           pran: \"123456789012\",\n           emp_type: \"csdc\",\n           weight: \"70\",\n           height: \"175\",\n           cps: \"525\",\n           gps: \"5325\",\n           dob: \"1990-01-01T00:00:00.000Z\",\n       +   emp_id: String\n         }\n       })\n\nArgument `emp_id` must not be null. "}
{"level":"error","message":"POST 2.0899199999985285 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_image: \"path/to/image.jpg\",\n           emp_name: \"Johny Doe\",\n           mode_of_recruitment: \"casd\",\n           contact_no: \"123456789065\",\n           emg_contact_no: \"9876543210\",\n           aadhar_no: \"123456789012\",\n           epic_no: \"24233\",\n           gender: \"casd\",\n           pran: \"123456789012\",\n           emp_type: \"csdc\",\n           weight: \"70\",\n           height: \"175\",\n           cps: \"525\",\n           gps: \"5325\",\n           dob: \"1990-01-01T00:00:00.000Z\",\n       +   emp_id: String\n         }\n       })\n\nArgument `emp_id` must not be null. "}
{"level":"error","message":"POST 0.4188490000087768 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_loan: {\n             create: [\n               []\n             ]\n             ~~~~\n           },\n           emp_loan_Principal: {\n             create: [\n               []\n             ]\n           },\n           emp_loan_recovery: {\n             create: [\n               []\n             ]\n           }\n         }\n       })\n\nArgument `create`: Invalid value provided. Expected employee_loanCreateWithoutEmp_loan_detailsInput or employee_loanUncheckedCreateWithoutEmp_loan_detailsInput, provided (). "}
{"level":"error","message":"POST 0.4266920001246035 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_loan: {\n             create: [\n               []\n             ]\n             ~~~~\n           },\n           emp_loan_Principal: {\n             create: [\n               []\n             ]\n           },\n           emp_loan_recovery: {\n             create: [\n               []\n             ]\n           }\n         }\n       })\n\nArgument `create`: Invalid value provided. Expected employee_loanCreateWithoutEmp_loan_detailsInput or employee_loanUncheckedCreateWithoutEmp_loan_detailsInput, provided (). "}
{"level":"error","message":"POST 0.32603700016625226 /api/hrms/v1/employee/create status = false, err = Cannot destructure property 'emp_education' of 'emp_education_details' as it is undefined. "}
{"level":"error","message":"POST 0.37940099998377264 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_loan: {\n             create: [\n               []\n             ]\n             ~~~~\n           },\n           emp_loan_Principal: {\n             create: [\n               []\n             ]\n           },\n           emp_loan_recovery: {\n             create: [\n               []\n             ]\n           }\n         }\n       })\n\nArgument `create`: Invalid value provided. Expected employee_loanCreateWithoutEmp_loan_detailsInput or employee_loanUncheckedCreateWithoutEmp_loan_detailsInput, provided (). "}
{"level":"error","message":"POST 0.30094999982975423 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_loan: {\n             create: [\n               []\n             ]\n             ~~~~\n           },\n           emp_loan_Principal: {\n             create: [\n               []\n             ]\n           },\n           emp_loan_recovery: {\n             create: [\n               []\n             ]\n           }\n         }\n       })\n\nArgument `create`: Invalid value provided. Expected employee_loanCreateWithoutEmp_loan_detailsInput or employee_loanUncheckedCreateWithoutEmp_loan_detailsInput, provided (). "}
{"level":"error","message":"POST 0.2881250004284084 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_loan: {\n             create: [\n               []\n             ]\n             ~~~~\n           },\n           emp_loan_Principal: {\n             create: [\n               []\n             ]\n           },\n           emp_loan_recovery: {\n             create: [\n               []\n             ]\n           }\n         }\n       })\n\nArgument `create`: Invalid value provided. Expected employee_loanCreateWithoutEmp_loan_detailsInput or employee_loanUncheckedCreateWithoutEmp_loan_detailsInput, provided (). "}
{"level":"error","message":"POST 0.39505999999892083 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.employee_attendance_history.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:36:59\n\n  33   },\n  34 };\n  35 \n→ 36 const data = await prisma.employee_attendance_history.create({\n       data: {\n         emp_in: \"9:52 AM\",\n                 ~~~~~~~~~\n         status: true,\n         employee_id: \"EMP332a2e\"\n       }\n     })\n\nInvalid value for argument `emp_in`: input contains invalid characters. Expected ISO-8601 DateTime. "}
{"level":"error","message":"POST 1.838224999999511 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.employee_attendance_history.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:36:59\n\n  33   },\n  34 };\n  35 \n→ 36 const data = await prisma.employee_attendance_history.create(\nForeign key constraint failed on the field: `employee_attendance_history_employee_id_fkey (index)` "}
{"level":"error","message":"POST 0.4432970000016212 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.employee_attendance_history.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:36:59\n\n  33   },\n  34 };\n  35 \n→ 36 const data = await prisma.employee_attendance_history.create(\nForeign key constraint failed on the field: `employee_attendance_history_employee_id_fkey (index)` "}
{"level":"error","message":"POST 0.357929999998305 /api/hrms/v1/employee/attendance/update status = false, err = \nInvalid `prisma.employee_attendance_history.updateMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:69:59\n\n  66 if (!emp_id && emp_id === \"undefined\" && emp_id === \"\") {\n  67   return generateRes({ status: \"not found\" });\n  68 }\n→ 69 const data = await prisma.employee_attendance_history.updateMany({\n       where: {\n         employee_id: \"EMP912e43\",\n         id: \"2\"\n             ~~~\n       },\n       data: {\n         emp_out: \"12:34 PM\",\n         status: true\n       }\n     })\n\nArgument `id`: Invalid value provided. Expected IntFilter or Int, provided String. "}
{"level":"error","message":"POST 0.35822799999732524 /api/hrms/v1/employee/attendance/update status = false, err = \nInvalid `prisma.employee_attendance_history.updateMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:69:59\n\n  66 if (!emp_id && emp_id === \"undefined\" && emp_id === \"\") {\n  67   return generateRes({ status: \"not found\" });\n  68 }\n→ 69 const data = await prisma.employee_attendance_history.updateMany({\n       where: {\n         employee_id: \"EMP912e43\",\n         id: {\n           status: true,\n           ~~~~~~\n           message: \"Employee Attendance Found Successfully\",\n           meta-data: {\n             apiId: \"0303\",\n             version: \"1.0\",\n             action: \"GET\"\n           },\n           data: {\n             totalPage: 0,\n             data: [\n               {\n                 id: 3,\n                 employee_id: \"EMP912e43\",\n                 emp_in: \"12:00 PM\",\n                 emp_out: \"12:36 PM\",\n                 date: \"2024-04-05\",\n                 created_at: \"2024-04-05T06:30:56.629Z\",\n                 updated_at: \"2024-04-03T07:06:48.736Z\"\n               },\n               {\n                 id: 2,\n                 employee_id: \"EMP912e43\",\n                 emp_in: \"12:00 PM\",\n                 emp_out: \"12:36 PM\",\n                 date: \"2024-04-04\",\n                 created_at: \"2024-04-04T06:30:56.272Z\",\n                 updated_at: \"2024-04-03T07:06:48.736Z\"\n               }\n             ]\n           },\n     ?     equals?: Int | IntFieldRefInput,\n     ?     in?: Int[] | ListIntFieldRefInput,\n     ?     notIn?: Int[] | ListIntFieldRefInput,\n     ?     lt?: Int | IntFieldRefInput,\n     ?     lte?: Int | IntFieldRefInput,\n     ?     gt?: Int | IntFieldRefInput,\n     ?     gte?: Int | IntFieldRefInput,\n     ?     not?: Int | NestedIntFilter\n         }\n       },\n       data: {\n         emp_out: \"12:37 PM\",\n         status: true\n       }\n     })\n\nUnknown argument `status`. Available options are marked with ?. "}
{"level":"error","message":"POST 0.27746399998432025 /api/hrms/v1/employee/attendance/update status = false, err = \nInvalid `prisma.employee_attendance_history.updateMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:69:59\n\n  66 if (!emp_id && emp_id === \"undefined\" && emp_id === \"\") {\n  67   return generateRes({ status: \"not found\" });\n  68 }\n→ 69 const data = await prisma.employee_attendance_history.updateMany({\n       where: {\n         employee_id: \"EMP912e43\",\n         id: {\n           totalPage: 0,\n           ~~~~~~~~~\n           data: [\n             {\n               id: 3,\n               employee_id: \"EMP912e43\",\n               emp_in: \"12:00 PM\",\n               emp_out: \"12:36 PM\",\n               date: \"2024-04-05\",\n               created_at: \"2024-04-05T06:30:56.629Z\",\n               updated_at: \"2024-04-03T07:06:48.736Z\"\n             },\n             {\n               id: 2,\n               employee_id: \"EMP912e43\",\n               emp_in: \"12:00 PM\",\n               emp_out: \"12:36 PM\",\n               date: \"2024-04-04\",\n               created_at: \"2024-04-04T06:30:56.272Z\",\n               updated_at: \"2024-04-03T07:06:48.736Z\"\n             }\n           ],\n     ?     equals?: Int | IntFieldRefInput,\n     ?     in?: Int[] | ListIntFieldRefInput,\n     ?     notIn?: Int[] | ListIntFieldRefInput,\n     ?     lt?: Int | IntFieldRefInput,\n     ?     lte?: Int | IntFieldRefInput,\n     ?     gt?: Int | IntFieldRefInput,\n     ?     gte?: Int | IntFieldRefInput,\n     ?     not?: Int | NestedIntFilter\n         }\n       },\n       data: {\n         emp_out: \"12:37 PM\",\n         status: true\n       }\n     })\n\nUnknown argument `totalPage`. Available options are marked with ?. "}
{"level":"error","message":"POST 0.3068170000333339 /api/hrms/v1/employee/attendance/update status = false, err = \nInvalid `prisma.employee_attendance_history.updateMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:69:59\n\n  66 if (!emp_id && emp_id === \"undefined\" && emp_id === \"\") {\n  67   return generateRes({ status: \"not found\" });\n  68 }\n→ 69 const data = await prisma.employee_attendance_history.updateMany({\n       where: {\n         employee_id: \"EMP912e43\",\n         id: [\n           {\n             id: 3,\n             employee_id: \"EMP912e43\",\n             emp_in: \"12:00 PM\",\n             emp_out: \"12:36 PM\",\n             date: \"2024-04-05\",\n             created_at: \"2024-04-05T06:30:56.629Z\",\n             updated_at: \"2024-04-03T07:06:48.736Z\"\n           },\n           {\n             id: 2,\n             employee_id: \"EMP912e43\",\n             emp_in: \"12:00 PM\",\n             emp_out: \"12:36 PM\",\n             date: \"2024-04-04\",\n             created_at: \"2024-04-04T06:30:56.272Z\",\n             updated_at: \"2024-04-03T07:06:48.736Z\"\n           }\n         ]\n         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n       },\n       data: {\n         emp_out: \"12:37 PM\",\n         status: true\n       }\n     })\n\nArgument `id`: Invalid value provided. Expected IntFilter or Int, provided (Object, Object). "}
{"level":"error","message":"POST 0.3875099999131635 /api/hrms/v1/employee/attendance/update status = false, err = \nInvalid `prisma.employee_attendance_history.updateMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:69:59\n\n  66 if (!emp_id && emp_id === \"undefined\" && emp_id === \"\") {\n  67   return generateRes({ status: \"not found\" });\n  68 }\n→ 69 const data = await prisma.employee_attendance_history.updateMany({\n       where: {\n         employee_id: \"EMP912e43\",\n         id: [\n           {\n             id: 3,\n             employee_id: \"EMP912e43\",\n             emp_in: \"12:00 PM\",\n             emp_out: \"12:36 PM\",\n             date: \"2024-04-05\",\n             created_at: \"2024-04-05T06:30:56.629Z\",\n             updated_at: \"2024-04-03T07:06:48.736Z\"\n           },\n           {\n             id: 2,\n             employee_id: \"EMP912e43\",\n             emp_in: \"12:00 PM\",\n             emp_out: \"12:36 PM\",\n             date: \"2024-04-04\",\n             created_at: \"2024-04-04T06:30:56.272Z\",\n             updated_at: \"2024-04-03T07:06:48.736Z\"\n           }\n         ]\n         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n       },\n       data: {\n         emp_out: \"12:44 PM\",\n         status: true\n       }\n     })\n\nArgument `id`: Invalid value provided. Expected IntFilter or Int, provided (Object, Object). "}
{"level":"error","message":"POST 0.3053589998744428 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.employee_attendance_history.create()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:48:59\n\n  45   },\n  46 };\n  47 \n→ 48 const data = await prisma.employee_attendance_history.create({\n       data: {\n         emp_in: \"1:02 PM\",\n         status: true,\n         date: \"2024-04-03\",\n         lat: 1212.21212,\n         lang: 2423.3232,\n         employee_id: undefined,\n     +   employee: {\n     +     create: employeesCreateWithoutEmp_attendanceInput | employeesUncheckedCreateWithoutEmp_attendanceInput,\n     +     connectOrCreate: employeesCreateOrConnectWithoutEmp_attendanceInput,\n     +     connect: employeesWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `employee` is missing. "}
{"level":"error","message":"POST 0.42151600000215694 /api/hrms/v1/employee/attendance/update status = false, err = Record to update not found. "}
{"level":"error","message":"GET 0.4166600000462495 /api/hrms/v1/employee/get?limit=10 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:329:24\n\n  326 }\n  327 \n  328 const [data, count] = await prisma.$transaction([\n→ 329   prisma.employees.findMany({\n          take: 10,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + skip: Int\n        })\n\nArgument `skip` is missing. "}
{"level":"error","message":"GET 0.36712800001259893 /api/hrms/v1/employee/get?limit=10?emp_id= status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:329:24\n\n  326 }\n  327 \n  328 const [data, count] = await prisma.$transaction([\n→ 329   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.2924570000031963 /api/hrms/v1/employee/get?limit=10?emp_id=%7B%7D status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:329:24\n\n  326 }\n  327 \n  328 const [data, count] = await prisma.$transaction([\n→ 329   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.4818620000150986 /api/hrms/v1/employee/get?limit=10?emp_id=%7Bem%7D status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:329:24\n\n  326 }\n  327 \n  328 const [data, count] = await prisma.$transaction([\n→ 329   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.3144620000384748 /api/hrms/v1/employee/get?limit=10?emp_id=undefined status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:329:24\n\n  326 }\n  327 \n  328 const [data, count] = await prisma.$transaction([\n→ 329   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.457750000001397 /api/hrms/v1/employee/get?limit=10?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:329:24\n\n  326 }\n  327 \n  328 const [data, count] = await prisma.$transaction([\n→ 329   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.3045399999828078 /api/hrms/v1/employee/get?limit=10?emp_id=undefined status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:329:24\n\n  326 }\n  327 \n  328 const [data, count] = await prisma.$transaction([\n→ 329   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.2175510000088252 /api/hrms/v1/employee/get?limit=10?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:329:24\n\n  326 }\n  327 \n  328 const [data, count] = await prisma.$transaction([\n→ 329   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.35389599995687604 /api/hrms/v1/employee/get?limit=10?emp_id=undefined status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:329:24\n\n  326 }\n  327 \n  328 const [data, count] = await prisma.$transaction([\n→ 329   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.28124399995431304 /api/hrms/v1/employee/get?limit=10?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:329:24\n\n  326 }\n  327 \n  328 const [data, count] = await prisma.$transaction([\n→ 329   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.5448249999899417 /api/hrms/v1/employee/get?limit=10?emp_id=undefined status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:329:24\n\n  326 }\n  327 \n  328 const [data, count] = await prisma.$transaction([\n→ 329   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.2746380000608042 /api/hrms/v1/employee/get?limit=10?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:329:24\n\n  326 }\n  327 \n  328 const [data, count] = await prisma.$transaction([\n→ 329   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.31877300003543496 /api/hrms/v1/employee/get?limit=10?emp_id=undefined status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:329:24\n\n  326 }\n  327 \n  328 const [data, count] = await prisma.$transaction([\n→ 329   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.5437110000057146 /api/hrms/v1/employee/get?limit=10?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:329:24\n\n  326 }\n  327 \n  328 const [data, count] = await prisma.$transaction([\n→ 329   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.2961420000065118 /api/hrms/v1/employee/get?limit=10?emp_id=undefined status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:329:24\n\n  326 }\n  327 \n  328 const [data, count] = await prisma.$transaction([\n→ 329   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.3066950000356883 /api/hrms/v1/employee/get?limit=10?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:329:24\n\n  326 }\n  327 \n  328 const [data, count] = await prisma.$transaction([\n→ 329   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.5429470000090078 /api/hrms/v1/employee/get?limit=10/undefined status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:329:24\n\n  326 }\n  327 \n  328 const [data, count] = await prisma.$transaction([\n→ 329   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.4261720000067726 /api/hrms/v1/employee/get?limit=10/EMP912e43 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:329:24\n\n  326 }\n  327 \n  328 const [data, count] = await prisma.$transaction([\n→ 329   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.27353799995034933 /api/hrms/v1/employee/get?limit=10/undefined status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:329:24\n\n  326 }\n  327 \n  328 const [data, count] = await prisma.$transaction([\n→ 329   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 0.3039599999319762 /api/hrms/v1/employee/get?limit=10/EMP912e43 status = false, err = \nInvalid `prisma.employees.findMany()` invocation in\n/home/krish/Desktop/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:329:24\n\n  326 }\n  327 \n  328 const [data, count] = await prisma.$transaction([\n→ 329   prisma.employees.findMany({\n          skip: NaN,\n          select: {\n            emp_id: true,\n            emp_basic_details: {\n              select: {\n                emp_name: true\n              }\n            },\n            emp_join_details: {\n              select: {\n                department: true,\n                grade_pay: true\n              }\n            },\n            created_at: true,\n            updated_at: true\n          },\n          where: {\n            emp_del: 0\n          },\n        + take: Int\n        })\n\nArgument `take` is missing. "}
{"level":"error","message":"GET 2.0434339999992517 /api/hrms/v1/employee/attendance/get?emp_id=undefined status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:122:59\n\n  119   };\n  120 }\n  121 \n→ 122 const data = await prisma.employee_attendance_history.findMany(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.3502359999984037 /api/hrms/v1/employee/holidays status = false, err = \nInvalid `prisma.holidays.findMany()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/holidays.dao.ts:13:40\n\n  10 \n  11 class HolidaysDao {\n  12   get = async () => {\n→ 13     const data = await prisma.holidays.findMany(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.3330209999985527 /api/hrms/v1/master/department status = false, err = \nInvalid `prisma.department.findMany()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/master/department.dao.ts:8:42\n\n  5 \n  6 class DepartmentDao {\n  7   get = async () => {\n→ 8     const data = await prisma.department.findMany(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.35830600000190316 /api/hrms/v1/employee/get-single/undefined status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:382:41\n\n  379   },\n  380 };\n  381 \n→ 382 const data = await prisma.employees.findFirst(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.37225300000136485 /api/hrms/v1/employee/attendance/get?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:122:59\n\n  119   };\n  120 }\n  121 \n→ 122 const data = await prisma.employee_attendance_history.findMany(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.5544410000002244 /api/hrms/v1/employee/get-single/EMP912e43 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:382:41\n\n  379   },\n  380 };\n  381 \n→ 382 const data = await prisma.employees.findFirst(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.4795010000016191 /api/hrms/v1/employee/attendance/get?emp_id=undefined status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:122:59\n\n  119   };\n  120 }\n  121 \n→ 122 const data = await prisma.employee_attendance_history.findMany(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.30085500000132015 /api/hrms/v1/master/department status = false, err = \nInvalid `prisma.department.findMany()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/master/department.dao.ts:8:42\n\n  5 \n  6 class DepartmentDao {\n  7   get = async () => {\n→ 8     const data = await prisma.department.findMany(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.5081889999928535 /api/hrms/v1/employee/get-single/undefined status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:382:41\n\n  379   },\n  380 };\n  381 \n→ 382 const data = await prisma.employees.findFirst(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.3700349999999162 /api/hrms/v1/master/department status = false, err = \nInvalid `prisma.department.findMany()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/master/department.dao.ts:8:42\n\n  5 \n  6 class DepartmentDao {\n  7   get = async () => {\n→ 8     const data = await prisma.department.findMany(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.36037300000316463 /api/hrms/v1/employee/attendance/get?emp_id=undefined status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:122:59\n\n  119   };\n  120 }\n  121 \n→ 122 const data = await prisma.employee_attendance_history.findMany(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.31850500000291504 /api/hrms/v1/employee/holidays status = false, err = \nInvalid `prisma.holidays.findMany()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/holidays.dao.ts:13:40\n\n  10 \n  11 class HolidaysDao {\n  12   get = async () => {\n→ 13     const data = await prisma.holidays.findMany(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.40035399999760557 /api/hrms/v1/master/department status = false, err = \nInvalid `prisma.department.findMany()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/master/department.dao.ts:8:42\n\n  5 \n  6 class DepartmentDao {\n  7   get = async () => {\n→ 8     const data = await prisma.department.findMany(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.275340000000142 /api/hrms/v1/employee/get-single/undefined status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:382:41\n\n  379   },\n  380 };\n  381 \n→ 382 const data = await prisma.employees.findFirst(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.30611200000566896 /api/hrms/v1/employee/attendance/get?emp_id=undefined status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:122:59\n\n  119   };\n  120 }\n  121 \n→ 122 const data = await prisma.employee_attendance_history.findMany(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.24977200000284938 /api/hrms/v1/master/department status = false, err = \nInvalid `prisma.department.findMany()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/master/department.dao.ts:8:42\n\n  5 \n  6 class DepartmentDao {\n  7   get = async () => {\n→ 8     const data = await prisma.department.findMany(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.3305289999989327 /api/hrms/v1/employee/get-single/undefined status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:382:41\n\n  379   },\n  380 };\n  381 \n→ 382 const data = await prisma.employees.findFirst(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.2913840000037453 /api/hrms/v1/employee/attendance/get?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:122:59\n\n  119   };\n  120 }\n  121 \n→ 122 const data = await prisma.employee_attendance_history.findMany(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.3722300000008545 /api/hrms/v1/employee/get-single/EMP912e43 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:382:41\n\n  379   },\n  380 };\n  381 \n→ 382 const data = await prisma.employees.findFirst(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.3642360000012559 /api/hrms/v1/master/department status = false, err = \nInvalid `prisma.department.findMany()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/master/department.dao.ts:8:42\n\n  5 \n  6 class DepartmentDao {\n  7   get = async () => {\n→ 8     const data = await prisma.department.findMany(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 2.937431999999717 /api/hrms/v1/employee/attendance/get?emp_id=undefined status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:122:59\n\n  119   };\n  120 }\n  121 \n→ 122 const data = await prisma.employee_attendance_history.findMany(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.4662850000004255 /api/hrms/v1/employee/holidays status = false, err = \nInvalid `prisma.holidays.findMany()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/holidays.dao.ts:13:40\n\n  10 \n  11 class HolidaysDao {\n  12   get = async () => {\n→ 13     const data = await prisma.holidays.findMany(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.3031120000005103 /api/hrms/v1/master/department status = false, err = \nInvalid `prisma.department.findMany()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/master/department.dao.ts:8:42\n\n  5 \n  6 class DepartmentDao {\n  7   get = async () => {\n→ 8     const data = await prisma.department.findMany(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.35776199999963865 /api/hrms/v1/employee/get-single/undefined status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:382:41\n\n  379   },\n  380 };\n  381 \n→ 382 const data = await prisma.employees.findFirst(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.36599699999987934 /api/hrms/v1/employee/attendance/get?emp_id=undefined status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:122:59\n\n  119   };\n  120 }\n  121 \n→ 122 const data = await prisma.employee_attendance_history.findMany(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.2827770000003511 /api/hrms/v1/master/department status = false, err = \nInvalid `prisma.department.findMany()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/master/department.dao.ts:8:42\n\n  5 \n  6 class DepartmentDao {\n  7   get = async () => {\n→ 8     const data = await prisma.department.findMany(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.35057400000005146 /api/hrms/v1/employee/get-single/undefined status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:382:41\n\n  379   },\n  380 };\n  381 \n→ 382 const data = await prisma.employees.findFirst(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.33338999999978114 /api/hrms/v1/employee/attendance/get?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.employee_attendance_history.findMany()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:122:59\n\n  119   };\n  120 }\n  121 \n→ 122 const data = await prisma.employee_attendance_history.findMany(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.3095790000006673 /api/hrms/v1/employee/get-single/EMP912e43 status = false, err = \nInvalid `prisma.employees.findFirst()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:382:41\n\n  379   },\n  380 };\n  381 \n→ 382 const data = await prisma.employees.findFirst(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"GET 0.3675069999999323 /api/hrms/v1/master/department status = false, err = \nInvalid `prisma.department.findMany()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/master/department.dao.ts:8:42\n\n  5 \n  6 class DepartmentDao {\n  7   get = async () => {\n→ 8     const data = await prisma.department.findMany(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:11\n   | \n10 |   provider = \"postgresql\"\n11 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1 "}
{"level":"error","message":"POST 0.29857099999208003 /api/hrms/v1/employee/attendance/update status = false, err = Record to update not found. "}
{"level":"error","message":"POST 0.3014569999650121 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_office_details_id: 1,\n           emp_basic_details_id: 1,\n           emp_id: \"EMP912e43\",\n           emp_type: 1,\n           emp_personal_details_id: 1,\n           emp_address_details_id: 1,\n           emp_join_details_id: 1,\n           emp_salary_details_id: 1,\n           emp_loan_details_id: 1,\n           emp_family_details: {\n             create: [\n               {\n                 name: \"g4twg\",\n                 relation: \"4g4\",\n                 dob: \"g5g\",\n                 dependent: \"yes\"\n               },\n               {\n                 name: \"g4\",\n                 relation: \"g45\",\n                 dob: \"g45\",\n                 dependent: \"no\"\n               }\n             ]\n           },\n           emp_nominee_details: {\n             create: [\n               {\n                 nominee_name: \"John Doe\",\n                 relation: \"Spouse\",\n                 percentage: 50.5,\n                 address: \"123 Main St\",\n                 minor: \"No\"\n               },\n               {\n                 nominee_name: \"Jane Doe\",\n                 relation: \"Child\",\n                 percentage: 49.5,\n                 address: \"456 Oak St\",\n                 minor: \"yes\"\n               }\n             ]\n           },\n           emp_increment_details: {\n             create: [\n               {\n                 scale: \"A\",\n                 inc_date: \"2022-02-28\",\n                 inc_amount: 5000,\n                 basic_pay_after_inc: 55000,\n                 vide_order_no: \"V123\",\n                 vide_order_date: \"2022-03-01\"\n               }\n             ]\n           },\n           emp_promotion_details: {\n             create: [\n               {\n                 designation: {\n                   from: \"Manager\",\n                   to: \"Senior\"\n                 },\n                 scale: {\n                   from: \"A\",\n                   to: \"1\"\n                 },\n                 vide_order_no: \"V456\",\n                 vide_order_date: \"2022-03-15\",\n                 transfer: \"yes\"\n               }\n             ]\n           },\n           emp_timebound_details: {\n             create: [\n               {\n                 pay_scale: {\n                   from: \"casd\",\n                   to: \"cad\"\n                 },\n                 inc_amt: \"5000\",\n                 b_after_pay: \"55000\",\n                 vide_order_no: \"V123\",\n                 vide_order_date: \"2022-03-01T12:34:56.789Z\",\n                 remarks: \"Example remark\"\n               }\n             ]\n           },\n           emp_education_details: {\n             create: [\n               {\n                 edu_level: \"Matriculation\",\n                 stream: \"vdsfv\",\n                 board: \"dfvdsf\",\n                 passing_year: \"3434\",\n                 grade: \"1st\",\n                 upload_edu: \"C:\\\\fakepath\\\\Screenshot 2024-02-14 172443.png\",\n                 marks: 100\n               },\n               {\n                 edu_level: \"Intermediate\",\n                 stream: null,\n                 board: null,\n                 passing_year: null,\n                 grade: null,\n                 upload_edu: null\n               }\n             ]\n           },\n           emp_training_details: {\n             create: [\n               {\n                 name_of_training: \"acas\",\n                 training_type: \"Basic\",\n                 name_of_inst: \"casdcasd\",\n                 starting_from: {\n                   from: \"2323-03-03\"\n                 },\n                 end_to: {\n                   to: \"2323-03-03\"\n                 },\n                 tot_day_training: \"234\",\n                 upload_edu: \"C:\\\\fakepath\\\\Screenshot 2024-02-14 172443.png\"\n               }\n             ]\n           },\n       +   emp_office_details: {\n       +     create: employee_office_detailsCreateWithoutEmployeeInput | employee_office_detailsUncheckedCreateWithoutEmployeeInput,\n       +     connectOrCreate: employee_office_detailsCreateOrConnectWithoutEmployeeInput,\n       +     connect: employee_office_detailsWhereUniqueInput\n       +   }\n         }\n       })\n\nArgument `emp_office_details` is missing. "}
{"level":"error","message":"POST 0.29546599998138845 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_office_details_id: 2,\n           emp_basic_details_id: 2,\n           emp_id: \"EMP912e43\",\n           emp_type: 1,\n           emp_personal_details_id: 2,\n           emp_address_details_id: 2,\n           emp_join_details_id: 2,\n           emp_salary_details_id: 2,\n           emp_loan_details_id: 2,\n           emp_family_details: {\n             create: [\n               {\n                 name: \"g4twg\",\n                 relation: \"4g4\",\n                 dob: \"g5g\",\n                 dependent: \"yes\"\n               },\n               {\n                 name: \"g4\",\n                 relation: \"g45\",\n                 dob: \"g45\",\n                 dependent: \"no\"\n               }\n             ]\n           },\n           emp_nominee_details: {\n             create: [\n               {\n                 nominee_name: \"John Doe\",\n                 relation: \"Spouse\",\n                 percentage: 50.5,\n                 address: \"123 Main St\",\n                 minor: \"No\"\n               },\n               {\n                 nominee_name: \"Jane Doe\",\n                 relation: \"Child\",\n                 percentage: 49.5,\n                 address: \"456 Oak St\",\n                 minor: \"yes\"\n               }\n             ]\n           },\n           emp_increment_details: {\n             create: [\n               {\n                 scale: \"A\",\n                 inc_date: \"2022-02-28\",\n                 inc_amount: 5000,\n                 basic_pay_after_inc: 55000,\n                 vide_order_no: \"V123\",\n                 vide_order_date: \"2022-03-01\"\n               }\n             ]\n           },\n           emp_promotion_details: {\n             create: [\n               {\n                 designation: {\n                   from: \"Manager\",\n                   to: \"Senior\"\n                 },\n                 scale: {\n                   from: \"A\",\n                   to: \"1\"\n                 },\n                 vide_order_no: \"V456\",\n                 vide_order_date: \"2022-03-15\",\n                 transfer: \"yes\"\n               }\n             ]\n           },\n           emp_timebound_details: {\n             create: [\n               {\n                 pay_scale: {\n                   from: \"casd\",\n                   to: \"cad\"\n                 },\n                 inc_amt: \"5000\",\n                 b_after_pay: \"55000\",\n                 vide_order_no: \"V123\",\n                 vide_order_date: \"2022-03-01T12:34:56.789Z\",\n                 remarks: \"Example remark\"\n               }\n             ]\n           },\n           emp_education_details: {\n             create: [\n               {\n                 edu_level: \"Matriculation\",\n                 stream: \"vdsfv\",\n                 board: \"dfvdsf\",\n                 passing_year: \"3434\",\n                 grade: \"1st\",\n                 upload_edu: \"C:\\\\fakepath\\\\Screenshot 2024-02-14 172443.png\",\n                 marks: 100\n               },\n               {\n                 edu_level: \"Intermediate\",\n                 stream: null,\n                 board: null,\n                 passing_year: null,\n                 grade: null,\n                 upload_edu: null\n               }\n             ]\n           },\n           emp_training_details: {\n             create: [\n               {\n                 name_of_training: \"acas\",\n                 training_type: \"Basic\",\n                 name_of_inst: \"casdcasd\",\n                 starting_from: {\n                   from: \"2323-03-03\"\n                 },\n                 end_to: {\n                   to: \"2323-03-03\"\n                 },\n                 tot_day_training: \"234\",\n                 upload_edu: \"C:\\\\fakepath\\\\Screenshot 2024-02-14 172443.png\"\n               }\n             ]\n           },\n       +   emp_office_details: {\n       +     create: employee_office_detailsCreateWithoutEmployeeInput | employee_office_detailsUncheckedCreateWithoutEmployeeInput,\n       +     connectOrCreate: employee_office_detailsCreateOrConnectWithoutEmployeeInput,\n       +     connect: employee_office_detailsWhereUniqueInput\n       +   }\n         }\n       })\n\nArgument `emp_office_details` is missing. "}
{"level":"error","message":"POST 0.29230600013397634 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_office_details_id: 3,\n           emp_basic_details_id: 3,\n           emp_id: \"EMP912e43\",\n           emp_type: 1,\n           emp_personal_details_id: 3,\n           emp_address_details_id: 3,\n           emp_join_details_id: 3,\n           emp_salary_details_id: 3,\n           emp_loan_details_id: 3,\n           emp_family_details: {\n             create: [\n               {\n                 name: \"g4twg\",\n                 relation: \"4g4\",\n                 dob: \"g5g\",\n                 dependent: \"yes\"\n               },\n               {\n                 name: \"g4\",\n                 relation: \"g45\",\n                 dob: \"g45\",\n                 dependent: \"no\"\n               }\n             ]\n           },\n           emp_nominee_details: {\n             create: [\n               {\n                 nominee_name: \"John Doe\",\n                 relation: \"Spouse\",\n                 percentage: 50.5,\n                 address: \"123 Main St\",\n                 minor: \"No\"\n               },\n               {\n                 nominee_name: \"Jane Doe\",\n                 relation: \"Child\",\n                 percentage: 49.5,\n                 address: \"456 Oak St\",\n                 minor: \"yes\"\n               }\n             ]\n           },\n           emp_increment_details: {\n             create: [\n               {\n                 scale: \"A\",\n                 inc_date: \"2022-02-28\",\n                 inc_amount: 5000,\n                 basic_pay_after_inc: 55000,\n                 vide_order_no: \"V123\",\n                 vide_order_date: \"2022-03-01\"\n               }\n             ]\n           },\n           emp_promotion_details: {\n             create: [\n               {\n                 designation: {\n                   from: \"Manager\",\n                   to: \"Senior\"\n                 },\n                 scale: {\n                   from: \"A\",\n                   to: \"1\"\n                 },\n                 vide_order_no: \"V456\",\n                 vide_order_date: \"2022-03-15\",\n                 transfer: \"yes\"\n               }\n             ]\n           },\n           emp_timebound_details: {\n             create: [\n               {\n                 pay_scale: {\n                   from: \"casd\",\n                   to: \"cad\"\n                 },\n                 inc_amt: \"5000\",\n                 b_after_pay: \"55000\",\n                 vide_order_no: \"V123\",\n                 vide_order_date: \"2022-03-01T12:34:56.789Z\",\n                 remarks: \"Example remark\"\n               }\n             ]\n           },\n           emp_education_details: {\n             create: [\n               {\n                 edu_level: \"Matriculation\",\n                 stream: \"vdsfv\",\n                 board: \"dfvdsf\",\n                 passing_year: \"3434\",\n                 grade: \"1st\",\n                 upload_edu: \"C:\\\\fakepath\\\\Screenshot 2024-02-14 172443.png\",\n                 marks: 100\n               },\n               {\n                 edu_level: \"Intermediate\",\n                 stream: null,\n                 board: null,\n                 passing_year: null,\n                 grade: null,\n                 upload_edu: null\n               }\n             ]\n           },\n           emp_training_details: {\n             create: [\n               {\n                 name_of_training: \"acas\",\n                 training_type: \"Basic\",\n                 name_of_inst: \"casdcasd\",\n                 starting_from: {\n                   from: \"2323-03-03\"\n                 },\n                 end_to: {\n                   to: \"2323-03-03\"\n                 },\n                 tot_day_training: \"234\",\n                 upload_edu: \"C:\\\\fakepath\\\\Screenshot 2024-02-14 172443.png\"\n               }\n             ]\n           },\n       +   emp_office_details: {\n       +     create: employee_office_detailsCreateWithoutEmployeeInput | employee_office_detailsUncheckedCreateWithoutEmployeeInput,\n       +     connectOrCreate: employee_office_detailsCreateOrConnectWithoutEmployeeInput,\n       +     connect: employee_office_detailsWhereUniqueInput\n       +   }\n         }\n       })\n\nArgument `emp_office_details` is missing. "}
{"level":"error","message":"POST 0.40876999986357987 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_office_details_id: 4,\n           emp_basic_details_id: 4,\n           emp_id: \"EMP29d3fa\",\n           emp_type: 1,\n           emp_personal_details_id: 4,\n           emp_address_details_id: 4,\n           emp_join_details_id: 4,\n           emp_salary_details_id: 4,\n           emp_loan_details_id: 4,\n           emp_family_details: {\n             create: [\n               {\n                 name: \"g4twg\",\n                 relation: \"4g4\",\n                 dob: \"g5g\",\n                 dependent: \"yes\"\n               },\n               {\n                 name: \"g4\",\n                 relation: \"g45\",\n                 dob: \"g45\",\n                 dependent: \"no\"\n               }\n             ]\n           },\n           emp_nominee_details: {\n             create: [\n               {\n                 nominee_name: \"John Doe\",\n                 relation: \"Spouse\",\n                 percentage: 50.5,\n                 address: \"123 Main St\",\n                 minor: \"No\"\n               },\n               {\n                 nominee_name: \"Jane Doe\",\n                 relation: \"Child\",\n                 percentage: 49.5,\n                 address: \"456 Oak St\",\n                 minor: \"yes\"\n               }\n             ]\n           },\n           emp_increment_details: {\n             create: [\n               {\n                 scale: \"A\",\n                 inc_date: \"2022-02-28\",\n                 inc_amount: 5000,\n                 basic_pay_after_inc: 55000,\n                 vide_order_no: \"V123\",\n                 vide_order_date: \"2022-03-01\"\n               }\n             ]\n           },\n           emp_promotion_details: {\n             create: [\n               {\n                 designation: {\n                   from: \"Manager\",\n                   to: \"Senior\"\n                 },\n                 scale: {\n                   from: \"A\",\n                   to: \"1\"\n                 },\n                 vide_order_no: \"V456\",\n                 vide_order_date: \"2022-03-15\",\n                 transfer: \"yes\"\n               }\n             ]\n           },\n           emp_timebound_details: {\n             create: [\n               {\n                 pay_scale: {\n                   from: \"casd\",\n                   to: \"cad\"\n                 },\n                 inc_amt: \"5000\",\n                 b_after_pay: \"55000\",\n                 vide_order_no: \"V123\",\n                 vide_order_date: \"2022-03-01T12:34:56.789Z\",\n                 remarks: \"Example remark\"\n               }\n             ]\n           },\n           emp_education_details: {\n             create: [\n               {\n                 edu_level: \"Matriculation\",\n                 stream: \"vdsfv\",\n                 board: \"dfvdsf\",\n                 passing_year: \"3434\",\n                 grade: \"1st\",\n                 upload_edu: \"C:\\\\fakepath\\\\Screenshot 2024-02-14 172443.png\",\n                 marks: 100\n               },\n               {\n                 edu_level: \"Intermediate\",\n                 stream: null,\n                 board: null,\n                 passing_year: null,\n                 grade: null,\n                 upload_edu: null\n               }\n             ]\n           },\n           emp_training_details: {\n             create: [\n               {\n                 name_of_training: \"acas\",\n                 training_type: \"Basic\",\n                 name_of_inst: \"casdcasd\",\n                 starting_from: {\n                   from: \"2323-03-03\"\n                 },\n                 end_to: {\n                   to: \"2323-03-03\"\n                 },\n                 tot_day_training: \"234\",\n                 upload_edu: \"C:\\\\fakepath\\\\Screenshot 2024-02-14 172443.png\"\n               }\n             ]\n           },\n       +   emp_office_details: {\n       +     create: employee_office_detailsCreateWithoutEmployeeInput | employee_office_detailsUncheckedCreateWithoutEmployeeInput,\n       +     connectOrCreate: employee_office_detailsCreateOrConnectWithoutEmployeeInput,\n       +     connect: employee_office_detailsWhereUniqueInput\n       +   }\n         }\n       })\n\nArgument `emp_office_details` is missing. "}
{"level":"error","message":"POST 0.3020750000141561 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_office_details_id: 5,\n           emp_basic_details_id: 5,\n           emp_id: \"EMP912e43\",\n           emp_type: 1,\n           emp_personal_details_id: 5,\n           emp_address_details_id: 5,\n           emp_join_details_id: 5,\n           emp_salary_details_id: 5,\n           emp_loan_details_id: 5,\n           emp_family_details: {\n             create: [\n               {\n                 name: \"g4twg\",\n                 relation: \"4g4\",\n                 dob: \"g5g\",\n                 dependent: \"yes\"\n               },\n               {\n                 name: \"g4\",\n                 relation: \"g45\",\n                 dob: \"g45\",\n                 dependent: \"no\"\n               }\n             ]\n           },\n           emp_nominee_details: {\n             create: [\n               {\n                 nominee_name: \"John Doe\",\n                 relation: \"Spouse\",\n                 percentage: 50.5,\n                 address: \"123 Main St\",\n                 minor: \"No\"\n               },\n               {\n                 nominee_name: \"Jane Doe\",\n                 relation: \"Child\",\n                 percentage: 49.5,\n                 address: \"456 Oak St\",\n                 minor: \"yes\"\n               }\n             ]\n           },\n           emp_increment_details: {\n             create: [\n               {\n                 scale: \"A\",\n                 inc_date: \"2022-02-28\",\n                 inc_amount: 5000,\n                 basic_pay_after_inc: 55000,\n                 vide_order_no: \"V123\",\n                 vide_order_date: \"2022-03-01\"\n               }\n             ]\n           },\n           emp_promotion_details: {\n             create: [\n               {\n                 designation: {\n                   from: \"Manager\",\n                   to: \"Senior\"\n                 },\n                 scale: {\n                   from: \"A\",\n                   to: \"1\"\n                 },\n                 vide_order_no: \"V456\",\n                 vide_order_date: \"2022-03-15\",\n                 transfer: \"yes\"\n               }\n             ]\n           },\n           emp_timebound_details: {\n             create: [\n               {\n                 pay_scale: {\n                   from: \"casd\",\n                   to: \"cad\"\n                 },\n                 inc_amt: \"5000\",\n                 b_after_pay: \"55000\",\n                 vide_order_no: \"V123\",\n                 vide_order_date: \"2022-03-01T12:34:56.789Z\",\n                 remarks: \"Example remark\"\n               }\n             ]\n           },\n           emp_education_details: {\n             create: [\n               {\n                 edu_level: \"Matriculation\",\n                 stream: \"vdsfv\",\n                 board: \"dfvdsf\",\n                 passing_year: \"3434\",\n                 grade: \"1st\",\n                 upload_edu: \"C:\\\\fakepath\\\\Screenshot 2024-02-14 172443.png\",\n                 marks: 100\n               },\n               {\n                 edu_level: \"Intermediate\",\n                 stream: null,\n                 board: null,\n                 passing_year: null,\n                 grade: null,\n                 upload_edu: null\n               }\n             ]\n           },\n           emp_training_details: {\n             create: [\n               {\n                 name_of_training: \"acas\",\n                 training_type: \"Basic\",\n                 name_of_inst: \"casdcasd\",\n                 starting_from: {\n                   from: \"2323-03-03\"\n                 },\n                 end_to: {\n                   to: \"2323-03-03\"\n                 },\n                 tot_day_training: \"234\",\n                 upload_edu: \"C:\\\\fakepath\\\\Screenshot 2024-02-14 172443.png\"\n               }\n             ]\n           },\n       +   emp_office_details: {\n       +     create: employee_office_detailsCreateWithoutEmployeeInput | employee_office_detailsUncheckedCreateWithoutEmployeeInput,\n       +     connectOrCreate: employee_office_detailsCreateOrConnectWithoutEmployeeInput,\n       +     connect: employee_office_detailsWhereUniqueInput\n       +   }\n         }\n       })\n\nArgument `emp_office_details` is missing. "}
{"level":"error","message":"POST 0.2638719999231398 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.employee_attendance_history.create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:48:59\n\n  45   },\n  46 };\n  47 \n→ 48 const data = await prisma.employee_attendance_history.create({\n       data: {\n         emp_in: \"4:38 PM\",\n         status: true,\n         date: \"2024-04-03\",\n         lat: 1212.21212,\n         lang: 2423.3232,\n         employee_id: null,\n     +   employee: {\n     +     create: employeesCreateWithoutEmp_attendanceInput | employeesUncheckedCreateWithoutEmp_attendanceInput,\n     +     connectOrCreate: employeesCreateOrConnectWithoutEmp_attendanceInput,\n     +     connect: employeesWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `employee` is missing. "}
{"level":"error","message":"POST 0.25890900008380413 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_office_details_id: 6,\n           emp_basic_details_id: 6,\n           emp_id: \"EMPb4fc12\",\n           emp_type: 1,\n           emp_personal_details_id: 6,\n           emp_address_details_id: 6,\n           emp_join_details_id: 6,\n           emp_salary_details_id: 6,\n           emp_loan_details_id: 6,\n           emp_family_details: {\n             create: []\n           },\n           emp_nominee_details: {\n             create: []\n           },\n           emp_increment_details: {\n             create: []\n           },\n           emp_promotion_details: {\n             create: []\n           },\n           emp_timebound_details: {\n             create: undefined\n           },\n           emp_education_details: {\n             create: [\n               {\n                 edu_level: \"Matriculation\",\n                 stream: \"casd\",\n                 board: \"sadcasd\",\n                 passing_year: \"3242\",\n                 grade: \"1st\",\n                 upload_edu: \"C:\\\\fakepath\\\\atend.png\",\n                 marks: 100\n               },\n               {\n                 edu_level: \"Intermediate\",\n                 stream: null,\n                 board: null,\n                 passing_year: null,\n                 grade: null,\n                 upload_edu: null\n               },\n               {\n                 edu_level: \"Graduation\",\n                 stream: null,\n                 board: null,\n                 passing_year: null,\n                 grade: null,\n                 upload_edu: null\n               },\n               {\n                 edu_level: \"Post Graduation\",\n                 stream: null,\n                 board: null,\n                 passing_year: null,\n                 grade: null,\n                 upload_edu: null\n               }\n             ]\n           },\n           emp_training_details: {\n             create: []\n           },\n       +   emp_office_details: {\n       +     create: employee_office_detailsCreateWithoutEmployeeInput | employee_office_detailsUncheckedCreateWithoutEmployeeInput,\n       +     connectOrCreate: employee_office_detailsCreateOrConnectWithoutEmployeeInput,\n       +     connect: employee_office_detailsWhereUniqueInput\n       +   }\n         }\n       })\n\nArgument `emp_office_details` is missing. "}
{"level":"error","message":"POST 0.2799220001325011 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_office_details_id: 7,\n           emp_basic_details_id: 7,\n           emp_id: \"EMP681c82\",\n           emp_type: 1,\n           emp_personal_details_id: 7,\n           emp_address_details_id: 7,\n           emp_join_details_id: 7,\n           emp_salary_details_id: 7,\n           emp_loan_details_id: 7,\n           emp_family_details: {\n             create: []\n           },\n           emp_nominee_details: {\n             create: []\n           },\n           emp_increment_details: {\n             create: []\n           },\n           emp_promotion_details: {\n             create: []\n           },\n           emp_timebound_details: {\n             create: undefined\n           },\n           emp_education_details: {\n             create: [\n               {\n                 edu_level: \"Matriculation\",\n                 stream: \"casd\",\n                 board: \"sadcasd\",\n                 passing_year: \"3242\",\n                 grade: \"1st\",\n                 upload_edu: \"C:\\\\fakepath\\\\atend.png\",\n                 marks: 100\n               },\n               {\n                 edu_level: \"Intermediate\",\n                 stream: null,\n                 board: null,\n                 passing_year: null,\n                 grade: null,\n                 upload_edu: null\n               },\n               {\n                 edu_level: \"Graduation\",\n                 stream: null,\n                 board: null,\n                 passing_year: null,\n                 grade: null,\n                 upload_edu: null\n               },\n               {\n                 edu_level: \"Post Graduation\",\n                 stream: null,\n                 board: null,\n                 passing_year: null,\n                 grade: null,\n                 upload_edu: null\n               }\n             ]\n           },\n           emp_training_details: {\n             create: []\n           },\n       +   emp_office_details: {\n       +     create: employee_office_detailsCreateWithoutEmployeeInput | employee_office_detailsUncheckedCreateWithoutEmployeeInput,\n       +     connectOrCreate: employee_office_detailsCreateOrConnectWithoutEmployeeInput,\n       +     connect: employee_office_detailsWhereUniqueInput\n       +   }\n         }\n       })\n\nArgument `emp_office_details` is missing. "}
{"level":"error","message":"POST 1.856378999998924 /api/hrms/v1/employee/leave-chart status = false, err = \nInvalid `prisma.employee_leave_chart.create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empLeaveChart.dao.ts:42:60\n\n  39   paternity_leave,\n  40 } = req.body;\n  41 \n→ 42 const leaveRequest = await prisma.employee_leave_chart.create({\n       data: {\n         employee_id: undefined,\n         tot_prev_leave_approv: undefined,\n         tot_bal_leave_year: 110,\n         tot_leave_allow_year: 110,\n         sick_leave: undefined,\n         earned_leave: undefined,\n         personal_leave: undefined,\n         commuted_leave: undefined,\n         leave_not_due: undefined,\n         extraordinary_leave: undefined,\n         privileged_leave: undefined,\n         leave_entitlements_for_vacation: undefined,\n         leave_on_adoption: undefined,\n         leave_to_female_on_adoption: undefined,\n         child_care_leave: undefined,\n         wrill: undefined,\n         special_leave_on_enquiry: undefined,\n         study_leave: undefined,\n         ad_hoc_employees: undefined,\n         leave_salary: undefined,\n         special_casual_leave: undefined,\n         paternity_leave: undefined,\n     +   employee: {\n     +     create: employeesCreateWithoutEmp_leave_chartInput | employeesUncheckedCreateWithoutEmp_leave_chartInput,\n     +     connectOrCreate: employeesCreateOrConnectWithoutEmp_leave_chartInput,\n     +     connect: employeesWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `employee` is missing. "}
{"level":"error","message":"POST 0.38711200000398094 /api/hrms/v1/employee/leave-chart status = false, err = \nInvalid `prisma.employee_leave_chart.create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empLeaveChart.dao.ts:42:60\n\n  39   paternity_leave,\n  40 } = req.body;\n  41 \n→ 42 const leaveRequest = await prisma.employee_leave_chart.create({\n       data: {\n         employee_id: undefined,\n         tot_prev_leave_approv: undefined,\n         tot_bal_leave_year: 110,\n         tot_leave_allow_year: 110,\n         sick_leave: undefined,\n         earned_leave: undefined,\n         personal_leave: undefined,\n         commuted_leave: undefined,\n         leave_not_due: undefined,\n         extraordinary_leave: undefined,\n         privileged_leave: undefined,\n         leave_entitlements_for_vacation: undefined,\n         leave_on_adoption: undefined,\n         leave_to_female_on_adoption: undefined,\n         child_care_leave: undefined,\n         wrill: undefined,\n         special_leave_on_enquiry: undefined,\n         study_leave: undefined,\n         ad_hoc_employees: undefined,\n         leave_salary: undefined,\n         special_casual_leave: undefined,\n         paternity_leave: undefined,\n     +   employee: {\n     +     create: employeesCreateWithoutEmp_leave_chartInput | employeesUncheckedCreateWithoutEmp_leave_chartInput,\n     +     connectOrCreate: employeesCreateOrConnectWithoutEmp_leave_chartInput,\n     +     connect: employeesWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `employee` is missing. "}
{"level":"error","message":"POST 0.47507700001006015 /api/hrms/v1/employee/attendance/update status = false, err = \nInvalid `prisma.employee_attendance_history.update()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:69:59\n\n  66 if (!emp_id && emp_id === \"undefined\" && emp_id === \"\") {\n  67   return generateRes({ status: \"not found\" });\n  68 }\n→ 69 const data = await prisma.employee_attendance_history.update({\n       where: {\n         employee_id: \"EMP912e43\",\n         id: undefined,\n     ?   AND?: employee_attendance_historyWhereInput | employee_attendance_historyWhereInput[],\n     ?   OR?: employee_attendance_historyWhereInput[],\n     ?   NOT?: employee_attendance_historyWhereInput | employee_attendance_historyWhereInput[],\n     ?   emp_in?: StringFilter | String,\n     ?   emp_out?: StringNullableFilter | String | Null,\n     ?   date?: StringFilter | String,\n     ?   status?: BoolFilter | Boolean,\n     ?   lat?: FloatNullableFilter | Float | Null,\n     ?   lang?: FloatNullableFilter | Float | Null,\n     ?   created_at?: DateTimeFilter | DateTime,\n     ?   updated_at?: DateTimeFilter | DateTime,\n     ?   employee?: EmployeesRelationFilter | employeesWhereInput\n       },\n       data: {\n         emp_out: \"5:18 PM\",\n         status: true\n       }\n     })\n\nArgument `where` of type employee_attendance_historyWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?. "}
{"level":"error","message":"POST 0.276255000004312 /api/hrms/v1/employee/leave status = false, err = \nInvalid `prisma.employee_leave_details.create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empLeave.dao.ts:50:62\n\n  47   },\n  48 };\n  49 \n→ 50 const leaveRequest = await prisma.employee_leave_details.create({\n       data: {\n         employee_id: null,\n         emp_leave_type_id: 1,\n         leave_from: \"2024-04-12\",\n         leave_to: \"2024-04-14\",\n         total_days: 2,\n         leave_reason: \"going to fuck my wife\",\n         file_upload: null,\n         half_day: false,\n         leave_status: undefined,\n     +   emp_leave_type: {\n     +     create: employee_leave_typeCreateWithoutEmployee_leave_detailsInput | employee_leave_typeUncheckedCreateWithoutEmployee_leave_detailsInput,\n     +     connectOrCreate: employee_leave_typeCreateOrConnectWithoutEmployee_leave_detailsInput,\n     +     connect: employee_leave_typeWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `emp_leave_type` is missing. "}
{"level":"error","message":"POST 0.2489449999993667 /api/hrms/v1/employee/leave status = false, err = \nInvalid `prisma.employee_leave_details.create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empLeave.dao.ts:50:62\n\n  47   },\n  48 };\n  49 \n→ 50 const leaveRequest = await prisma.employee_leave_details.create({\n       data: {\n         employee_id: null,\n         emp_leave_type_id: 1,\n         leave_from: \"2024-04-12\",\n         leave_to: \"2024-04-14\",\n         total_days: 2,\n         leave_reason: \"going to fuck my wife\",\n         file_upload: null,\n         half_day: false,\n         leave_status: undefined,\n     +   emp_leave_type: {\n     +     create: employee_leave_typeCreateWithoutEmployee_leave_detailsInput | employee_leave_typeUncheckedCreateWithoutEmployee_leave_detailsInput,\n     +     connectOrCreate: employee_leave_typeCreateOrConnectWithoutEmployee_leave_detailsInput,\n     +     connect: employee_leave_typeWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `emp_leave_type` is missing. "}
{"level":"error","message":"POST 0.2521249999990687 /api/hrms/v1/employee/leave status = false, err = \nInvalid `prisma.employee_leave_details.create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empLeave.dao.ts:50:62\n\n  47   },\n  48 };\n  49 \n→ 50 const leaveRequest = await prisma.employee_leave_details.create({\n       data: {\n         employee_id: null,\n         emp_leave_type_id: 1,\n         leave_from: \"2024-04-12\",\n         leave_to: \"2024-04-14\",\n         total_days: 2,\n         leave_reason: \"going to fuck my wife\",\n         file_upload: null,\n         half_day: false,\n         leave_status: undefined,\n     +   emp_leave_type: {\n     +     create: employee_leave_typeCreateWithoutEmployee_leave_detailsInput | employee_leave_typeUncheckedCreateWithoutEmployee_leave_detailsInput,\n     +     connectOrCreate: employee_leave_typeCreateOrConnectWithoutEmployee_leave_detailsInput,\n     +     connect: employee_leave_typeWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `emp_leave_type` is missing. "}
{"level":"error","message":"POST 0.4403329999986454 /api/hrms/v1/employee/leave-chart status = false, err = \nInvalid `prisma.employee_leave_chart.create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empLeaveChart.dao.ts:42:60\n\n  39   paternity_leave,\n  40 } = req.body;\n  41 \n→ 42 const leaveRequest = await prisma.employee_leave_chart.create({\n       data: {\n         employee_id: undefined,\n         tot_prev_leave_approv: undefined,\n         tot_bal_leave_year: 110,\n         tot_leave_allow_year: 110,\n         sick_leave: undefined,\n         earned_leave: undefined,\n         personal_leave: undefined,\n         commuted_leave: undefined,\n         leave_not_due: undefined,\n         extraordinary_leave: undefined,\n         privileged_leave: undefined,\n         leave_entitlements_for_vacation: undefined,\n         leave_on_adoption: undefined,\n         leave_to_female_on_adoption: undefined,\n         child_care_leave: undefined,\n         wrill: undefined,\n         special_leave_on_enquiry: undefined,\n         study_leave: undefined,\n         ad_hoc_employees: undefined,\n         leave_salary: undefined,\n         special_casual_leave: undefined,\n         paternity_leave: undefined,\n     +   employee: {\n     +     create: employeesCreateWithoutEmp_leave_chartInput | employeesUncheckedCreateWithoutEmp_leave_chartInput,\n     +     connectOrCreate: employeesCreateOrConnectWithoutEmp_leave_chartInput,\n     +     connect: employeesWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `employee` is missing. "}
{"level":"error","message":"POST 0.34114299999782816 /api/hrms/v1/employee/leave status = false, err = \nInvalid `prisma.employee_leave_details.create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empLeave.dao.ts:50:62\n\n  47   },\n  48 };\n  49 \n→ 50 const leaveRequest = await prisma.employee_leave_details.create({\n       data: {\n         employee_id: null,\n         emp_leave_type_id: 5,\n         leave_from: \"2024-04-12\",\n         leave_to: \"2024-04-15\",\n         total_days: 3,\n         leave_reason: \"csdcsad\",\n         file_upload: null,\n         half_day: false,\n         leave_status: undefined,\n     +   emp_leave_type: {\n     +     create: employee_leave_typeCreateWithoutEmployee_leave_detailsInput | employee_leave_typeUncheckedCreateWithoutEmployee_leave_detailsInput,\n     +     connectOrCreate: employee_leave_typeCreateOrConnectWithoutEmployee_leave_detailsInput,\n     +     connect: employee_leave_typeWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `emp_leave_type` is missing. "}
{"level":"error","message":"POST 0.4679469999973662 /api/hrms/v1/employee/leave status = false, err = \nInvalid `prisma.employee_leave_details.create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empLeave.dao.ts:50:62\n\n  47   },\n  48 };\n  49 \n→ 50 const leaveRequest = await prisma.employee_leave_details.create({\n       data: {\n         employee_id: null,\n         emp_leave_type_id: 5,\n         leave_from: \"2024-04-12\",\n         leave_to: \"2024-04-15\",\n         total_days: 3,\n         leave_reason: \"csdcsad\",\n         file_upload: null,\n         half_day: false,\n         leave_status: undefined,\n     +   emp_leave_type: {\n     +     create: employee_leave_typeCreateWithoutEmployee_leave_detailsInput | employee_leave_typeUncheckedCreateWithoutEmployee_leave_detailsInput,\n     +     connectOrCreate: employee_leave_typeCreateOrConnectWithoutEmployee_leave_detailsInput,\n     +     connect: employee_leave_typeWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `emp_leave_type` is missing. "}
{"level":"error","message":"POST 0.36770800000522286 /api/hrms/v1/employee/leave status = false, err = \nInvalid `prisma.employee_leave_details.create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empLeave.dao.ts:50:62\n\n  47   },\n  48 };\n  49 \n→ 50 const leaveRequest = await prisma.employee_leave_details.create({\n       data: {\n         employee_id: undefined,\n         emp_leave_type_id: 2,\n         leave_from: \"2024-04-04\",\n         leave_to: \"2024-04-05\",\n         total_days: 1,\n         leave_reason: \"ewewqefqewf\",\n         file_upload: null,\n         half_day: false,\n         leave_status: undefined,\n     +   emp_leave_type: {\n     +     create: employee_leave_typeCreateWithoutEmployee_leave_detailsInput | employee_leave_typeUncheckedCreateWithoutEmployee_leave_detailsInput,\n     +     connectOrCreate: employee_leave_typeCreateOrConnectWithoutEmployee_leave_detailsInput,\n     +     connect: employee_leave_typeWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `emp_leave_type` is missing. "}
{"level":"error","message":"POST 0.3015460000024177 /api/hrms/v1/employee/attendance/update status = false, err = Record to update not found. "}
{"level":"error","message":"POST 0.32162599998991936 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.employee_attendance_history.create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:48:59\n\n  45   },\n  46 };\n  47 \n→ 48 const data = await prisma.employee_attendance_history.create({\n       data: {\n         emp_in: \"5:36 PM\",\n         status: true,\n         date: \"2024-04-03\",\n         lat: 1212.21212,\n         lang: 2423.3232,\n         employee_id: null,\n     +   employee: {\n     +     create: employeesCreateWithoutEmp_attendanceInput | employeesUncheckedCreateWithoutEmp_attendanceInput,\n     +     connectOrCreate: employeesCreateOrConnectWithoutEmp_attendanceInput,\n     +     connect: employeesWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `employee` is missing. "}
{"level":"error","message":"POST 0.23459399997955188 /api/hrms/v1/employee/attendance/update status = false, err = \nInvalid `prisma.employee_attendance_history.update()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:69:59\n\n  66 if (!emp_id && emp_id === \"undefined\" && emp_id === \"\") {\n  67   return generateRes({ status: \"not found\" });\n  68 }\n→ 69 const data = await prisma.employee_attendance_history.update({\n       where: {\n         employee_id: \"EMP912e43\",\n         id: undefined,\n     ?   AND?: employee_attendance_historyWhereInput | employee_attendance_historyWhereInput[],\n     ?   OR?: employee_attendance_historyWhereInput[],\n     ?   NOT?: employee_attendance_historyWhereInput | employee_attendance_historyWhereInput[],\n     ?   emp_in?: StringFilter | String,\n     ?   emp_out?: StringNullableFilter | String | Null,\n     ?   date?: StringFilter | String,\n     ?   status?: BoolFilter | Boolean,\n     ?   lat?: FloatNullableFilter | Float | Null,\n     ?   lang?: FloatNullableFilter | Float | Null,\n     ?   created_at?: DateTimeFilter | DateTime,\n     ?   updated_at?: DateTimeFilter | DateTime,\n     ?   employee?: EmployeesRelationFilter | employeesWhereInput\n       },\n       data: {\n         emp_out: \"5:39 PM\",\n         status: true\n       }\n     })\n\nArgument `where` of type employee_attendance_historyWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?. "}
{"level":"error","message":"POST 0.5692689999996219 /api/hrms/v1/employee/attendance/update status = false, err = \nInvalid `prisma.employee_attendance_history.update()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:69:59\n\n  66 if (!emp_id && emp_id === \"undefined\" && emp_id === \"\") {\n  67   return generateRes({ status: \"not found\" });\n  68 }\n→ 69 const data = await prisma.employee_attendance_history.update({\n       where: {\n         employee_id: \"EMP912e43\",\n         id: 3\n       },\n       data: {\n         emp_out: \"5:54 PM\",\n                  ~~~~~~~~~\n         status: true\n       }\n     })\n\nInvalid value for argument `emp_out`: input contains invalid characters. Expected ISO-8601 DateTime. "}
{"level":"error","message":"POST 0.7779189999982918 /api/hrms/v1/employee/attendance/update status = false, err = Record to update not found. "}
{"level":"error","message":"POST 0.4978880000016943 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.employee_attendance_history.create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empAttendance.dao.ts:27:59\n\n  24   },\n  25 };\n  26 \n→ 27 const data = await prisma.employee_attendance_history.create(\nForeign key constraint failed on the field: `employee_attendance_history_employee_id_fkey (index)` "}
{"level":"error","message":"GET 1.8569789999983186 /api/hrms/v1/employee/attendance/test status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: function date(boolean) does not exist\nHINT: No function matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"GET 2.098552000001291 /api/hrms/v1/employee/attendance/test status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42703`. Message: `column \"currentdate\" does not exist` "}
{"level":"error","message":"GET 1.7531730000009702 /api/hrms/v1/employee/attendance/test status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `22007`. Message: `ERROR: invalid input syntax for type date: \"$1\"` "}
{"level":"error","message":"GET 2.694228000000294 /api/hrms/v1/employee/attendance/test?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42703`. Message: `column \"emp_id\" does not exist` "}
{"level":"error","message":"GET 1.848441999998613 /api/hrms/v1/employee/attendance/test?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: function timediff(timestamp without time zone, timestamp without time zone) does not exist\nHINT: No function matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"GET 1.7376819999999498 /api/hrms/v1/employee/attendance/test?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: function timediff(timestamp without time zone, timestamp without time zone) does not exist\nHINT: No function matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"GET 0.35394500000074913 /api/hrms/v1/employee/attendance/test?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: function timediff(timestamp without time zone, timestamp without time zone) does not exist\nHINT: No function matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"GET 1.8141239999999925 /api/hrms/v1/employee/attendance/test?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: function timediff(timestamp without time zone, timestamp without time zone) does not exist\nHINT: No function matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"GET 1.816979999999603 /api/hrms/v1/employee/attendance/test?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42803`. Message: `ERROR: column \"employee_attendance_history.emp_in\" must appear in the GROUP BY clause or be used in an aggregate function` "}
{"level":"error","message":"GET 1.7946940000001632 /api/hrms/v1/employee/attendance/test?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42703`. Message: `column \"hour\" does not exist` "}
{"level":"error","message":"GET 2.1186640000000807 /api/hrms/v1/employee/attendance/test?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: function timestampdiff(timestamp without time zone, timestamp without time zone) does not exist\nHINT: No function matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"GET 0.3845760000112932 /api/hrms/v1/employee/attendance/test?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: function timestampdiff(timestamp without time zone, timestamp without time zone) does not exist\nHINT: No function matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"GET 0.5829130000001896 /api/hrms/v1/employee/attendance/test?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42803`. Message: `ERROR: column \"employee_attendance_history.emp_in\" must appear in the GROUP BY clause or be used in an aggregate function` "}
{"level":"error","message":"GET 2.044684999999845 /api/hrms/v1/employee/attendance/test?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: function sum(date) does not exist\nHINT: No function matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"GET 1.7275030000000697 /api/hrms/v1/employee/attendance/test?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `N/A`. Message: `Failed to deserialize column of type 'interval'. If you're using $queryRaw and this column is explicitly marked as `Unsupported` in your Prisma schema, try casting this column to any supported Prisma type such as `String`.` "}
{"level":"error","message":"GET 0.3806289999993169 /api/hrms/v1/employee/attendance/test?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `N/A`. Message: `Failed to deserialize column of type 'interval'. If you're using $queryRaw and this column is explicitly marked as `Unsupported` in your Prisma schema, try casting this column to any supported Prisma type such as `String`.` "}
{"level":"error","message":"GET 1.936493999999584 /api/hrms/v1/employee/attendance/test?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42704`. Message: `ERROR: type \"string\" does not exist` "}
{"level":"error","message":"GET 1.75769100000025 /api/hrms/v1/employee/attendance/test?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42704`. Message: `ERROR: type \"string\" does not exist` "}
{"level":"error","message":"GET 0.4276369999997769 /api/hrms/v1/employee/attendance/test?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42704`. Message: `ERROR: type \"string\" does not exist` "}
{"level":"error","message":"GET 1.871382000000267 /api/hrms/v1/employee/attendance/test?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42704`. Message: `ERROR: type \"int64\" does not exist` "}
{"level":"error","message":"GET 2.2144170000001395 /api/hrms/v1/employee/attendance/test?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42846`. Message: `ERROR: cannot cast type interval to integer` "}
{"level":"error","message":"GET 1.7371839999996155 /api/hrms/v1/employee/attendance/test?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42601`. Message: `ERROR: syntax error at or near \"hour\"` "}
{"level":"error","message":"GET 2.0799299999998766 /api/hrms/v1/employee/attendance/test?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42601`. Message: `ERROR: syntax error at or near \"epoch\"` "}
{"level":"error","message":"GET 2.2022960000003877 /api/hrms/v1/employee/attendance/test?emp_id=EMP912e43 status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: operator does not exist: numeric / text\nHINT: No operator matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"POST 1.8631900000000314 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42601`. Message: `ERROR: syntax error at or near \")\"` "}
{"level":"error","message":"POST 1.9931290000004083 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42703`. Message: `column \"emp_id\" of relation \"employee_daily_attendance\" does not exist` "}
{"level":"error","message":"POST 1.8911119999993389 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42703`. Message: `column \"emp_id\" of relation \"employee_daily_attendance\" does not exist` "}
{"level":"error","message":"POST 2.2958529999996244 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42804`. Message: `ERROR: column \"emp_in\" is of type timestamp without time zone but expression is of type text\nHINT: You will need to rewrite or cast the expression.` "}
{"level":"error","message":"POST 1.8750890000001164 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (1, EMP912e43, null, 2024-04-04 16:34:06.373, null, 0, 1, 2024-04-04 16:34:06.416, null).` "}
{"level":"error","message":"POST 2.3349959999995917 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (2, EMP912e43, 2024-04-04, 2024-04-04 16:35:31.533, null, 0, 1, 2024-04-04 16:35:31.575, null).` "}
{"level":"error","message":"POST 1.918134999999893 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (3, EMP912e43, null, null, null, 0, 0, 2024-04-04 16:39:33.787, null).` "}
{"level":"error","message":"POST 1.9551009999995586 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (1, EMP912e43, null, null, null, 0, 0, 2024-04-04 16:40:08.435, null).` "}
{"level":"error","message":"POST 1.9428060000000187 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42601`. Message: `ERROR: syntax error at or near \"sfdsf\"` "}
{"level":"error","message":"POST 1.9339230000005045 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42601`. Message: `ERROR: syntax error at or near \"sfdsf\"` "}
{"level":"error","message":"POST 2.220010000000002 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (1, EMP912e43, null, null, null, 0, 0, 2024-04-04 16:41:48.203, null).` "}
{"level":"error","message":"POST 2.1025369999997565 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (1, EMP912e43, null, null, null, 0, 0, 2024-04-04 16:42:03.17, null).` "}
{"level":"error","message":"POST 0.511819999999716 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (1, EMP912e43, null, null, null, 0, 0, 2024-04-04 16:42:06.602, null).` "}
{"level":"error","message":"POST 2.6149310000000696 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (1, EMP912e43, 2024-10-10, 2024-10-10 00:00:00, 2024-10-10 00:00:00, 5, 1, 2024-04-04 16:44:03.442, null).` "}
{"level":"error","message":"POST 2.154327999999623 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (1, EMP912e43, 2024-10-10, 2024-10-10 00:00:00, 2024-10-10 00:00:00, 5, 1, 2024-04-04 16:45:59.034, null).` "}
{"level":"error","message":"POST 2.9754030000003695 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23503`. Message: `insert or update on table \"employee_daily_attendance\" violates foreign key constraint \"employee_daily_attendance_employee_id_fkey\"` "}
{"level":"error","message":"POST 1.9504259999994247 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23503`. Message: `insert or update on table \"employee_daily_attendance\" violates foreign key constraint \"employee_daily_attendance_employee_id_fkey\"` "}
{"level":"error","message":"POST 2.3719099999998434 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create(\nUnique constraint failed on the fields: (`emp_id`) "}
{"level":"error","message":"POST 0.5447239999921294 /api/hrms/v1/employee/attendance/update status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42804`. Message: `ERROR: column \"emp_out\" is of type timestamp without time zone but expression is of type text\nHINT: You will need to rewrite or cast the expression.` "}
{"level":"error","message":"POST 1.8099529999999504 /api/hrms/v1/employee/attendance/update status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: function datetime(text) does not exist\nHINT: No function matches the given name and argument types. You might need to add explicit type casts.` "}
{"level":"error","message":"POST 1.8663379999998142 /api/hrms/v1/employee/attendance/update status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42804`. Message: `ERROR: column \"emp_out\" is of type timestamp without time zone but expression is of type text\nHINT: You will need to rewrite or cast the expression.` "}
{"level":"error","message":"POST 2.4976969999988796 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (3, 2024-04-04 18:35:22.014, null, 2024-04-04, 1212.21212, 2423.3232, EMP912e43, 2024-04-04 18:35:22.014, null).` "}
{"level":"error","message":"POST 1.8600280000000566 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (4, 2024-04-04 18:38:18.158, null, 2024-04-04, 1212.21212, 2423.3232, EMP912e43, 2024-04-04 18:38:18.158, null).` "}
{"level":"error","message":"POST 0.5360460000083549 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (5, 2024-04-04 18:39:22.782, null, 2024-04-04, 1212.21212, 2423.3232, EMP912e43, 2024-04-04 18:39:22.782, null).` "}
{"level":"error","message":"POST 0.37054799999896204 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (1, 2024-04-04 18:40:24.992, null, 2024-04-04, 1212.21212, 2423.3232, EMP912e43, 2024-04-04 18:40:24.992, null).` "}
{"level":"error","message":"POST 0.3451080000959337 /api/hrms/v1/employee/update status = false, err = \nInvalid `tx.employee_join_details.update()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:438:38\n\n  435   },\n  436 });\n  437 \n→ 438 await tx.employee_join_details.update({\n        where: {\n          id: 1\n        },\n        data: {\n          department_id: 3,\n          designation_id: 2,\n          grade_pay: 43,\n          task: \"Project Management\",\n          basic_pay: 4,\n          pay_band: 43,\n          pay_scale: \"12423\"\n                     ~~~~~~~\n        }\n      })\n\nArgument `pay_scale`: Invalid value provided. Expected Float, NullableFloatFieldUpdateOperationsInput or Null, provided String. "}
{"level":"error","message":"POST 0.2539000000106171 /api/hrms/v1/employee/update status = false, err = \nInvalid `tx.employee_join_details.update()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:438:38\n\n  435   },\n  436 });\n  437 \n→ 438 await tx.employee_join_details.update({\n        where: {\n          id: 1\n        },\n        data: {\n          department_id: 3,\n          designation_id: 2,\n          grade_pay: 43,\n          task: \"Project Management\",\n          basic_pay: 4,\n          pay_band: 43,\n          pay_scale: \"1223\"\n                     ~~~~~~\n        }\n      })\n\nArgument `pay_scale`: Invalid value provided. Expected Float, NullableFloatFieldUpdateOperationsInput or Null, provided String. "}
{"level":"error","message":"POST 0.2603540000272915 /api/hrms/v1/employee/update status = false, err = \nInvalid `tx.employee_join_details.update()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:438:38\n\n  435   },\n  436 });\n  437 \n→ 438 await tx.employee_join_details.update({\n        where: {\n          id: 1\n        },\n        data: {\n          department_id: 3,\n          designation_id: 2,\n          grade_pay: 43,\n          task: \"Project Management\",\n          basic_pay: 4,\n          pay_band: \"4332\",\n                    ~~~~~~\n          pay_scale: 12\n        }\n      })\n\nArgument `pay_band`: Invalid value provided. Expected Float, NullableFloatFieldUpdateOperationsInput or Null, provided String. "}
{"level":"error","message":"POST 0.3473329999833368 /api/hrms/v1/employee/leave status = false, err = \nInvalid `prisma.employee_leave_details.create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empLeave.dao.ts:50:62\n\n  47   },\n  48 };\n  49 \n→ 50 const leaveRequest = await prisma.employee_leave_details.create({\n       data: {\n         employee_id: undefined,\n         emp_leave_type_id: 1,\n         leave_from: \"2024-05-06\",\n         leave_to: \"42024-05-11\",\n         total_days: 14609706,\n         leave_reason: \"yuiyuiyiyi\",\n         file_upload: \"correct.png\",\n         half_day: true,\n         leave_status: undefined,\n     +   emp_leave_type: {\n     +     create: employee_leave_typeCreateWithoutEmployee_leave_detailsInput | employee_leave_typeUncheckedCreateWithoutEmployee_leave_detailsInput,\n     +     connectOrCreate: employee_leave_typeCreateOrConnectWithoutEmployee_leave_detailsInput,\n     +     connect: employee_leave_typeWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `emp_leave_type` is missing. "}
{"level":"error","message":"POST 0.20899199999985285 /api/hrms/v1/employee/leave status = false, err = \nInvalid `prisma.employee_leave_details.create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empLeave.dao.ts:50:62\n\n  47   },\n  48 };\n  49 \n→ 50 const leaveRequest = await prisma.employee_leave_details.create({\n       data: {\n         employee_id: undefined,\n         emp_leave_type_id: 1,\n         leave_from: \"2024-05-06\",\n         leave_to: \"42024-05-11\",\n         total_days: 14609706,\n         leave_reason: \"yuiyuiyiyi\",\n         file_upload: \"correct.png\",\n         half_day: true,\n         leave_status: undefined,\n     +   emp_leave_type: {\n     +     create: employee_leave_typeCreateWithoutEmployee_leave_detailsInput | employee_leave_typeUncheckedCreateWithoutEmployee_leave_detailsInput,\n     +     connectOrCreate: employee_leave_typeCreateOrConnectWithoutEmployee_leave_detailsInput,\n     +     connect: employee_leave_typeWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `emp_leave_type` is missing. "}
{"level":"error","message":"POST 0.2743849999969825 /api/hrms/v1/employee/leave status = false, err = \nInvalid `prisma.employee_leave_details.create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empLeave.dao.ts:50:62\n\n  47   },\n  48 };\n  49 \n→ 50 const leaveRequest = await prisma.employee_leave_details.create({\n       data: {\n         employee_id: undefined,\n         emp_leave_type_id: 2,\n         leave_from: \"2024-04-06\",\n         leave_to: \"2024-04-21\",\n         total_days: 16,\n         leave_reason: \"wefasdfdsa\",\n         file_upload: \"correct.png\",\n         half_day: false,\n         leave_status: undefined,\n     +   emp_leave_type: {\n     +     create: employee_leave_typeCreateWithoutEmployee_leave_detailsInput | employee_leave_typeUncheckedCreateWithoutEmployee_leave_detailsInput,\n     +     connectOrCreate: employee_leave_typeCreateOrConnectWithoutEmployee_leave_detailsInput,\n     +     connect: employee_leave_typeWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `emp_leave_type` is missing. "}
{"level":"error","message":"POST 0.2409979999938514 /api/hrms/v1/employee/leave status = false, err = \nInvalid `prisma.employee_leave_details.create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empLeave.dao.ts:50:62\n\n  47   },\n  48 };\n  49 \n→ 50 const leaveRequest = await prisma.employee_leave_details.create({\n       data: {\n         employee_id: undefined,\n         emp_leave_type_id: 2,\n         leave_from: \"2024-04-06\",\n         leave_to: \"2024-04-21\",\n         total_days: 16,\n         leave_reason: \"wefasdfdsa\",\n         file_upload: \"correct.png\",\n         half_day: false,\n         leave_status: undefined,\n     +   emp_leave_type: {\n     +     create: employee_leave_typeCreateWithoutEmployee_leave_detailsInput | employee_leave_typeUncheckedCreateWithoutEmployee_leave_detailsInput,\n     +     connectOrCreate: employee_leave_typeCreateOrConnectWithoutEmployee_leave_detailsInput,\n     +     connect: employee_leave_typeWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `emp_leave_type` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-08T10:01:32.705Z POST 2.1319039999943925 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create(\nUnique constraint failed on the fields: (`emp_id`) "}
{"level":"error","message":"Date & Time:- 2024-04-08T11:28:57.666Z POST 1.1197469999897294 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create(\nUnique constraint failed on the fields: (`id`) "}
{"level":"error","message":"Date & Time:- 2024-04-09T07:44:35.002Z POST 0.4051550000003772 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create(\nUnique constraint failed on the fields: (`emp_id`) "}
{"level":"error","message":"Date & Time:- 2024-04-09T11:01:38.703Z POST 0.6313519999966957 /api/hrms/v1/employee/leave-chart status = false, err = \nInvalid `prisma.employee_leave_chart.create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empLeaveChart.dao.ts:42:60\n\n  39   paternity_leave,\n  40 } = req.body;\n  41 \n→ 42 const leaveRequest = await prisma.employee_leave_chart.create(\nForeign key constraint failed on the field: `employee_leave_chart_employee_id_fkey (index)` "}
{"level":"error","message":"Date & Time:- 2024-04-09T12:32:02.859Z POST 1.3196180000086315 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_salary_allow: {\n             create: [\n               {\n                 name: \"DA(%)\",\n                 wfe_date: \"1111-01-01\",\n                 amount_in: 20000\n               }\n             ]\n           },\n           emp_salary_deduction: {\n             create: [\n               {\n                 amount_in: 150,\n                 name: \"PT\",\n                 wfe_date: null,\n                 acnt_no: null\n               },\n               {\n                 amount_in: 8400,\n                 name: \"EPF\",\n                 wfe_date: null,\n                 acnt_no: null\n               },\n               {\n                 amount_in: 32500,\n                 name: \"IT\",\n                 wfe_date: null,\n                 acnt_no: null\n               },\n               {\n                 amount_in: null,\n                 name: null,\n                 wfe_date: null,\n                 acnt_no: null\n               }\n             ]\n           }\n         }\n       })\n\nArgument `wfe_date` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-09T12:32:19.724Z POST 0.32289499999023974 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_salary_allow: {\n             create: [\n               {\n                 name: \"DA(%)\",\n                 wfe_date: \"1111-01-01\",\n                 amount_in: 20000\n               }\n             ]\n           },\n           emp_salary_deduction: {\n             create: [\n               {\n                 amount_in: 150,\n                 name: \"PT\",\n                 wfe_date: null,\n                 acnt_no: null\n               },\n               {\n                 amount_in: 8400,\n                 name: \"EPF\",\n                 wfe_date: null,\n                 acnt_no: null\n               },\n               {\n                 amount_in: 32500,\n                 name: \"IT\",\n                 wfe_date: null,\n                 acnt_no: null\n               },\n               {\n                 amount_in: null,\n                 name: null,\n                 wfe_date: null,\n                 acnt_no: null\n               }\n             ]\n           }\n         }\n       })\n\nArgument `wfe_date` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-09T12:33:08.181Z POST 0.27350999996997416 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_salary_allow: {\n             create: [\n               {\n                 name: \"DA(%)\",\n                 wfe_date: \"1111-01-01\",\n                 amount_in: 20000\n               }\n             ]\n           },\n           emp_salary_deduction: {\n             create: [\n               {\n                 amount_in: 8400,\n                 name: \"EPF\",\n                 wfe_date: \"1111-01-01\",\n                 acnt_no: \"213321431\"\n               },\n               {\n                 amount_in: 150,\n                 name: \"PT\",\n                 wfe_date: \"1111-01-01\",\n                 acnt_no: \"2112\"\n               },\n               {\n                 amount_in: 32500,\n                 name: \"IT\",\n                 wfe_date: \"1111-01-01\",\n                 acnt_no: \"21212\"\n               },\n               {\n                 amount_in: null,\n                 name: null,\n                 wfe_date: null,\n                 acnt_no: null\n               }\n             ]\n           }\n         }\n       })\n\nArgument `acnt_no`: Invalid value provided. Expected Float, provided String. "}
{"level":"error","message":"Date & Time:- 2024-04-09T12:33:15.638Z POST 0.4344199999468401 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_salary_allow: {\n             create: [\n               {\n                 name: \"DA(%)\",\n                 wfe_date: \"1111-01-01\",\n                 amount_in: 20000\n               }\n             ]\n           },\n           emp_salary_deduction: {\n             create: [\n               {\n                 amount_in: 8400,\n                 name: \"EPF\",\n                 wfe_date: \"1111-01-01\",\n                 acnt_no: \"213321431\"\n               },\n               {\n                 amount_in: 150,\n                 name: \"PT\",\n                 wfe_date: \"1111-01-01\",\n                 acnt_no: \"2112\"\n               },\n               {\n                 amount_in: 32500,\n                 name: \"IT\",\n                 wfe_date: \"1111-01-01\",\n                 acnt_no: \"21212\"\n               },\n               {\n                 amount_in: null,\n                 name: null,\n                 wfe_date: null,\n                 acnt_no: null\n               }\n             ]\n           }\n         }\n       })\n\nArgument `acnt_no`: Invalid value provided. Expected Float, provided String. "}
{"level":"error","message":"Date & Time:- 2024-04-09T12:35:35.067Z POST 2.572399000000587 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_salary_allow: {\n             create: [\n               {\n                 name: \"DA(%)\",\n                 wfe_date: \"1111-01-01\",\n                 amount_in: 20000\n               }\n             ]\n           },\n           emp_salary_deduction: {\n             create: [\n               {\n                 amount_in: 8400,\n                 name: \"EPF\",\n                 wfe_date: \"1111-01-01\",\n                 acnt_no: \"213321431\"\n               },\n               {\n                 amount_in: 150,\n                 name: \"PT\",\n                 wfe_date: \"1111-01-01\",\n                 acnt_no: \"2112\"\n               },\n               {\n                 amount_in: 32500,\n                 name: \"IT\",\n                 wfe_date: \"1111-01-01\",\n                 acnt_no: \"21212\"\n               },\n               {\n                 amount_in: null,\n                 name: null,\n                 wfe_date: null,\n                 acnt_no: null\n               }\n             ]\n           }\n         }\n       })\n\nArgument `amount_in` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-09T12:36:28.990Z POST 1.186783999997715 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_salary_allow: {\n             create: [\n               {\n                 name: \"DA(%)\",\n                 wfe_date: \"1111-01-01\",\n                 amount_in: 20000\n               }\n             ]\n           },\n           emp_salary_deduction: {\n             create: [\n               {\n                 amount_in: 8400,\n                 name: \"EPF\",\n                 wfe_date: \"1111-01-01\",\n                 acnt_no: \"21212\"\n               },\n               {\n                 amount_in: 150,\n                 name: \"PT\",\n                 wfe_date: \"1111-11-01\",\n                 acnt_no: \"21212\"\n               },\n               {\n                 amount_in: 32500,\n                 name: \"IT\",\n                 wfe_date: \"1111-11-11\",\n                 acnt_no: \"21212\"\n               },\n               {\n                 amount_in: \"21212\",\n                 name: \"LIC Policy -1\",\n                 wfe_date: \"1111-11-11\",\n                 acnt_no: \"2212\"\n               },\n               {\n                 amount_in: null,\n                 name: null,\n                 wfe_date: null,\n                 acnt_no: null\n               }\n             ]\n           }\n         }\n       })\n\nArgument `amount_in`: Invalid value provided. Expected Float, provided String. "}
{"level":"error","message":"Date & Time:- 2024-04-09T12:42:30.324Z POST 1.0942329999961657 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_salary_allow: {\n             create: [\n               {\n                 name: \"DA(%)\",\n                 wfe_date: \"1111-11-11\",\n                 amount_in: 20000\n               }\n             ]\n           },\n           emp_salary_deduction: {\n             create: [\n               {\n                 amount_in: 8400,\n                 name: \"EPF\",\n                 wfe_date: \"1111-11-11\",\n                 acnt_no: \"2121\"\n               },\n               {\n                 amount_in: 150,\n                 name: \"PT\",\n                 wfe_date: \"1111-11-11\",\n                 acnt_no: \"211\"\n               },\n               {\n                 amount_in: 32500,\n                 name: \"IT\",\n                 wfe_date: \"1111-11-11\",\n                 acnt_no: \"212\"\n               },\n               {\n                 amount_in: \"021\",\n                 name: \"LIC Policy -1\",\n                 wfe_date: \"1111-11-11\",\n                 acnt_no: \"121\"\n               }\n             ]\n           }\n         }\n       })\n\nArgument `amount_in`: Invalid value provided. Expected Float, provided String. "}
{"level":"error","message":"Date & Time:- 2024-04-10T04:50:42.854Z POST 0.34795600000506965 /api/hrms/v1/employee/leave-update status = false, err = Record to update not found. "}
{"level":"error","message":"Date & Time:- 2024-04-10T04:51:48.771Z POST 0.29725600000529084 /api/hrms/v1/employee/leave-update status = false, err = \nInvalid `tx.employee_leave_details.update()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empLeave.dao.ts:167:46\n\n  164 //   })\n  165 // }\n  166 \n→ 167 return await tx.employee_leave_details.update({\n        where: {\n      +   id: Int\n        },\n        data: {\n          leave_status: undefined,\n          total_days: undefined\n        }\n      })\n\nArgument `id` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-10T06:23:51.631Z POST 0.3188429999863729 /api/hrms/v1/employee/leave status = false, err = \nInvalid `prisma.employee_leave_details.create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empLeave.dao.ts:51:62\n\n  48   },\n  49 };\n  50 \n→ 51 const leaveRequest = await prisma.employee_leave_details.create({\n       data: {\n         employee_id: \"EMP912e43\",\n         emp_leave_type_id: null,\n         leave_from: \"2024-04-08\",\n         leave_to: \"2024-04-14\",\n         total_days: 7,\n         leave_reason: \"aevad\",\n         file_upload: null,\n         half_day: false,\n         leave_status: undefined,\n     +   emp_leave_type: {\n     +     create: employee_leave_typeCreateWithoutEmployee_leave_detailsInput | employee_leave_typeUncheckedCreateWithoutEmployee_leave_detailsInput,\n     +     connectOrCreate: employee_leave_typeCreateOrConnectWithoutEmployee_leave_detailsInput,\n     +     connect: employee_leave_typeWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `emp_leave_type` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-10T06:23:52.750Z POST 0.23326100001577288 /api/hrms/v1/employee/leave status = false, err = \nInvalid `prisma.employee_leave_details.create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empLeave.dao.ts:51:62\n\n  48   },\n  49 };\n  50 \n→ 51 const leaveRequest = await prisma.employee_leave_details.create({\n       data: {\n         employee_id: \"EMP912e43\",\n         emp_leave_type_id: null,\n         leave_from: \"2024-04-08\",\n         leave_to: \"2024-04-14\",\n         total_days: 7,\n         leave_reason: \"aevad\",\n         file_upload: null,\n         half_day: false,\n         leave_status: undefined,\n     +   emp_leave_type: {\n     +     create: employee_leave_typeCreateWithoutEmployee_leave_detailsInput | employee_leave_typeUncheckedCreateWithoutEmployee_leave_detailsInput,\n     +     connectOrCreate: employee_leave_typeCreateOrConnectWithoutEmployee_leave_detailsInput,\n     +     connect: employee_leave_typeWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `emp_leave_type` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-10T06:23:53.325Z POST 0.22443800000473857 /api/hrms/v1/employee/leave status = false, err = \nInvalid `prisma.employee_leave_details.create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empLeave.dao.ts:51:62\n\n  48   },\n  49 };\n  50 \n→ 51 const leaveRequest = await prisma.employee_leave_details.create({\n       data: {\n         employee_id: \"EMP912e43\",\n         emp_leave_type_id: null,\n         leave_from: \"2024-04-08\",\n         leave_to: \"2024-04-14\",\n         total_days: 7,\n         leave_reason: \"aevad\",\n         file_upload: null,\n         half_day: false,\n         leave_status: undefined,\n     +   emp_leave_type: {\n     +     create: employee_leave_typeCreateWithoutEmployee_leave_detailsInput | employee_leave_typeUncheckedCreateWithoutEmployee_leave_detailsInput,\n     +     connectOrCreate: employee_leave_typeCreateOrConnectWithoutEmployee_leave_detailsInput,\n     +     connect: employee_leave_typeWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `emp_leave_type` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-10T06:23:53.581Z POST 0.21412499999860302 /api/hrms/v1/employee/leave status = false, err = \nInvalid `prisma.employee_leave_details.create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/employee/empLeave.dao.ts:51:62\n\n  48   },\n  49 };\n  50 \n→ 51 const leaveRequest = await prisma.employee_leave_details.create({\n       data: {\n         employee_id: \"EMP912e43\",\n         emp_leave_type_id: null,\n         leave_from: \"2024-04-08\",\n         leave_to: \"2024-04-14\",\n         total_days: 7,\n         leave_reason: \"aevad\",\n         file_upload: null,\n         half_day: false,\n         leave_status: undefined,\n     +   emp_leave_type: {\n     +     create: employee_leave_typeCreateWithoutEmployee_leave_detailsInput | employee_leave_typeUncheckedCreateWithoutEmployee_leave_detailsInput,\n     +     connectOrCreate: employee_leave_typeCreateOrConnectWithoutEmployee_leave_detailsInput,\n     +     connect: employee_leave_typeWhereUniqueInput\n     +   }\n       }\n     })\n\nArgument `emp_leave_type` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-12T08:04:05.161Z POST 0.4440920001361519 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_salary_allow: {\n             create: [\n               {\n                 name: \"HRA(%)\",\n                 wfe_date: \"1212-01-01\",\n                 amount_in: 3242\n               }\n             ]\n           },\n           emp_salary_deduction: {\n             create: [\n               {\n                 amount_in: \"032\",\n                 name: \"EPF\",\n                 wfe_date: \"1212-01-01\",\n                 acnt_no: \"4234\"\n               }\n             ]\n           }\n         }\n       })\n\nArgument `amount_in`: Invalid value provided. Expected Float, provided String. "}
{"level":"error","message":"Date & Time:- 2024-04-12T08:04:14.755Z POST 0.6073419998865575 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_salary_allow: {\n             create: [\n               {\n                 name: \"HRA(%)\",\n                 wfe_date: \"1212-01-01\",\n                 amount_in: 3242\n               }\n             ]\n           },\n           emp_salary_deduction: {\n             create: [\n               {\n                 amount_in: \"032\",\n                 name: \"EPF\",\n                 wfe_date: \"1212-01-01\",\n                 acnt_no: \"4234\"\n               }\n             ]\n           }\n         }\n       })\n\nArgument `amount_in`: Invalid value provided. Expected Float, provided String. "}
{"level":"error","message":"Date & Time:- 2024-04-12T08:04:55.727Z POST 0.6086939999368042 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_salary_allow: {\n             create: [\n               {\n                 name: \"HRA(%)\",\n                 wfe_date: \"1212-01-01\",\n                 amount_in: 3242\n               }\n             ]\n           },\n           emp_salary_deduction: {\n             create: [\n               {\n                 amount_in: \"032\",\n                 name: \"IT\",\n                 wfe_date: \"1111-11-11\",\n                 acnt_no: \"323\"\n               }\n             ]\n           }\n         }\n       })\n\nArgument `amount_in`: Invalid value provided. Expected Float, provided String. "}
{"level":"error","message":"Date & Time:- 2024-04-12T08:05:17.099Z POST 0.43330500018782914 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_salary_allow: {\n             create: [\n               {\n                 name: \"HRA(%)\",\n                 wfe_date: \"1212-01-01\",\n                 amount_in: 3242\n               }\n             ]\n           },\n           emp_salary_deduction: {\n             create: [\n               {\n                 amount_in: null,\n                 name: null,\n                 wfe_date: null,\n                 acnt_no: null\n               }\n             ]\n           }\n         }\n       })\n\nArgument `amount_in` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-12T08:06:04.741Z POST 0.47596599999815226 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_salary_allow: {\n             create: [\n               {\n                 name: \"HRA(%)\",\n                 wfe_date: \"1212-01-01\",\n                 amount_in: 3242\n               }\n             ]\n           },\n           emp_salary_deduction: {\n             create: [\n               {\n                 amount_in: \"45455\",\n                 name: \"ESIC\",\n                 wfe_date: \"2024-01-01\",\n                 acnt_no: \"4545\"\n               },\n               {\n                 amount_in: null,\n                 name: null,\n                 wfe_date: null,\n                 acnt_no: null\n               }\n             ]\n           }\n         }\n       })\n\nArgument `amount_in`: Invalid value provided. Expected Float, provided String. "}
{"level":"error","message":"Date & Time:- 2024-04-12T08:13:05.130Z POST 0.4425669996999204 /api/hrms/v1/employee/create status = false, err = \nInvalid `tx[tableName].create()` invocation in\n/home/krish/Desktop/mainJuidco/JuidcoHrms/backend/src/component/juidcoHrms/dao/empOnBoard.dao.ts:87:34\n\n  84 if (isMany) {\n  85   return await tx[tableName].createMany({ data });\n  86 } else {\n→ 87   return await tx[tableName].create({\n         data: {\n           emp_salary_allow: {\n             create: [\n               {\n                 name: \"DA\",\n                 wfe_date: \"2222-02-22\",\n                 amount_in: 20000\n               }\n             ]\n           },\n           emp_salary_deduction: {\n             create: [\n               {\n                 amount_in: 6240,\n                 name: \"EPF\",\n                 wfe_date: \"0222-02-22\",\n                 acnt_no: \"4324234\"\n               },\n               {\n                 amount_in: 150,\n                 name: \"PT\",\n                 wfe_date: \"2222-02-22\",\n                 acnt_no: \"4324234\"\n               },\n               {\n                 amount_in: 124800,\n                 name: \"IT\",\n                 wfe_date: \"2323-03-31\",\n                 acnt_no: \"4324234\"\n               },\n               {\n                 amount_in: 910,\n                 name: \"ESIC\",\n                 wfe_date: \"1212-02-02\",\n                 acnt_no: \"212\"\n               },\n               {\n                 amount_in: 212,\n                 name: \"LIC Policy- 2\",\n                 wfe_date: \"1212-02-02\",\n                 acnt_no: \"212\"\n               },\n               {\n                 amount_in: null,\n                 name: null,\n                 wfe_date: null,\n                 acnt_no: null\n               }\n             ]\n           }\n         }\n       })\n\nArgument `amount_in` is missing. "}
{"level":"error","message":"Date & Time:- 2024-04-12T08:14:53.704Z POST 0.4025779999792576 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (32, null, 2024-04-12, 2024-04-12 13:44:53.701, null, 0, 1, 2024-04-12 13:44:53.702, 2024-04-12 13:44:53.702).` "}
{"level":"error","message":"Date & Time:- 2024-04-12T11:03:33.203Z POST 0.5935260000042035 /api/hrms/v1/employee/attendance/create status = false, err = \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `23502`. Message: `Failing row contains (35, null, 2024-04-12, 2024-04-12 16:33:33.195, null, 0, 1, 2024-04-12 16:33:33.196, 2024-04-12 16:33:33.196).` "}
