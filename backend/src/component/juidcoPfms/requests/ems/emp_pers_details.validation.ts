import Joi from "joi";
import type { Employee } from "../../../../util/types/employee_management/employee.type";
import { Request } from "express";

// Validating request data
export const bankMasterValidation = Joi.object({
  name: Joi.string().required(),
  dob: Joi.date().required(),
  father_nm: Joi.string().required(),
  mother_nm: Joi.string().required(),
  spouse_nm: Joi.string().optional(),
  gender: Joi.string().required(),
  marital_status: Joi.string().required(),
  identification_mark_status: Joi.string().required(),
  height: Joi.number().required(),
  weight: Joi.number().required(),
  category: Joi.string().required(),
  physically_handicapped: Joi.boolean().required(),
  religion: Joi.string().required(),
  mobile_number: Joi.string().required(),
  email_id: Joi.string().email().required(),
  blood_group: Joi.string().required(),
  home_state: Joi.string().required(),
  home_district: Joi.string().required(),
  ltc_home_town: Joi.string().required(),
  nearest_railway_station: Joi.string().required(),
  health_status: Joi.string().required(),
  ph_type: Joi.string().required(),
  adhar_card_no: Joi.string().required(),
  voter_id_card: Joi.string().required(),
  mode_of_recruitment: Joi.string().required(),
  employee_type: Joi.string().required(),
  gpf_cps_pran_no: Joi.string().required(),
  emergency_contact_number: Joi.string().required(),
  emp_primary_skills: Joi.string().required(),
  emp_secondary_skills: Joi.string().required(),
  emp_employment_status: Joi.string().required(),
});

// arrange request data for store and update
export const employeePersonalDetailsRequestData = (req: Request): Employee => {
  return {
    name: req.body.name,
    dob: new Date(req.body.dob),
    father_nm: req.body.father_nm,
    mother_nm: req.body.mother_nm,
    spouse_nm: req.body.spouse_nm || null,
    gender: req.body.gender,
    marital_status: req.body.marital_status,
    identification_mark_status: req.body.identification_mark_status,
    height: req.body.height,
    weight: req.body.weight,
    category: req.body.category,
    physically_handicapped: req.body.physically_handicapped,
    religion: req.body.religion,
    mobile_number: req.body.mobile_number,
    email_id: req.body.email_id,
    blood_group: req.body.blood_group,
    home_state: req.body.home_state,
    home_district: req.body.home_district,
    ltc_home_town: req.body.ltc_home_town,
    nearest_railway_station: req.body.nearest_railway_station,
    health_status: req.body.health_status,
    ph_type: req.body.ph_type,
    adhar_card_no: req.body.adhar_card_no,
    voter_id_card: req.body.voter_id_card,
    mode_of_recruitment: req.body.mode_of_recruitment,
    employee_type: req.body.employee_type,
    gpf_cps_pran_no: req.body.gpf_cps_pran_no,
    emergency_contact_number: req.body.emergency_contact_number,
    emp_primary_skills: req.body.emp_primary_skills,
    emp_secondary_skills: req.body.emp_secondary_skills,
    emp_employment_status: req.body.emp_employment_status,
  };
};
